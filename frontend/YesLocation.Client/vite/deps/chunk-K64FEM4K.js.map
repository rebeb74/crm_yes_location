{
  "version": 3,
  "sources": ["../../../../../../node_modules/tinyduration/dist/index.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/parseNodeFactoryRegistry.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/serializationWriterFactoryRegistry.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/kiotaSerializer.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/kiotaJsonSerializer.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/parseNodeProxyFactory.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/serializationWriterProxyFactory.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedNode.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedNumber.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedArray.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedNull.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedObject.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedString.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/serialization/untypedBoolean.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/utils/enumUtils.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/utils/guidUtils.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/utils/inNodeEnv.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/inMemoryBackingStore.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/inMemoryBackingStoreFactory.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/backingStoreFactorySingleton.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/backingStoreParseNodeFactory.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/backingStoreSerializationWriterProxyFactory.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/backedModelProxy.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/store/backingStoreUtils.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/apiClientBuilder.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/version.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/internal/semver.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/internal/global-utils.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/diag/types.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/api/diag.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/baggage/utils.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/context/context.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeter.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/metrics/Metric.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/api/context.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/context-utils.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/span_kind.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/status.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-validators.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace/internal/tracestate-impl.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/context-api.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/diag-api.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeterProvider.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/api/metrics.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/metrics-api.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/api/propagation.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/propagation-api.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/api/trace.js", "../../../../../../node_modules/@opentelemetry/api/build/esm/trace-api.js", "../../../../../../node_modules/@std-uritemplate/std-uritemplate/dist/index.mjs", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/dateOnly.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/duration.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/recordWithCaseInsensitiveKeys.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/headers.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/multipartBody.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/timeOnly.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/requestInformation.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/getPathParameters.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/httpMethod.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/apiClientProxifier.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/apiError.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/authentication/allowedHostsValidator.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/authentication/validateProtocol.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/authentication/apiKeyAuthenticationProvider.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/authentication/anonymousAuthenticationProvider.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/authentication/baseBearerTokenAuthenticationProvider.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/nativeResponseHandler.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/nativeResponseWrapper.js", "../../../../../../node_modules/@microsoft/kiota-abstractions/dist/es/src/responseHandlerOptions.js"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = exports.parse = exports.MultipleFractionsError = exports.InvalidDurationError = void 0;\nconst DEFAULT_PARSE_CONFIG = {\n  allowMultipleFractions: true\n};\nconst units = [{\n  unit: 'years',\n  symbol: 'Y'\n}, {\n  unit: 'months',\n  symbol: 'M'\n}, {\n  unit: 'weeks',\n  symbol: 'W'\n}, {\n  unit: 'days',\n  symbol: 'D'\n}, {\n  unit: 'hours',\n  symbol: 'H'\n}, {\n  unit: 'minutes',\n  symbol: 'M'\n}, {\n  unit: 'seconds',\n  symbol: 'S'\n}];\n// Construction of the duration regex\nconst r = (name, unit) => `((?<${name}>-?\\\\d*[\\\\.,]?\\\\d+)${unit})?`;\nconst durationRegex = new RegExp(['(?<negative>-)?P', r('years', 'Y'), r('months', 'M'), r('weeks', 'W'), r('days', 'D'), '(T', r('hours', 'H'), r('minutes', 'M'), r('seconds', 'S'), ')?' // end optional time\n].join(''));\nfunction parseNum(s) {\n  if (s === '' || s === undefined || s === null) {\n    return undefined;\n  }\n  return parseFloat(s.replace(',', '.'));\n}\nexports.InvalidDurationError = new Error('Invalid duration');\nexports.MultipleFractionsError = new Error('Multiple fractions specified');\nfunction parse(durationStr, config = DEFAULT_PARSE_CONFIG) {\n  const match = durationRegex.exec(durationStr);\n  if (!match || !match.groups) {\n    throw exports.InvalidDurationError;\n  }\n  let empty = true;\n  let decimalFractionCount = 0;\n  const values = {};\n  for (const {\n    unit\n  } of units) {\n    if (match.groups[unit]) {\n      empty = false;\n      values[unit] = parseNum(match.groups[unit]);\n      if (!config.allowMultipleFractions && !Number.isInteger(values[unit])) {\n        decimalFractionCount++;\n        if (decimalFractionCount > 1) {\n          throw exports.MultipleFractionsError;\n        }\n      }\n    }\n  }\n  if (empty) {\n    throw exports.InvalidDurationError;\n  }\n  const duration = values;\n  if (match.groups.negative) {\n    duration.negative = true;\n  }\n  return duration;\n}\nexports.parse = parse;\nconst s = (number, component) => {\n  if (!number) {\n    return undefined;\n  }\n  let numberAsString = number.toString();\n  const exponentIndex = numberAsString.indexOf('e');\n  if (exponentIndex > -1) {\n    const magnitude = parseInt(numberAsString.slice(exponentIndex + 2), 10);\n    numberAsString = number.toFixed(magnitude + exponentIndex - 2);\n  }\n  return numberAsString + component;\n};\nfunction serialize(duration) {\n  if (!duration.years && !duration.months && !duration.weeks && !duration.days && !duration.hours && !duration.minutes && !duration.seconds) {\n    return 'PT0S';\n  }\n  return [duration.negative && '-', 'P', s(duration.years, 'Y'), s(duration.months, 'M'), s(duration.weeks, 'W'), s(duration.days, 'D'), (duration.hours || duration.minutes || duration.seconds) && 'T', s(duration.hours, 'H'), s(duration.minutes, 'M'), s(duration.seconds, 'S')].filter(Boolean).join('');\n}\nexports.serialize = serialize;", "/**\n * This factory holds a list of all the registered factories for the various types of nodes.\n */\nexport class ParseNodeFactoryRegistry {\n  constructor() {\n    /** List of factories that are registered by content type. */\n    this.contentTypeAssociatedFactories = new Map();\n  }\n  getValidContentType() {\n    throw new Error(\"The registry supports multiple content types. Get the registered factory instead.\");\n  }\n  getRootParseNode(contentType, content) {\n    if (!contentType) {\n      throw new Error(\"content type cannot be undefined or empty\");\n    }\n    if (!content) {\n      throw new Error(\"content cannot be undefined or empty\");\n    }\n    const vendorSpecificContentType = contentType.split(\";\")[0];\n    let factory = this.contentTypeAssociatedFactories.get(vendorSpecificContentType);\n    if (factory) {\n      return factory.getRootParseNode(vendorSpecificContentType, content);\n    }\n    const cleanedContentType = vendorSpecificContentType.replace(/[^/]+\\+/gi, \"\");\n    factory = this.contentTypeAssociatedFactories.get(cleanedContentType);\n    if (factory) {\n      return factory.getRootParseNode(cleanedContentType, content);\n    }\n    throw new Error(`Content type ${cleanedContentType} does not have a factory registered to be parsed`);\n  }\n}\n/** Default singleton instance of the registry to be used when registring new factories that should be available by default. */\nParseNodeFactoryRegistry.defaultInstance = new ParseNodeFactoryRegistry();\n", "/** This factory holds a list of all the registered factories for the various types of nodes. */\nexport class SerializationWriterFactoryRegistry {\n  constructor() {\n    /** List of factories that are registered by content type. */\n    this.contentTypeAssociatedFactories = new Map();\n  }\n  getValidContentType() {\n    throw new Error(\"The registry supports multiple content types. Get the registered factory instead.\");\n  }\n  getSerializationWriter(contentType) {\n    if (!contentType) {\n      throw new Error(\"content type cannot be undefined or empty\");\n    }\n    const vendorSpecificContentType = contentType.split(\";\")[0];\n    let factory = this.contentTypeAssociatedFactories.get(vendorSpecificContentType);\n    if (factory) {\n      return factory.getSerializationWriter(vendorSpecificContentType);\n    }\n    const cleanedContentType = vendorSpecificContentType.replace(/[^/]+\\+/gi, \"\");\n    factory = this.contentTypeAssociatedFactories.get(cleanedContentType);\n    if (factory) {\n      return factory.getSerializationWriter(cleanedContentType);\n    }\n    throw new Error(`Content type ${cleanedContentType} does not have a factory registered to be serialized`);\n  }\n}\n/** Default singleton instance of the registry to be used when registring new factories that should be available by default. */\nSerializationWriterFactoryRegistry.defaultInstance = new SerializationWriterFactoryRegistry();\n", "import { ParseNodeFactoryRegistry } from \"./parseNodeFactoryRegistry.js\";\nimport { SerializationWriterFactoryRegistry } from \"./serializationWriterFactoryRegistry.js\";\n/**\n * Serializes a parsable object into a buffer\n * @param contentType the content type to serialize to\n * @param value the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a buffer containing the serialized value\n */\nexport function serialize(contentType, value, serializationFunction) {\n  const writer = getSerializationWriter(contentType, value, serializationFunction);\n  writer.writeObjectValue(undefined, value, serializationFunction);\n  return writer.getSerializedContent();\n}\n/**\n * Serializes a parsable object into a string representation\n * @param contentType the content type to serialize to\n * @param value the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeToString(contentType, value, serializationFunction) {\n  const buffer = serialize(contentType, value, serializationFunction);\n  return getStringValueFromBuffer(buffer);\n}\n/**\n * Serializes a collection of parsable objects into a buffer\n * @param contentType the content type to serialize to\n * @param values the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeCollection(contentType, values, serializationFunction) {\n  const writer = getSerializationWriter(contentType, values, serializationFunction);\n  writer.writeCollectionOfObjectValues(undefined, values, serializationFunction);\n  return writer.getSerializedContent();\n}\n/**\n * Serializes a collection of parsable objects into a string representation\n * @param contentType the content type to serialize to\n * @param values the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeCollectionToString(contentType, values, serializationFunction) {\n  const buffer = serializeCollection(contentType, values, serializationFunction);\n  return getStringValueFromBuffer(buffer);\n}\n/**\n * Gets a serialization writer for a given content type\n * @param contentType the content type to serialize to\n * @param value the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns the serialization writer for the given content type\n */\nfunction getSerializationWriter(contentType, value, serializationFunction) {\n  if (!contentType) {\n    throw new Error(\"content type cannot be undefined or empty\");\n  }\n  if (!value) {\n    throw new Error(\"value cannot be undefined\");\n  }\n  if (!serializationFunction) {\n    throw new Error(\"serializationFunction cannot be undefined\");\n  }\n  return SerializationWriterFactoryRegistry.defaultInstance.getSerializationWriter(contentType);\n}\n/**\n * Gets a string value from a buffer\n * @param buffer the buffer to get a string from\n * @returns the string representation of the buffer\n */\nfunction getStringValueFromBuffer(buffer) {\n  const decoder = new TextDecoder();\n  return decoder.decode(buffer);\n}\n/**\n * Deserializes a buffer into a parsable object\n * @param contentType the content type to serialize to\n * @param bufferOrString the value to serialize\n * @param factory the factory for the model type\n * @returns the deserialized parsable object\n */\nexport function deserialize(contentType, bufferOrString, factory) {\n  if (typeof bufferOrString === \"string\") {\n    bufferOrString = getBufferFromString(bufferOrString);\n  }\n  const reader = getParseNode(contentType, bufferOrString, factory);\n  return reader.getObjectValue(factory);\n}\n/**\n * Deserializes a buffer into a parsable object\n * @param contentType the content type to serialize to\n * @param buffer the value to deserialize\n * @param factory the factory for the model type\n * @returns the deserialized parsable object\n */\nfunction getParseNode(contentType, buffer, factory) {\n  if (!contentType) {\n    throw new Error(\"content type cannot be undefined or empty\");\n  }\n  if (!buffer) {\n    throw new Error(\"buffer cannot be undefined\");\n  }\n  if (!factory) {\n    throw new Error(\"factory cannot be undefined\");\n  }\n  return ParseNodeFactoryRegistry.defaultInstance.getRootParseNode(contentType, buffer);\n}\n/**\n * Deserializes a buffer into a a collection of parsable object\n * @param contentType the content type to serialize to\n * @param bufferOrString the value to serialize\n * @param factory the factory for the model type\n * @returns the deserialized collection of parsable objects\n */\nexport function deserializeCollection(contentType, bufferOrString, factory) {\n  if (typeof bufferOrString === \"string\") {\n    bufferOrString = getBufferFromString(bufferOrString);\n  }\n  const reader = getParseNode(contentType, bufferOrString, factory);\n  return reader.getCollectionOfObjectValues(factory);\n}\n/**\n * Deserializes a buffer into a a collection of parsable object\n * @param value the string to get a buffer from\n * @returns the ArrayBuffer representation of the string\n */\nfunction getBufferFromString(value) {\n  const encoder = new TextEncoder();\n  return encoder.encode(value).buffer;\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { deserialize, deserializeCollection, serialize, serializeCollection, serializeCollectionToString as serializeCollectionAsString, serializeToString as serializeAsString } from \"./kiotaSerializer.js\";\nconst jsonContentType = \"application/json\";\n/**\n * Serializes a parsable object into a buffer\n * @param value the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a buffer containing the serialized value\n */\nexport function serializeToJson(value, serializationFunction) {\n  return serialize(jsonContentType, value, serializationFunction);\n}\n/**\n * Serializes a parsable object into a string representation\n * @param value the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeToJsonAsString(value, serializationFunction) {\n  return serializeAsString(jsonContentType, value, serializationFunction);\n}\n/**\n * Serializes a collection of parsable objects into a buffer\n * @param values the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeCollectionToJson(values, serializationFunction) {\n  return serializeCollection(jsonContentType, values, serializationFunction);\n}\n/**\n * Serializes a collection of parsable objects into a string representation\n * @param values the value to serialize\n * @param serializationFunction the serialization function for the model type\n * @returns a string representing the serialized value\n */\nexport function serializeCollectionToJsonAsString(values, serializationFunction) {\n  return serializeCollectionAsString(jsonContentType, values, serializationFunction);\n}\n/**\n * Deserializes a buffer into a parsable object\n * @param bufferOrString the value to serialize\n * @param factory the factory for the model type\n * @returns the deserialized parsable object\n */\nexport function deserializeFromJson(bufferOrString, factory) {\n  return deserialize(jsonContentType, bufferOrString, factory);\n}\n/**\n * Deserializes a buffer into a a collection of parsable object\n * @param bufferOrString the value to serialize\n * @param factory the factory for the model type\n * @returns the deserialized collection of parsable objects\n */\nexport function deserializeCollectionFromJson(bufferOrString, factory) {\n  return deserializeCollection(jsonContentType, bufferOrString, factory);\n}\n", "/** Proxy factory that allows the composition of before and after callbacks on existing factories. */\nexport class ParseNodeProxyFactory {\n  getValidContentType() {\n    return this._concrete.getValidContentType();\n  }\n  /**\n   * Creates a new proxy factory that wraps the specified concrete factory while composing the before and after callbacks.\n   * @param _concrete the concrete factory to wrap\n   * @param _onBefore the callback to invoke before the deserialization of any model object.\n   * @param _onAfter the callback to invoke after the deserialization of any model object.\n   */\n  constructor(_concrete, _onBefore, _onAfter) {\n    this._concrete = _concrete;\n    this._onBefore = _onBefore;\n    this._onAfter = _onAfter;\n    if (!_concrete) {\n      throw new Error(\"_concrete cannot be undefined\");\n    }\n  }\n  getRootParseNode(contentType, content) {\n    const node = this._concrete.getRootParseNode(contentType, content);\n    const originalBefore = node.onBeforeAssignFieldValues;\n    const originalAfter = node.onAfterAssignFieldValues;\n    node.onBeforeAssignFieldValues = value => {\n      if (this._onBefore) this._onBefore(value);\n      if (originalBefore) originalBefore(value);\n    };\n    node.onAfterAssignFieldValues = value => {\n      if (this._onAfter) this._onAfter(value);\n      if (originalAfter) originalAfter(value);\n    };\n    return node;\n  }\n}\n", "/** Proxy factory that allows the composition of before and after callbacks on existing factories. */\nexport class SerializationWriterProxyFactory {\n  getValidContentType() {\n    return this._concrete.getValidContentType();\n  }\n  /**\n   * Creates a new proxy factory that wraps the specified concrete factory while composing the before and after callbacks.\n   * @param _concrete the concrete factory to wrap\n   * @param _onBefore the callback to invoke before the serialization of any model object.\n   * @param _onAfter the callback to invoke after the serialization of any model object.\n   * @param _onStart the callback to invoke when the serialization of a model object starts\n   */\n  constructor(_concrete, _onBefore, _onAfter, _onStart) {\n    this._concrete = _concrete;\n    this._onBefore = _onBefore;\n    this._onAfter = _onAfter;\n    this._onStart = _onStart;\n    if (!_concrete) {\n      throw new Error(\"_concrete cannot be undefined\");\n    }\n  }\n  getSerializationWriter(contentType) {\n    const writer = this._concrete.getSerializationWriter(contentType);\n    const originalBefore = writer.onBeforeObjectSerialization;\n    const originalAfter = writer.onAfterObjectSerialization;\n    const originalStart = writer.onStartObjectSerialization;\n    writer.onBeforeObjectSerialization = value => {\n      if (this._onBefore) this._onBefore(value);\n      if (originalBefore) originalBefore(value);\n    };\n    writer.onAfterObjectSerialization = value => {\n      if (this._onAfter) this._onAfter(value);\n      if (originalAfter) originalAfter(value);\n    };\n    writer.onStartObjectSerialization = (value, writer_) => {\n      if (this._onStart) this._onStart(value, writer_);\n      if (originalStart) originalStart(value, writer_);\n    };\n    return writer;\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * Factory to create an UntypedNode from a string during deserialization.\n * @param _parseNode The ParseNode to deserialize.\n * @returns A function that can deserialize an UntypedNode.\n */\nexport const createUntypedNodeFromDiscriminatorValue = _parseNode => {\n  return deserializeIntoUntypedNode;\n};\n/**\n * Type guard to assert that an object instance is an UntypedNode.\n * @param node The object to check.\n * @returns boolean indicating if the node is an UntypedNode.\n */\nexport const isUntypedNode = node => {\n  const potentialNode = node;\n  return (potentialNode === null || potentialNode === void 0 ? void 0 : potentialNode.getValue) !== undefined;\n};\n/**\n * The deserialization implementation for UntypedNode.\n * @param untypedNode - The UntypedNode to deserialize.\n * @returns A function that can deserialize a ParseNode into the provided UntypedNode.\n */\nexport const deserializeIntoUntypedNode = (untypedNode = {}) => {\n  return {\n    value: _n => {\n      untypedNode.value = null;\n    },\n    getValue: _n => {\n      untypedNode.getValue = () => untypedNode.value;\n    }\n  };\n};\n/**\n * The serialization implementation for UntypedNode.\n * @param _writer - The serialization writer to use.\n * @param _errorDetails - The error details to include in the serialization.\n */\nexport const serializeUntypedNode = (_writer, _errorDetails = {}) => {\n  return;\n};\n", "/**\n * Type guard to assert that an object instance is an UntypedNumber.\n * @param node The object to check.\n * @returns boolean indicating if the node is an UntypedNumber.\n */\nexport function isUntypedNumber(node) {\n  const proposedNode = node;\n  return proposedNode && typeof proposedNode.value === \"number\";\n}\n/**\n * Factory to create an UntypedNumber from a number.\n * @param value The number value to create from.\n * @returns The created UntypedNumber.\n */\nexport function createUntypedNumber(value) {\n  return {\n    value,\n    getValue: () => value\n  };\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { isUntypedNode } from \"./untypedNode.js\";\n/**\n * Type guard to assert that an UntypedNode instance is an UntypedArray.\n * @param node The UntypedNode to check.\n * @returns boolean indicating if the node is an UntypedArray.\n */\nexport const isUntypedArray = node => {\n  const proposedNode = node;\n  return proposedNode && proposedNode.value instanceof Array && proposedNode.value.every(item => isUntypedNode(item));\n};\n/**\n * Factory to create an UntypedArray from an array of UntypedNodes.\n * @param value The value to create from.\n * @returns The created UntypedArray.\n */\nexport const createUntypedArray = value => {\n  return {\n    value,\n    getValue: () => value\n  };\n};\n", "/**\n * Type guard to assert that an object instance is an UntypedNull.\n * @param node The object to check.\n * @returns boolean indicating if the node is an UntypedNull.\n */\nexport function isUntypedNull(node) {\n  return node.value === null;\n}\n/**\n * Factory to create an UntypedNull from a boolean.\n * @returns The created UntypedNull.\n */\nexport function createUntypedNull() {\n  return {\n    value: null,\n    getValue: () => null\n  };\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { isUntypedNode } from \"./untypedNode.js\";\n/**\n * Type guard to assert that an object instance is an UntypedObject.\n * @param node The object to check.\n * @returns boolean indicating if the node is an UntypedObject.\n */\nexport const isUntypedObject = node => {\n  const proposedNode = node;\n  return proposedNode && proposedNode.value instanceof Object && proposedNode.value instanceof Array === false && Object.values(proposedNode.value).every(item => isUntypedNode(item));\n};\n/**\n * Factory to create an UntypedObject from a Record<string, UntypedNode>.\n * @param value The Record<string, UntypedNode> value to create from.\n * @returns The created UntypedObject.\n */\nexport const createUntypedObject = value => {\n  return {\n    value,\n    getValue: () => value\n  };\n};\n", "/**\n * Type guard to assert that an object instance is an UntypedString.\n * @param node The object to check.\n * @returns boolean indicating if the node is an UntypedString.\n */\nexport function isUntypedString(node) {\n  const proposedNode = node;\n  return proposedNode && typeof proposedNode.value === \"string\";\n}\n/**\n * Factory to create an UntypedString from a string.\n * @param value The string value to create from.\n * @returns The created UntypedString.\n */\nexport function createUntypedString(value) {\n  return {\n    value,\n    getValue: () => value\n  };\n}\n", "/**\n * Type guard to assert that an UntypedNode instance is an UntypedBoolean.\n * @param node The UntypedNode to check.\n * @returns boolean indicating if the node is an UntypedBoolean.\n */\nexport function isUntypedBoolean(node) {\n  const proposedNode = node;\n  return proposedNode && typeof proposedNode.value === \"boolean\";\n}\n/**\n * Factory to create an UntypedBoolean from a boolean.\n * @param value The boolean value to create from.\n * @returns The created UntypedBoolean.\n */\nexport function createUntypedBoolean(value) {\n  return {\n    value,\n    getValue: () => value\n  };\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nconst reverseRecord = input => {\n  const entries = Object.entries(input).map(([key, value]) => [value, key]);\n  return Object.fromEntries(entries);\n};\n/**\n * Factory to create an UntypedString from a string.\n * @param stringValue The string value to lookup the enum value from.\n * @param originalType The type definition of the enum.\n * @returns The enum value.\n */\nexport const getEnumValueFromStringValue = (stringValue, originalType) => {\n  const reversed = reverseRecord(originalType);\n  return originalType[reversed[stringValue]];\n};\n", "const guidValidator = /^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$/i;\n/**\n * Checks if the string is a valid GUID.\n * @param source the string to check.\n * @returns unchanged string if it is a valid GUID; otherwise, undefined.\n */\nexport const parseGuidString = source => {\n  if (source && guidValidator.test(source)) {\n    return source;\n  }\n  return undefined;\n};\n/**\n * Generates a GUID.\n * @returns a GUID.\n */\nexport const createGuid = () => [gen(2), gen(1), gen(1), gen(1), gen(3)].join(\"-\");\n/**\n * Generates a empty GUID.\n * @returns a empty GUID.\n */\nexport const createEmptyGuid = () => \"00000000-0000-0000-0000-000000000000\";\n/**\n * Generates a part of a GUID.\n * @param count the number of 2 byte chunks to generate.\n * @returns a part of a GUID.\n */\nconst gen = count => {\n  let out = \"\";\n  for (let i = 0; i < count; i++) {\n    // eslint-disable-next-line no-bitwise\n    out += ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  }\n  return out;\n};\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * Checks if the runtime is in a browser or node environment.\n * @returns true if in node, else false as it is running in a browser.\n */\nexport const inNodeEnv = () => {\n  try {\n    return !!Buffer && !!process;\n  } catch (err) {\n    // ReferenceError is thrown if you use node js APIs in a browser,\n    // cast it to a false if that's the case.\n    return !(err instanceof ReferenceError);\n  }\n};\n", "import { createGuid } from \"../utils/index.js\";\n/** In-memory implementation of the backing store. Allows for dirty tracking of changes. */\nexport class InMemoryBackingStore {\n  constructor() {\n    this.subscriptions = new Map();\n    this.store = new Map();\n    this.returnOnlyChangedValues = false;\n    this._initializationCompleted = true;\n  }\n  get(key) {\n    const wrapper = this.store.get(key);\n    if (wrapper && (this.returnOnlyChangedValues && wrapper.changed || !this.returnOnlyChangedValues)) {\n      return wrapper.value;\n    }\n    return undefined;\n  }\n  set(key, value) {\n    const oldValueWrapper = this.store.get(key);\n    const oldValue = oldValueWrapper === null || oldValueWrapper === void 0 ? void 0 : oldValueWrapper.value;\n    if (oldValueWrapper) {\n      oldValueWrapper.value = value;\n      oldValueWrapper.changed = this.initializationCompleted;\n    } else {\n      this.store.set(key, {\n        changed: this.initializationCompleted,\n        value\n      });\n    }\n    this.subscriptions.forEach(sub => {\n      sub(key, oldValue, value);\n    });\n  }\n  enumerate() {\n    let filterableArray = [...this.store.entries()];\n    if (this.returnOnlyChangedValues) {\n      filterableArray = filterableArray.filter(([_, v]) => v.changed);\n    }\n    return filterableArray.map(([key, value]) => {\n      return {\n        key,\n        value\n      };\n    });\n  }\n  enumerateKeysForValuesChangedToNull() {\n    const keys = [];\n    for (const [key, entry] of this.store) {\n      if (entry.changed && !entry.value) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  }\n  subscribe(callback, subscriptionId) {\n    if (!callback) {\n      throw new Error(\"callback cannot be undefined\");\n    }\n    subscriptionId = subscriptionId !== null && subscriptionId !== void 0 ? subscriptionId : createGuid();\n    this.subscriptions.set(subscriptionId, callback);\n    return subscriptionId;\n  }\n  unsubscribe(subscriptionId) {\n    this.subscriptions.delete(subscriptionId);\n  }\n  clear() {\n    this.store.clear();\n  }\n  set initializationCompleted(value) {\n    this._initializationCompleted = value;\n    this.store.forEach(v => {\n      v.changed = !value;\n    });\n  }\n  get initializationCompleted() {\n    return this._initializationCompleted;\n  }\n}\n", "import { InMemoryBackingStore } from \"./inMemoryBackingStore.js\";\n/** This class is used to create instances of InMemoryBackingStore */\nexport class InMemoryBackingStoreFactory {\n  createBackingStore() {\n    return new InMemoryBackingStore();\n  }\n}\n", "import { InMemoryBackingStoreFactory } from \"./inMemoryBackingStoreFactory.js\";\nexport class BackingStoreFactorySingleton {}\nBackingStoreFactorySingleton.instance = new InMemoryBackingStoreFactory();\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { ParseNodeProxyFactory } from \"../serialization/index.js\";\n/** Proxy implementation of ParseNodeFactory for the backing store that automatically sets the state of the backing store when deserializing. */\nexport class BackingStoreParseNodeFactory extends ParseNodeProxyFactory {\n  /**\n   * Initializes a new instance of the BackingStoreParseNodeFactory class given the concrete implementation.\n   * @param concrete the concrete implementation of the ParseNodeFactory\n   */\n  constructor(concrete) {\n    super(concrete, value => {\n      const backedModel = value;\n      if (backedModel === null || backedModel === void 0 ? void 0 : backedModel.backingStore) {\n        backedModel.backingStore.initializationCompleted = false;\n      }\n    }, value => {\n      const backedModel = value;\n      if (backedModel === null || backedModel === void 0 ? void 0 : backedModel.backingStore) {\n        backedModel.backingStore.initializationCompleted = true;\n      }\n    });\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { SerializationWriterProxyFactory } from \"../serialization/index.js\";\n/** Proxy implementation of SerializationWriterFactory for the backing store that automatically sets the state of the backing store when serializing. */\nexport class BackingStoreSerializationWriterProxyFactory extends SerializationWriterProxyFactory {\n  /**\n   * Initializes a new instance of the BackingStoreSerializationWriterProxyFactory class given a concrete implementation of SerializationWriterFactory.\n   * @param concrete a concrete implementation of SerializationWriterFactory to wrap.\n   */\n  constructor(concrete) {\n    super(concrete, value => {\n      const backedModel = value;\n      if (backedModel === null || backedModel === void 0 ? void 0 : backedModel.backingStore) {\n        backedModel.backingStore.returnOnlyChangedValues = true;\n      }\n    }, value => {\n      const backedModel = value;\n      if (backedModel === null || backedModel === void 0 ? void 0 : backedModel.backingStore) {\n        backedModel.backingStore.returnOnlyChangedValues = false;\n        backedModel.backingStore.initializationCompleted = true;\n      }\n    }, (value, writer) => {\n      const backedModel = value;\n      if (backedModel === null || backedModel === void 0 ? void 0 : backedModel.backingStore) {\n        const keys = backedModel.backingStore.enumerateKeysForValuesChangedToNull();\n        for (const key of keys) {\n          writer.writeNullValue(key);\n        }\n      }\n    });\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { BackingStoreFactorySingleton } from \"./backingStoreFactorySingleton.js\";\n// A method that creates a ProxyHandler for a generic model T and attaches it to a backing store.\nexport const createBackedModelProxyHandler = () => {\n  // Each model has a backing store that is created by the BackingStoreFactorySingleton\n  const backingStore = BackingStoreFactorySingleton.instance.createBackingStore();\n  /**\n   * The ProxyHandler for the model.\n   */\n  const handler = {\n    get: (_target, prop) => {\n      if (prop === \"backingStore\") {\n        return backingStore;\n      }\n      return backingStore.get(prop.toString());\n    },\n    set: (target, prop, value, receiver) => {\n      if (prop === \"backingStore\") {\n        console.warn(`BackingStore - Ignoring attempt to set 'backingStore' property`);\n        return true;\n      }\n      // set the value on the target object as well to allow it to have keys needed for serialization/deserialization\n      Reflect.set(target, prop, value, receiver);\n      backingStore.set(prop.toString(), value);\n      return true;\n    }\n  };\n  return handler;\n};\n", "export const BackingStoreKey = \"backingStoreEnabled\";\n/**\n * Check if the object is an instance a BackedModel\n * @param fields The fields of the object\n * @returns boolean indicating if the object is a BackedModel\n */\nexport function isBackingStoreEnabled(fields) {\n  // Check if the fields contain the backing store key\n  return Object.keys(fields).includes(BackingStoreKey);\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { ParseNodeFactoryRegistry, SerializationWriterFactoryRegistry } from \"./serialization/index.js\";\nimport { BackingStoreParseNodeFactory, BackingStoreSerializationWriterProxyFactory } from \"./store/index.js\";\n/**\n * Registers the default serializer to the registry.\n * @param type the class of the factory to be registered.\n */\nexport function registerDefaultSerializer(type) {\n  if (!type) throw new Error(\"Type is required\");\n  const serializer = new type();\n  SerializationWriterFactoryRegistry.defaultInstance.contentTypeAssociatedFactories.set(serializer.getValidContentType(), serializer);\n}\n/**\n * Registers the default deserializer to the registry.\n * @param type the class of the factory to be registered.\n */\nexport function registerDefaultDeserializer(type) {\n  if (!type) throw new Error(\"Type is required\");\n  const deserializer = new type();\n  ParseNodeFactoryRegistry.defaultInstance.contentTypeAssociatedFactories.set(deserializer.getValidContentType(), deserializer);\n}\n/**\n * Enables the backing store on default serialization writers and the given serialization writer.\n * @param original The serialization writer to enable the backing store on.\n * @returns A new serialization writer with the backing store enabled.\n */\nexport function enableBackingStoreForSerializationWriterFactory(original) {\n  if (!original) throw new Error(\"Original must be specified\");\n  let result = original;\n  if (original instanceof SerializationWriterFactoryRegistry) {\n    enableBackingStoreForSerializationRegistry(original);\n  } else {\n    result = new BackingStoreSerializationWriterProxyFactory(original);\n  }\n  enableBackingStoreForSerializationRegistry(SerializationWriterFactoryRegistry.defaultInstance);\n  enableBackingStoreForParseNodeRegistry(ParseNodeFactoryRegistry.defaultInstance);\n  return result;\n}\n/**\n * Enables the backing store on default parse node factories and the given parse node factory.\n * @param original The parse node factory to enable the backing store on.\n * @returns A new parse node factory with the backing store enabled.\n */\nexport function enableBackingStoreForParseNodeFactory(original) {\n  if (!original) throw new Error(\"Original must be specified\");\n  let result = original;\n  if (original instanceof ParseNodeFactoryRegistry) {\n    enableBackingStoreForParseNodeRegistry(original);\n  } else {\n    result = new BackingStoreParseNodeFactory(original);\n  }\n  enableBackingStoreForParseNodeRegistry(ParseNodeFactoryRegistry.defaultInstance);\n  return result;\n}\n/**\n * Enables the backing store on the given parse node factory registry.\n * @param registry The parse node factory registry to enable the backing store on.\n */\nfunction enableBackingStoreForParseNodeRegistry(registry) {\n  for (const [k, v] of registry.contentTypeAssociatedFactories) {\n    if (!(v instanceof BackingStoreParseNodeFactory || v instanceof ParseNodeFactoryRegistry)) {\n      registry.contentTypeAssociatedFactories.set(k, new BackingStoreParseNodeFactory(v));\n    }\n  }\n}\n/**\n * Enables the backing store on the given serialization factory registry.\n * @param registry The serialization factory registry to enable the backing store on.\n */\nfunction enableBackingStoreForSerializationRegistry(registry) {\n  for (const [k, v] of registry.contentTypeAssociatedFactories) {\n    if (!(v instanceof BackingStoreSerializationWriterProxyFactory || v instanceof SerializationWriterFactoryRegistry)) {\n      registry.contentTypeAssociatedFactories.set(k, new BackingStoreSerializationWriterProxyFactory(v));\n    }\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis : typeof self === 'object' ? self : typeof window === 'object' ? window : typeof global === 'object' ? global : {};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.0';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n  var acceptedVersions = new Set([ownVersion]);\n  var rejectedVersions = new Set();\n  var myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return function () {\n      return false;\n    };\n  }\n  var ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4]\n  };\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion) {\n      return globalVersion === ownVersion;\n    };\n  }\n  function _reject(v) {\n    rejectedVersions.add(v);\n    return false;\n  }\n  function _accept(v) {\n    acceptedVersions.add(v);\n    return true;\n  }\n  return function isCompatible(globalVersion) {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n    var globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n    var globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4]\n    };\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n    if (ownVersionParsed.major === 0) {\n      if (ownVersionParsed.minor === globalVersionParsed.minor && ownVersionParsed.patch <= globalVersionParsed.patch) {\n        return _accept(globalVersion);\n      }\n      return _reject(globalVersion);\n    }\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n    return _reject(globalVersion);\n  };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n  var _a;\n  if (allowOverride === void 0) {\n    allowOverride = false;\n  }\n  var api = _global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n    version: VERSION\n  };\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n    diag.error(err.stack || err.message);\n    return false;\n  }\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    var err = new Error(\"@opentelemetry/api: Registration of version v\" + api.version + \" for \" + type + \" does not match previously registered API v\" + VERSION);\n    diag.error(err.stack || err.message);\n    return false;\n  }\n  api[type] = instance;\n  diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n  return true;\n}\nexport function getGlobal(type) {\n  var _a, _b;\n  var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n  diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n  var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n  if (api) {\n    delete api[type];\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */function () {\n  function DiagComponentLogger(props) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n  DiagComponentLogger.prototype.debug = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return logProxy('debug', this._namespace, args);\n  };\n  DiagComponentLogger.prototype.error = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return logProxy('error', this._namespace, args);\n  };\n  DiagComponentLogger.prototype.info = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return logProxy('info', this._namespace, args);\n  };\n  DiagComponentLogger.prototype.warn = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return logProxy('warn', this._namespace, args);\n  };\n  DiagComponentLogger.prototype.verbose = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return logProxy('verbose', this._namespace, args);\n  };\n  return DiagComponentLogger;\n}();\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n  var logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n  args.unshift(namespace);\n  return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n  /** Identifies an error scenario */\n  DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n  /** Identifies a warning scenario */\n  DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n  /** General informational log message */\n  DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n  /** General debug log message */\n  DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n  /** Used to set the logging level to include all logging */\n  DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n  // In case the logger is null or undefined\n  logger = logger || {};\n  function _filterFunc(funcName, theLevel) {\n    var theFunc = logger[funcName];\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE)\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */function () {\n  /**\n   * Private internal constructor\n   * @private\n   */\n  function DiagAPI() {\n    function _logProxy(funcName) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n      };\n    }\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    var self = this;\n    // DiagAPI specific functions\n    var setLogger = function (logger, optionsOrLogLevel) {\n      var _a, _b, _c;\n      if (optionsOrLogLevel === void 0) {\n        optionsOrLogLevel = {\n          logLevel: DiagLogLevel.INFO\n        };\n      }\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n        self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n        return false;\n      }\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel\n        };\n      }\n      var oldLogger = getGlobal('diag');\n      var newLogger = createLogLevelDiagLogger((_b = optionsOrLogLevel.logLevel) !== null && _b !== void 0 ? _b : DiagLogLevel.INFO, logger);\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        var stack = (_c = new Error().stack) !== null && _c !== void 0 ? _c : '<failed to generate stacktrace>';\n        oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n        newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n      }\n      return registerGlobal('diag', newLogger, self, true);\n    };\n    self.setLogger = setLogger;\n    self.disable = function () {\n      unregisterGlobal(API_NAME, self);\n    };\n    self.createComponentLogger = function (options) {\n      return new DiagComponentLogger(options);\n    };\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n  /** Get the singleton instance of the DiagAPI API */\n  DiagAPI.instance = function () {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n    return this._instance;\n  };\n  return DiagAPI;\n}();\nexport { DiagAPI };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar BaggageImpl = /** @class */function () {\n  function BaggageImpl(entries) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n  BaggageImpl.prototype.getEntry = function (key) {\n    var entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n    return Object.assign({}, entry);\n  };\n  BaggageImpl.prototype.getAllEntries = function () {\n    return Array.from(this._entries.entries()).map(function (_a) {\n      var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n      return [k, v];\n    });\n  };\n  BaggageImpl.prototype.setEntry = function (key, entry) {\n    var newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  };\n  BaggageImpl.prototype.removeEntry = function (key) {\n    var newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  };\n  BaggageImpl.prototype.removeEntries = function () {\n    var e_1, _a;\n    var keys = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      keys[_i] = arguments[_i];\n    }\n    var newBaggage = new BaggageImpl(this._entries);\n    try {\n      for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n        var key = keys_1_1.value;\n        newBaggage._entries.delete(key);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return newBaggage;\n  };\n  BaggageImpl.prototype.clear = function () {\n    return new BaggageImpl();\n  };\n  return BaggageImpl;\n}();\nexport { BaggageImpl };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n  if (entries === void 0) {\n    entries = {};\n  }\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n  if (typeof str !== 'string') {\n    diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n    str = '';\n  }\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString: function () {\n      return str;\n    }\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\nvar BaseContext = /** @class */function () {\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  function BaseContext(parentContext) {\n    // for minification\n    var self = this;\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n    self.getValue = function (key) {\n      return self._currentContext.get(key);\n    };\n    self.setValue = function (key, value) {\n      var context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n    self.deleteValue = function (key) {\n      var context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n  return BaseContext;\n}();\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */function () {\n  function NoopMeter() {}\n  /**\n   * @see {@link Meter.createGauge}\n   */\n  NoopMeter.prototype.createGauge = function (_name, _options) {\n    return NOOP_GAUGE_METRIC;\n  };\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  NoopMeter.prototype.createHistogram = function (_name, _options) {\n    return NOOP_HISTOGRAM_METRIC;\n  };\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  NoopMeter.prototype.createCounter = function (_name, _options) {\n    return NOOP_COUNTER_METRIC;\n  };\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  };\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  NoopMeter.prototype.createObservableGauge = function (_name, _options) {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  };\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  NoopMeter.prototype.createObservableCounter = function (_name, _options) {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  };\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options) {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  };\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  NoopMeter.prototype.addBatchObservableCallback = function (_callback, _observables) {};\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  NoopMeter.prototype.removeBatchObservableCallback = function (_callback) {};\n  return NoopMeter;\n}();\nexport { NoopMeter };\nvar NoopMetric = /** @class */function () {\n  function NoopMetric() {}\n  return NoopMetric;\n}();\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */function (_super) {\n  __extends(NoopCounterMetric, _super);\n  function NoopCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopCounterMetric.prototype.add = function (_value, _attributes) {};\n  return NoopCounterMetric;\n}(NoopMetric);\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */function (_super) {\n  __extends(NoopUpDownCounterMetric, _super);\n  function NoopUpDownCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) {};\n  return NoopUpDownCounterMetric;\n}(NoopMetric);\nexport { NoopUpDownCounterMetric };\nvar NoopGaugeMetric = /** @class */function (_super) {\n  __extends(NoopGaugeMetric, _super);\n  function NoopGaugeMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopGaugeMetric.prototype.record = function (_value, _attributes) {};\n  return NoopGaugeMetric;\n}(NoopMetric);\nexport { NoopGaugeMetric };\nvar NoopHistogramMetric = /** @class */function (_super) {\n  __extends(NoopHistogramMetric, _super);\n  function NoopHistogramMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopHistogramMetric.prototype.record = function (_value, _attributes) {};\n  return NoopHistogramMetric;\n}(NoopMetric);\nexport { NoopHistogramMetric };\nvar NoopObservableMetric = /** @class */function () {\n  function NoopObservableMetric() {}\n  NoopObservableMetric.prototype.addCallback = function (_callback) {};\n  NoopObservableMetric.prototype.removeCallback = function (_callback) {};\n  return NoopObservableMetric;\n}();\nexport { NoopObservableMetric };\nvar NoopObservableCounterMetric = /** @class */function (_super) {\n  __extends(NoopObservableCounterMetric, _super);\n  function NoopObservableCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return NoopObservableCounterMetric;\n}(NoopObservableMetric);\nexport { NoopObservableCounterMetric };\nvar NoopObservableGaugeMetric = /** @class */function (_super) {\n  __extends(NoopObservableGaugeMetric, _super);\n  function NoopObservableGaugeMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return NoopObservableGaugeMetric;\n}(NoopObservableMetric);\nexport { NoopObservableGaugeMetric };\nvar NoopObservableUpDownCounterMetric = /** @class */function (_super) {\n  __extends(NoopObservableUpDownCounterMetric, _super);\n  function NoopObservableUpDownCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return NoopObservableUpDownCounterMetric;\n}(NoopObservableMetric);\nexport { NoopObservableUpDownCounterMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter() {\n  return NOOP_METER;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Type of value. It describes how the data is reported. */\nexport var ValueType;\n(function (ValueType) {\n  ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n  ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType || (ValueType = {}));\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n  get: function (carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n  keys: function (carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  }\n};\nexport var defaultTextMapSetter = {\n  set: function (carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n    carrier[key] = value;\n  }\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */function () {\n  function NoopContextManager() {}\n  NoopContextManager.prototype.active = function () {\n    return ROOT_CONTEXT;\n  };\n  NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n    var args = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n    return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n  };\n  NoopContextManager.prototype.bind = function (_context, target) {\n    return target;\n  };\n  NoopContextManager.prototype.enable = function () {\n    return this;\n  };\n  NoopContextManager.prototype.disable = function () {\n    return this;\n  };\n  return NoopContextManager;\n}();\nexport { NoopContextManager };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */function () {\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  function ContextAPI() {}\n  /** Get the singleton instance of the Context API */\n  ContextAPI.getInstance = function () {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n    return this._instance;\n  };\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  };\n  /**\n   * Get the currently active context\n   */\n  ContextAPI.prototype.active = function () {\n    return this._getContextManager().active();\n  };\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  ContextAPI.prototype.with = function (context, fn, thisArg) {\n    var _a;\n    var args = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n    return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], __read(args), false));\n  };\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  ContextAPI.prototype.bind = function (context, target) {\n    return this._getContextManager().bind(context, target);\n  };\n  ContextAPI.prototype._getContextManager = function () {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  };\n  /** Disable and remove the global context manager */\n  ContextAPI.prototype.disable = function () {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  };\n  return ContextAPI;\n}();\nexport { ContextAPI };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n  /** Represents no flag set. */\n  TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n  /** Bit to represent whether trace is sampled in trace flags. */\n  TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */function () {\n  function NonRecordingSpan(_spanContext) {\n    if (_spanContext === void 0) {\n      _spanContext = INVALID_SPAN_CONTEXT;\n    }\n    this._spanContext = _spanContext;\n  }\n  // Returns a SpanContext.\n  NonRecordingSpan.prototype.spanContext = function () {\n    return this._spanContext;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n    return this;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n    return this;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n    return this;\n  };\n  NonRecordingSpan.prototype.addLink = function (_link) {\n    return this;\n  };\n  NonRecordingSpan.prototype.addLinks = function (_links) {\n    return this;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.setStatus = function (_status) {\n    return this;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.updateName = function (_name) {\n    return this;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.end = function (_endTime) {};\n  // isRecording always returns false for NonRecordingSpan.\n  NonRecordingSpan.prototype.isRecording = function () {\n    return false;\n  };\n  // By default does nothing\n  NonRecordingSpan.prototype.recordException = function (_exception, _time) {};\n  return NonRecordingSpan;\n}();\nexport { NonRecordingSpan };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n  return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan() {\n  return getSpan(ContextAPI.getInstance().active());\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n  return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n  return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n  var _a;\n  return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n  return isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId);\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n  return new NonRecordingSpan(spanContext);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar contextApi = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */function () {\n  function NoopTracer() {}\n  // startSpan starts a noop span.\n  NoopTracer.prototype.startSpan = function (name, options, context) {\n    if (context === void 0) {\n      context = contextApi.active();\n    }\n    var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n    var parentFromContext = context && getSpanContext(context);\n    if (isSpanContext(parentFromContext) && isSpanContextValid(parentFromContext)) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  };\n  NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n    var opts;\n    var ctx;\n    var fn;\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2;\n    } else if (arguments.length === 3) {\n      opts = arg2;\n      fn = arg3;\n    } else {\n      opts = arg2;\n      ctx = arg3;\n      fn = arg4;\n    }\n    var parentContext = ctx !== null && ctx !== void 0 ? ctx : contextApi.active();\n    var span = this.startSpan(name, opts, parentContext);\n    var contextWithSpanSet = setSpan(parentContext, span);\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  };\n  return NoopTracer;\n}();\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n  return typeof spanContext === 'object' && typeof spanContext['spanId'] === 'string' && typeof spanContext['traceId'] === 'string' && typeof spanContext['traceFlags'] === 'number';\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */function () {\n  function ProxyTracer(_provider, name, version, options) {\n    this._provider = _provider;\n    this.name = name;\n    this.version = version;\n    this.options = options;\n  }\n  ProxyTracer.prototype.startSpan = function (name, options, context) {\n    return this._getTracer().startSpan(name, options, context);\n  };\n  ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n    var tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  };\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  ProxyTracer.prototype._getTracer = function () {\n    if (this._delegate) {\n      return this._delegate;\n    }\n    var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n    this._delegate = tracer;\n    return this._delegate;\n  };\n  return ProxyTracer;\n}();\nexport { ProxyTracer };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */function () {\n  function NoopTracerProvider() {}\n  NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n    return new NoopTracer();\n  };\n  return NoopTracerProvider;\n}();\nexport { NoopTracerProvider };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */function () {\n  function ProxyTracerProvider() {}\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n    var _a;\n    return (_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version, options);\n  };\n  ProxyTracerProvider.prototype.getDelegate = function () {\n    var _a;\n    return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n  };\n  /**\n   * Set the delegate tracer provider\n   */\n  ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n    this._delegate = delegate;\n  };\n  ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n    var _a;\n    return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n  };\n  return ProxyTracerProvider;\n}();\nexport { ProxyTracerProvider };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n  /** Default value. Indicates that the span is used internally. */\n  SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n", "/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n  /**\n   * The default status.\n   */\n  SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n  /**\n   * The operation contains an error.\n   */\n  SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nvar VALID_KEY = \"[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,255}\";\nvar VALID_VENDOR_KEY = \"[a-z0-9]\" + VALID_KEY_CHAR_RANGE + \"{0,240}@[a-z]\" + VALID_KEY_CHAR_RANGE + \"{0,13}\";\nvar VALID_KEY_REGEX = new RegExp(\"^(?:\" + VALID_KEY + \"|\" + VALID_VENDOR_KEY + \")$\");\nvar VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nvar INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n  return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n  return VALID_VALUE_BASE_REGEX.test(value) && !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from './tracestate-validators';\nvar MAX_TRACE_STATE_ITEMS = 32;\nvar MAX_TRACE_STATE_LEN = 512;\nvar LIST_MEMBERS_SEPARATOR = ',';\nvar LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nvar TraceStateImpl = /** @class */function () {\n  function TraceStateImpl(rawTraceState) {\n    this._internalState = new Map();\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n  TraceStateImpl.prototype.set = function (key, value) {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    var traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  };\n  TraceStateImpl.prototype.unset = function (key) {\n    var traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  };\n  TraceStateImpl.prototype.get = function (key) {\n    return this._internalState.get(key);\n  };\n  TraceStateImpl.prototype.serialize = function () {\n    var _this = this;\n    return this._keys().reduce(function (agg, key) {\n      agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + _this.get(key));\n      return agg;\n    }, []).join(LIST_MEMBERS_SEPARATOR);\n  };\n  TraceStateImpl.prototype._parse = function (rawTraceState) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState.split(LIST_MEMBERS_SEPARATOR).reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n    .reduce(function (agg, part) {\n      var listMember = part.trim(); // Optional Whitespace (OWS) handling\n      var i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n      if (i !== -1) {\n        var key = listMember.slice(0, i);\n        var value = listMember.slice(i + 1, part.length);\n        if (validateKey(key) && validateValue(value)) {\n          agg.set(key, value);\n        } else {\n          // TODO: Consider to add warning log\n        }\n      }\n      return agg;\n    }, new Map());\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(Array.from(this._internalState.entries()).reverse() // Use reverse same as original tracestate parse chain\n      .slice(0, MAX_TRACE_STATE_ITEMS));\n    }\n  };\n  TraceStateImpl.prototype._keys = function () {\n    return Array.from(this._internalState.keys()).reverse();\n  };\n  TraceStateImpl.prototype._clone = function () {\n    var traceState = new TraceStateImpl();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  };\n  return TraceStateImpl;\n}();\nexport { TraceStateImpl };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */function () {\n  function NoopMeterProvider() {}\n  NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n    return NOOP_METER;\n  };\n  return NoopMeterProvider;\n}();\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport { getGlobal, registerGlobal, unregisterGlobal } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'metrics';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */function () {\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  function MetricsAPI() {}\n  /** Get the singleton instance of the Metrics API */\n  MetricsAPI.getInstance = function () {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n    return this._instance;\n  };\n  /**\n   * Set the current global meter provider.\n   * Returns true if the meter provider was successfully registered, else false.\n   */\n  MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n    return registerGlobal(API_NAME, provider, DiagAPI.instance());\n  };\n  /**\n   * Returns the global meter provider.\n   */\n  MetricsAPI.prototype.getMeterProvider = function () {\n    return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n  };\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  MetricsAPI.prototype.getMeter = function (name, version, options) {\n    return this.getMeterProvider().getMeter(name, version, options);\n  };\n  /** Remove the global meter provider */\n  MetricsAPI.prototype.disable = function () {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  };\n  return MetricsAPI;\n}();\nexport { MetricsAPI };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */function () {\n  function NoopTextMapPropagator() {}\n  /** Noop inject function does nothing */\n  NoopTextMapPropagator.prototype.inject = function (_context, _carrier) {};\n  /** Noop extract function does nothing and returns the input context */\n  NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n    return context;\n  };\n  NoopTextMapPropagator.prototype.fields = function () {\n    return [];\n  };\n  return NoopTextMapPropagator;\n}();\nexport { NoopTextMapPropagator };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n  return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage() {\n  return getBaggage(ContextAPI.getInstance().active());\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter } from '../propagation/TextMapPropagator';\nimport { getBaggage, getActiveBaggage, setBaggage, deleteBaggage } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */function () {\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  function PropagationAPI() {\n    this.createBaggage = createBaggage;\n    this.getBaggage = getBaggage;\n    this.getActiveBaggage = getActiveBaggage;\n    this.setBaggage = setBaggage;\n    this.deleteBaggage = deleteBaggage;\n  }\n  /** Get the singleton instance of the Propagator API */\n  PropagationAPI.getInstance = function () {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n    return this._instance;\n  };\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  };\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  PropagationAPI.prototype.inject = function (context, carrier, setter) {\n    if (setter === void 0) {\n      setter = defaultTextMapSetter;\n    }\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  };\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  PropagationAPI.prototype.extract = function (context, carrier, getter) {\n    if (getter === void 0) {\n      getter = defaultTextMapGetter;\n    }\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  };\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  PropagationAPI.prototype.fields = function () {\n    return this._getGlobalPropagator().fields();\n  };\n  /** Remove the global propagator */\n  PropagationAPI.prototype.disable = function () {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  };\n  PropagationAPI.prototype._getGlobalPropagator = function () {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  };\n  return PropagationAPI;\n}();\nexport { PropagationAPI };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext } from '../trace/spancontext-utils';\nimport { deleteSpan, getActiveSpan, getSpan, getSpanContext, setSpan, setSpanContext } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */function () {\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  function TraceAPI() {\n    this._proxyTracerProvider = new ProxyTracerProvider();\n    this.wrapSpanContext = wrapSpanContext;\n    this.isSpanContextValid = isSpanContextValid;\n    this.deleteSpan = deleteSpan;\n    this.getSpan = getSpan;\n    this.getActiveSpan = getActiveSpan;\n    this.getSpanContext = getSpanContext;\n    this.setSpan = setSpan;\n    this.setSpanContext = setSpanContext;\n  }\n  /** Get the singleton instance of the Trace API */\n  TraceAPI.getInstance = function () {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n    return this._instance;\n  };\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n    var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  };\n  /**\n   * Returns the global tracer provider.\n   */\n  TraceAPI.prototype.getTracerProvider = function () {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  };\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  TraceAPI.prototype.getTracer = function (name, version) {\n    return this.getTracerProvider().getTracer(name, version);\n  };\n  /** Remove the global tracer provider */\n  TraceAPI.prototype.disable = function () {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  };\n  return TraceAPI;\n}();\nexport { TraceAPI };\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\n", "class StdUriTemplate {\n  static expand(template, substitutions) {\n    return StdUriTemplate.expandImpl(template, substitutions);\n  }\n  static validateLiteral(c, col) {\n    switch (c) {\n      case \"+\":\n      case \"#\":\n      case \"/\":\n      case \";\":\n      case \"?\":\n      case \"&\":\n      case \" \":\n      case \"!\":\n      case \"=\":\n      case \"$\":\n      case \"|\":\n      case \"*\":\n      case \":\":\n      case \"~\":\n      case \"-\":\n        throw new Error(`Illegal character identified in the token at col: ${col}`);\n    }\n  }\n  static getMaxChar(buffer, col) {\n    if (!buffer) {\n      return -1;\n    } else {\n      const value = buffer.join(\"\");\n      if (value.length === 0) {\n        return -1;\n      } else {\n        try {\n          return parseInt(value, 10);\n        } catch (e) {\n          throw new Error(`Cannot parse max chars at col: ${col}`);\n        }\n      }\n    }\n  }\n  static getOperator(c, token, col) {\n    switch (c) {\n      case \"+\":\n        return 1 /* PLUS */;\n      case \"#\":\n        return 2 /* HASH */;\n      case \".\":\n        return 3 /* DOT */;\n      case \"/\":\n        return 4 /* SLASH */;\n      case \";\":\n        return 5 /* SEMICOLON */;\n      case \"?\":\n        return 6 /* QUESTION_MARK */;\n      case \"&\":\n        return 7 /* AMP */;\n      default:\n        StdUriTemplate.validateLiteral(c, col);\n        token.push(c);\n        return 0 /* NO_OP */;\n    }\n  }\n  static expandImpl(str, substitutions) {\n    const result = [];\n    let token = null;\n    let operator = null;\n    let composite = false;\n    let maxCharBuffer = null;\n    let firstToken = true;\n    for (let i = 0; i < str.length; i++) {\n      const character = str.charAt(i);\n      switch (character) {\n        case \"{\":\n          token = [];\n          firstToken = true;\n          break;\n        case \"}\":\n          if (token !== null) {\n            const expanded = StdUriTemplate.expandToken(operator, token.join(\"\"), composite, StdUriTemplate.getMaxChar(maxCharBuffer, i), firstToken, substitutions, result, i);\n            if (expanded && firstToken) {\n              firstToken = false;\n            }\n            token = null;\n            operator = null;\n            composite = false;\n            maxCharBuffer = null;\n          } else {\n            throw new Error(`Failed to expand token, invalid at col: ${i}`);\n          }\n          break;\n        case \",\":\n          if (token !== null) {\n            const expanded = StdUriTemplate.expandToken(operator, token.join(\"\"), composite, StdUriTemplate.getMaxChar(maxCharBuffer, i), firstToken, substitutions, result, i);\n            if (expanded && firstToken) {\n              firstToken = false;\n            }\n            token = [];\n            composite = false;\n            maxCharBuffer = null;\n            break;\n          }\n        // Intentional fall-through for commas outside the {}\n        default:\n          if (token !== null) {\n            if (operator === null) {\n              operator = StdUriTemplate.getOperator(character, token, i);\n            } else if (maxCharBuffer !== null) {\n              if (character.match(/^\\d$/)) {\n                maxCharBuffer.push(character);\n              } else {\n                throw new Error(`Illegal character identified in the token at col: ${i}`);\n              }\n            } else {\n              if (character === \":\") {\n                maxCharBuffer = [];\n              } else if (character === \"*\") {\n                composite = true;\n              } else {\n                StdUriTemplate.validateLiteral(character, i);\n                token.push(character);\n              }\n            }\n          } else {\n            result.push(character);\n          }\n          break;\n      }\n    }\n    if (token === null) {\n      return result.join(\"\");\n    } else {\n      throw new Error(\"Unterminated token\");\n    }\n  }\n  static addPrefix(op, result) {\n    switch (op) {\n      case 2 /* HASH */:\n        result.push(\"#\");\n        break;\n      case 3 /* DOT */:\n        result.push(\".\");\n        break;\n      case 4 /* SLASH */:\n        result.push(\"/\");\n        break;\n      case 5 /* SEMICOLON */:\n        result.push(\";\");\n        break;\n      case 6 /* QUESTION_MARK */:\n        result.push(\"?\");\n        break;\n      case 7 /* AMP */:\n        result.push(\"&\");\n        break;\n      default:\n        return;\n    }\n  }\n  static addSeparator(op, result) {\n    switch (op) {\n      case 3 /* DOT */:\n        result.push(\".\");\n        break;\n      case 4 /* SLASH */:\n        result.push(\"/\");\n        break;\n      case 5 /* SEMICOLON */:\n        result.push(\";\");\n        break;\n      case 6 /* QUESTION_MARK */:\n      case 7 /* AMP */:\n        result.push(\"&\");\n        break;\n      default:\n        result.push(\",\");\n        return;\n    }\n  }\n  static addValue(op, token, value, result, maxChar) {\n    switch (op) {\n      case 1 /* PLUS */:\n      case 2 /* HASH */:\n        StdUriTemplate.addExpandedValue(null, value, result, maxChar, false);\n        break;\n      case 6 /* QUESTION_MARK */:\n      case 7 /* AMP */:\n        result.push(`${token}=`);\n        StdUriTemplate.addExpandedValue(null, value, result, maxChar, true);\n        break;\n      case 5 /* SEMICOLON */:\n        result.push(token);\n        StdUriTemplate.addExpandedValue(\"=\", value, result, maxChar, true);\n        break;\n      case 3 /* DOT */:\n      case 4 /* SLASH */:\n      case 0 /* NO_OP */:\n        StdUriTemplate.addExpandedValue(null, value, result, maxChar, true);\n        break;\n    }\n  }\n  static addValueElement(op, token, value, result, maxChar) {\n    switch (op) {\n      case 1 /* PLUS */:\n      case 2 /* HASH */:\n        StdUriTemplate.addExpandedValue(null, value, result, maxChar, false);\n        break;\n      case 6 /* QUESTION_MARK */:\n      case 7 /* AMP */:\n      case 5 /* SEMICOLON */:\n      case 3 /* DOT */:\n      case 4 /* SLASH */:\n      case 0 /* NO_OP */:\n        StdUriTemplate.addExpandedValue(null, value, result, maxChar, true);\n        break;\n    }\n  }\n  static isSurrogate(cp) {\n    const codeUnit = cp.charCodeAt(0);\n    return codeUnit >= 55296 && codeUnit <= 56319;\n  }\n  static isIprivate(cp) {\n    return 57344 <= cp.charCodeAt(0) && cp.charCodeAt(0) <= 63743;\n  }\n  static isUcschar(cp) {\n    const codePoint = cp.codePointAt(0) || 0;\n    return 160 <= codePoint && codePoint <= 55295 || 63744 <= codePoint && codePoint <= 64975 || 65008 <= codePoint && codePoint <= 65519;\n  }\n  static addExpandedValue(prefix, value, result, maxChar, replaceReserved) {\n    const stringValue = StdUriTemplate.convertNativeTypes(value);\n    const max = maxChar !== -1 ? Math.min(maxChar, stringValue.length) : stringValue.length;\n    let reservedBuffer = undefined;\n    if (max > 0 && prefix != null) {\n      result.push(prefix);\n    }\n    for (let i = 0; i < max; i++) {\n      const character = stringValue.charAt(i);\n      if (character === \"%\" && !replaceReserved) {\n        reservedBuffer = [];\n      }\n      let toAppend = character;\n      if (StdUriTemplate.isSurrogate(character)) {\n        toAppend = encodeURIComponent(stringValue.charAt(i) + stringValue.charAt(i + 1));\n        i++;\n      } else if (replaceReserved || StdUriTemplate.isUcschar(character) || StdUriTemplate.isIprivate(character)) {\n        if (character === \"!\") {\n          toAppend = \"%21\";\n        } else {\n          toAppend = encodeURIComponent(toAppend);\n        }\n      }\n      if (reservedBuffer) {\n        reservedBuffer.push(toAppend);\n        if (reservedBuffer.length === 3) {\n          let isEncoded = false;\n          try {\n            const reserved = reservedBuffer.join(\"\");\n            const decoded = decodeURIComponent(reservedBuffer.join(\"\"));\n            isEncoded = reserved !== decoded;\n          } catch (e) {}\n          if (isEncoded) {\n            result.push(reservedBuffer.join(\"\"));\n          } else {\n            result.push(\"%25\");\n            result.push(reservedBuffer.slice(1).join(\"\"));\n          }\n          reservedBuffer = undefined;\n        }\n      } else {\n        if (character === \" \") {\n          result.push(\"%20\");\n        } else if (character === \"%\") {\n          result.push(\"%25\");\n        } else {\n          result.push(toAppend);\n        }\n      }\n    }\n    if (reservedBuffer) {\n      result.push(\"%25\");\n      result.push(reservedBuffer.slice(1).join(\"\"));\n    }\n  }\n  static isList(value) {\n    return Array.isArray(value) || value instanceof Set;\n  }\n  static isMap(value) {\n    return value instanceof Map || typeof value === \"object\";\n  }\n  static getSubstitutionType(value, col) {\n    if (value === undefined || value === null) {\n      return 0 /* EMPTY */;\n    } else if (StdUriTemplate.isNativeType(value)) {\n      return 1 /* STRING */;\n    } else if (StdUriTemplate.isList(value)) {\n      return 2 /* LIST */;\n    } else if (StdUriTemplate.isMap(value)) {\n      return 3 /* MAP */;\n    } else {\n      throw new Error(`Illegal class passed as substitution, found ${typeof value} at col: ${col}`);\n    }\n  }\n  static isEmpty(substType, value) {\n    if (value === undefined || value === null) {\n      return true;\n    } else {\n      switch (substType) {\n        case 1 /* STRING */:\n          return false;\n        case 2 /* LIST */:\n          return value.length === 0;\n        case 3 /* MAP */:\n          return Object.keys(value).length === 0;\n        default:\n          return true;\n      }\n    }\n  }\n  static isNativeType(value) {\n    return typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\";\n  }\n  static convertNativeTypes(value) {\n    if (typeof value === \"string\") {\n      return value;\n    } else if (typeof value === \"number\" || typeof value === \"boolean\") {\n      return value.toString();\n    } else {\n      throw new Error(`Illegal class passed as substitution, found ${typeof value}`);\n    }\n  }\n  static expandToken(operator, token, composite, maxChar, firstToken, substitutions, result, col) {\n    if (token.length === 0) {\n      throw new Error(`Found an empty token at col: ${col}`);\n    }\n    const value = substitutions[token];\n    const substType = StdUriTemplate.getSubstitutionType(value, col);\n    if (substType === 0 /* EMPTY */ || StdUriTemplate.isEmpty(substType, value)) {\n      return false;\n    }\n    if (firstToken) {\n      StdUriTemplate.addPrefix(operator, result);\n    } else {\n      StdUriTemplate.addSeparator(operator, result);\n    }\n    switch (substType) {\n      case 1 /* STRING */:\n        StdUriTemplate.addStringValue(operator, token, value, result, maxChar);\n        break;\n      case 2 /* LIST */:\n        StdUriTemplate.addListValue(operator, token, value, result, maxChar, composite);\n        break;\n      case 3 /* MAP */:\n        StdUriTemplate.addMapValue(operator, token, value, result, maxChar, composite);\n        break;\n    }\n    return true;\n  }\n  static addStringValue(operator, token, value, result, maxChar) {\n    StdUriTemplate.addValue(operator, token, value, result, maxChar);\n  }\n  static addListValue(operator, token, value, result, maxChar, composite) {\n    let first = true;\n    for (const v of value) {\n      if (first) {\n        StdUriTemplate.addValue(operator, token, v, result, maxChar);\n        first = false;\n      } else {\n        if (composite) {\n          StdUriTemplate.addSeparator(operator, result);\n          StdUriTemplate.addValue(operator, token, v, result, maxChar);\n        } else {\n          result.push(\",\");\n          StdUriTemplate.addValueElement(operator, token, v, result, maxChar);\n        }\n      }\n    }\n  }\n  static addMapValue(operator, token, value, result, maxChar, composite) {\n    let first = true;\n    if (maxChar !== -1) {\n      throw new Error(\"Value trimming is not allowed on Maps\");\n    }\n    for (const key in value) {\n      const v = value[key];\n      if (composite) {\n        if (!first) {\n          StdUriTemplate.addSeparator(operator, result);\n        }\n        StdUriTemplate.addValueElement(operator, token, key, result, maxChar);\n        result.push(\"=\");\n      } else {\n        if (first) {\n          StdUriTemplate.addValue(operator, token, key, result, maxChar);\n        } else {\n          result.push(\",\");\n          StdUriTemplate.addValueElement(operator, token, key, result, maxChar);\n        }\n        result.push(\",\");\n      }\n      StdUriTemplate.addValueElement(operator, token, v, result, maxChar);\n      first = false;\n    }\n  }\n}\nexport { StdUriTemplate };", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * Represents a date only. ISO 8601.\n */\nexport class DateOnly {\n  /**\n   * Creates a new DateOnly from the given string.\n   * @param root0 The year, month, and day\n   * @param root0.year The year\n   * @param root0.month The month\n   * @param root0.day The day\n   * @returns The new DateOnly\n   * @throws An error if the year is invalid\n   * @throws An error if the month is invalid\n   * @throws An error if the day is invalid\n   */\n  constructor({\n    year = 0,\n    month = 1,\n    day = 1\n  }) {\n    this.day = day;\n    this.month = month;\n    this.year = year;\n  }\n  /**\n   * Creates a new DateOnly from the given date.\n   * @param date The date\n   * @returns The new DateOnly\n   * @throws An error if the date is invalid\n   */\n  static fromDate(date) {\n    if (!date) {\n      throw new Error(\"Date cannot be undefined\");\n    }\n    const result = new DateOnly({\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    });\n    return result;\n  }\n  /**\n   * Parses a string into a DateOnly. The string can be of the ISO 8601 time only format or a number representing the ticks of a Date.\n   * @param value The value to parse\n   * @returns The parsed DateOnly.\n   * @throws An error if the value is invalid\n   */\n  static parse(value) {\n    if (!value || value.length === 0) {\n      return undefined;\n    }\n    // not using name groups as it's an ES2018 feature\n    const exec = /^(\\d{4,})-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])$/gi.exec(value);\n    if (exec) {\n      const year = parseInt(exec[1], 10);\n      const month = parseInt(exec[2], 10);\n      const day = parseInt(exec[3], 10);\n      return new DateOnly({\n        year,\n        month,\n        day\n      });\n    }\n    const ticks = Date.parse(value);\n    if (!isNaN(ticks)) {\n      const date = new Date(ticks);\n      return this.fromDate(date);\n    }\n    throw new Error(`Value is not a valid date-only representation: ${value}`);\n  }\n  /**\n   *  Returns a string representation of the date in the format YYYY-MM-DD\n   * @returns The date in the format YYYY-MM-DD ISO 8601\n   */\n  toString() {\n    return `${formatSegment(this.year, 4)}-${formatSegment(this.month)}-${formatSegment(this.day)}`;\n  }\n}\n/**\n * Formats a segment of a date to a string\n * @param segment The segment to format\n * @param digits The number of digits to pad\n * @returns The formatted segment\n */\nexport function formatSegment(segment, digits = 2) {\n  return segment.toString().padStart(digits, \"0\");\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { parse as parseDuration, serialize as serializeDuration } from \"tinyduration\";\n/**\n * Represents a duration value. ISO 8601.\n */\nexport class Duration {\n  /**\n   * Creates a new Duration value from the given parameters.\n   * @param root0 The years, months, weeks, days, hours, minutes, seconds, and negative flag\n   * @param root0.years The years\n   * @param root0.months The months\n   * @param root0.weeks The weeks\n   * @param root0.days The days\n   * @param root0.hours The hours\n   * @param root0.minutes The minutes\n   * @param root0.seconds The seconds\n   * @param root0.negative The negative flag\n   * @returns The new Duration\n   * @throws An error if years is invalid\n   * @throws An error if months is invalid\n   * @throws An error if weeks is invalid\n   * @throws An error if days is invalid\n   * @throws An error if hours is invalid\n   * @throws An error if minutes is invalid\n   * @throws An error if seconds is invalid\n   * @throws An error if weeks is used in combination with years or months\n   */\n  constructor({\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n    negative = false\n  }) {\n    if (years < 0 || years > 9999) {\n      throw new Error(\"Year must be between 0 and 9999\");\n    }\n    if (months < 0) {\n      throw new Error(\"Month must be greater or equal to 0\");\n    }\n    if (weeks < 0) {\n      throw new Error(\"Week must be greater or equal to 0\");\n    }\n    if (days < 0) {\n      throw new Error(\"Day must be greater or equal to 0\");\n    }\n    if (hours < 0) {\n      throw new Error(\"Hour must be greater or equal to 0\");\n    }\n    if (minutes < 0) {\n      throw new Error(\"Minute must be greater or equal to 0\");\n    }\n    if (seconds < 0) {\n      throw new Error(\"Second must be greater or equal to 0\");\n    }\n    if (weeks > 0 && (days > 0 || hours > 0 || minutes > 0 || seconds > 0)) {\n      throw new Error(\"Cannot have weeks and days or hours or minutes or seconds\");\n    }\n    if ((years > 0 || months > 0) && weeks > 0) {\n      throw new Error(\"Cannot have weeks and months or weeks and years\");\n    }\n    this.years = years;\n    this.months = months;\n    this.weeks = weeks;\n    this.days = days;\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n    this.negative = negative;\n  }\n  /**\n   * Parses a string into a Duration. The string can be of the ISO 8601 duration format.\n   * @param value The value to parse\n   * @returns The parsed Duration.\n   * @throws An error if the value is invalid\n   */\n  static parse(value) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (!value || value.length === 0) {\n      return undefined;\n    }\n    const duration = parseDuration(value);\n    return new Duration({\n      years: (_a = duration.years) !== null && _a !== void 0 ? _a : 0,\n      months: (_b = duration.months) !== null && _b !== void 0 ? _b : 0,\n      weeks: (_c = duration.weeks) !== null && _c !== void 0 ? _c : 0,\n      days: (_d = duration.days) !== null && _d !== void 0 ? _d : 0,\n      hours: (_e = duration.hours) !== null && _e !== void 0 ? _e : 0,\n      minutes: (_f = duration.minutes) !== null && _f !== void 0 ? _f : 0,\n      seconds: (_g = duration.seconds) !== null && _g !== void 0 ? _g : 0,\n      negative: (_h = duration.negative) !== null && _h !== void 0 ? _h : false\n    });\n  }\n  /**\n   * Serializes the duration to a string in the ISO 8601 duration format.\n   * @returns The serialized duration.\n   */\n  toString() {\n    return serializeDuration(this);\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * A function that takes a property name and returns its canonical form.\n * @param canon The function that canonicalizes the property name.\n * @returns A new object that can be used as a dictionary with case-insensitive keys.\n */\nfunction dictionaryWithCanonicalKeys(canon) {\n  const keysNormalizationMap = new Map();\n  return new Proxy({}, {\n    /**\n     * Intercept the get operation on the dictionary object and forward it to the target object using Reflect.get.\n     * @param target The target object.\n     * @param prop The property to get.\n     * @returns The value of the property.\n     */\n    get(target, prop) {\n      const normalKey = canon(prop);\n      return Reflect.get(target, normalKey);\n    },\n    /**\n     * Intercept the set operation on the dictionary object and forward it to the target object using Reflect.set.\n     * @param target The target object.\n     * @param prop The property to set.\n     * @param value The value to set.\n     * @returns A boolean indicating whether the property was set.\n     */\n    set(target, prop, value) {\n      const nonNormalKey = prop.toString();\n      const normalKey = canon(prop);\n      keysNormalizationMap.set(normalKey, nonNormalKey);\n      return Reflect.set(target, normalKey, value);\n    },\n    /**\n     * Intercept the has operation on the dictionary object and forward it to the target object using Reflect.has.\n     * @param _ the target object.\n     * @param prop The property to check.\n     * @returns A boolean indicating whether the property exists.\n     */\n    has(_, prop) {\n      const normalKey = canon(prop);\n      return keysNormalizationMap.has(normalKey);\n    },\n    /**\n     * Intercept the defineProperty operation on the dictionary object and forward it to the target object using Reflect.defineProperty.\n     * @param target The target object.\n     * @param prop The property to define.\n     * @param attribs The attributes of the property.\n     * @returns A boolean indicating whether the property was defined.\n     */\n    defineProperty(target, prop, attribs) {\n      const nonNormalKey = prop.toString();\n      const normalKey = canon(prop);\n      keysNormalizationMap.set(normalKey, nonNormalKey);\n      return Reflect.defineProperty(target, normalKey, attribs);\n    },\n    /**\n     * Intercept the deleteProperty operation on the dictionary object and forward it to the target object using Reflect.deleteProperty.\n     * @param target The target object.\n     * @param prop The property to delete.\n     * @returns A boolean indicating whether the property was deleted.\n     */\n    deleteProperty(target, prop) {\n      const normalKey = canon(prop);\n      keysNormalizationMap.delete(normalKey);\n      return Reflect.deleteProperty(target, normalKey);\n    },\n    /**\n     * Intercept the getOwnPropertyDescriptor operation on the dictionary object and forward it to the target object using Reflect.getOwnPropertyDescriptor.\n     * @param target The target object.\n     * @param prop The property to gets its descriptor.\n     * @returns The property descriptor.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target, canon(prop));\n    },\n    ownKeys() {\n      return [...keysNormalizationMap.values()];\n    }\n  });\n}\n/**\n * A wrapper for type Record that creates a Record with case insensitive keys\n * @returns A new object that can be used as a dictionary with case-insensitive keys.\n */\nexport function createRecordWithCaseInsensitiveKeys() {\n  /**\n   * A function that takes a property name and returns its canonical form.\n   * @param prop The property name to be canonicalized.\n   * @returns The canonical form of the property name.\n   */\n  const record = dictionaryWithCanonicalKeys(p => typeof p === \"string\" ? p.toLowerCase() : p.toString().toLowerCase());\n  return record;\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { createRecordWithCaseInsensitiveKeys } from \"./recordWithCaseInsensitiveKeys.js\";\n/**\n * A collection class for HTTP headers. The keys are case-insensitive.\n * @example\n * ```typescript\n * const headers = new Headers();\n * headers.add(\"header1\", \"value1\");\n * ```\n */\nexport class Headers extends Map {\n  /**\n   * Creates a new Headers object.\n   * @param entries An iterable object that contains key-value pairs. Each key-value pair must be an array with two elements: the key of the header, and the value of the header.\n   * @example\n   * ```typescript\n   *  const entries: [string, Set<string>][] = [\n   *    ['header1', new Set(['value1'])],\n   *    ['header2', new Set(['value2', 'value3'])]\n   *  ];\n   *  const headers = new Headers(entries);\n   * ```\n   */\n  constructor(entries) {\n    super();\n    this.headers = createRecordWithCaseInsensitiveKeys();\n    this.singleValueHeaders = new Set([\"Content-Type\", \"Content-Encoding\", \"Content-Length\"]);\n    if (entries) {\n      entries.forEach(([key, value]) => {\n        this.headers[key] = value;\n      });\n    }\n  }\n  /**\n   * Sets a header with the specified name and value. If a header with the same name already exists, its value is appended with the specified value.\n   * @param headerName the name of the header to set\n   * @param headerValue the value of the header to set\n   * @returns Headers object\n   */\n  set(headerName, headerValue) {\n    this.add(headerName, ...headerValue);\n    return this;\n  }\n  /**\n   * Gets the values for the header with the specified name.\n   * @param headerName The name of the header to get the values for.\n   * @returns The values for the header with the specified name.\n   * @throws Error if headerName is null or empty\n   */\n  get(headerName) {\n    if (!headerName) {\n      throw new Error(\"headerName cannot be null or empty\");\n    }\n    return this.headers[headerName];\n  }\n  /**\n   * Checks if a header exists.\n   * @param key The name of the header to check for.\n   * @returns whether or not a header with the given name/key exists.\n   */\n  has(key) {\n    return !!key && !!this.headers[key];\n  }\n  /**\n   * Delete the header with the specified name.\n   * @param headerName The name of the header to delete.\n   * @returns Whether or not the header existed and was deleted.\n   * @throws Error if headerName is null or empty\n   */\n  delete(headerName) {\n    if (!headerName) {\n      throw new Error(\"headerName cannot be null or empty\");\n    }\n    if (this.headers[headerName]) {\n      delete this.headers[headerName];\n      return true;\n    }\n    return false;\n  }\n  /**\n   * clear the headers collection\n   */\n  clear() {\n    for (const header in this.headers) {\n      if (Object.prototype.hasOwnProperty.call(this.headers, header)) {\n        delete this.headers[header];\n      }\n    }\n  }\n  /**\n   * execute a provided function once per each header\n   * @param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each header in the dictionary.\n   * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n   */\n  forEach(callbackfn, thisArg) {\n    for (const header in this.headers) {\n      if (Object.prototype.hasOwnProperty.call(this.headers, header)) {\n        callbackfn.call(thisArg, this.headers[header], header, this);\n      }\n    }\n  }\n  /**\n   * Adds values to the header with the specified name.\n   * @param headerName The name of the header to add values to.\n   * @param headerValues The values to add to the header.\n   * @returns Whether or not the values were added to the header.\n   */\n  add(headerName, ...headerValues) {\n    if (!headerName) {\n      console.error(\"headerName cannot be null or empty\");\n      return false;\n    }\n    if (!headerValues) {\n      console.error(\"headerValues cannot be null\");\n      return false;\n    }\n    if (headerValues.length === 0) {\n      return false;\n    }\n    if (this.singleValueHeaders.has(headerName)) {\n      this.headers[headerName] = new Set([headerValues[0]]);\n    } else if (this.headers[headerName]) {\n      headerValues.forEach(headerValue => this.headers[headerName].add(headerValue));\n    } else {\n      this.headers[headerName] = new Set(headerValues);\n    }\n    return true;\n  }\n  /**\n   * Adds values to the header with the specified name if it's not already present\n   * @param headerName The name of the header to add values to.\n   * @param headerValue The values to add to the header.\n   * @returns If the headerValue have been added to the Dictionary.\n   */\n  tryAdd(headerName, headerValue) {\n    if (!headerName) {\n      throw new Error(\"headerName cannot be null or empty\");\n    }\n    if (!headerValue) {\n      throw new Error(\"headerValue cannot be null\");\n    }\n    if (!this.headers[headerName]) {\n      this.headers[headerName] = new Set([headerValue]);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Removes the specified value from the header with the specified name.\n   * @param headerName The name of the header to remove the value from.\n   * @param headerValue The value to remove from the header.\n   * @returns Whether or not the header existed and was removed.\n   * @throws Error if headerName is null or empty\n   * @throws Error if headerValue is null\n   */\n  remove(headerName, headerValue) {\n    if (!headerName) {\n      throw new Error(\"headerName cannot be null or empty\");\n    }\n    if (!headerValue) {\n      throw new Error(\"headerValue cannot be null\");\n    }\n    if (this.headers[headerName]) {\n      const result = this.headers[headerName].delete(headerValue);\n      if (this.headers[headerName].size === 0) {\n        delete this.headers[headerName];\n      }\n      return result;\n    }\n    return false;\n  }\n  /**\n   * Adds all the headers values from the specified headers collection.\n   * @param headers The headers to update the current headers with.\n   * @throws Error if headers is null\n   */\n  addAll(headers) {\n    if (!headers) {\n      throw new Error(\"headers cannot be null\");\n    }\n    for (const header in headers.headers) {\n      if (Object.prototype.hasOwnProperty.call(headers.headers, header)) {\n        headers.headers[header].forEach(value => this.add(header, value));\n      }\n    }\n  }\n  /**\n   * Adds all headers from the request configuration value to the current headers collection.\n   * Replaces any existing headers with the same key.\n   * @param headers The headers to update the current headers with.\n   * @throws Error if headers is null\n   */\n  addAllRaw(headers) {\n    if (!headers) {\n      throw new Error(\"headers cannot be null\");\n    }\n    for (const header in headers) {\n      if (Object.prototype.hasOwnProperty.call(headers, header)) {\n        const headerValues = headers[header];\n        if (Array.isArray(headerValues)) {\n          this.add(header, ...headerValues);\n        } else {\n          this.add(header, headerValues);\n        }\n      }\n    }\n  }\n  /**\n   * Gets the values for the header with the specified name.\n   * @param key The name of the header to get the values for.\n   * @returns The values for the header with the specified name.\n   * @throws Error if key is null or empty\n   */\n  tryGetValue(key) {\n    if (!key) {\n      throw new Error(\"key cannot be null or empty\");\n    }\n    return this.headers[key] ? Array.from(this.headers[key]) : null;\n  }\n  /**\n   * Override toString method for the headers collection\n   * @returns a string representation of the headers collection\n   */\n  toString() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return JSON.stringify(this.headers, (_key, value) => value instanceof Set ? [...value] : value);\n  }\n  /**\n   * check if the headers collection is empty\n   * @returns a boolean indicating if the headers collection is empty\n   */\n  isEmpty() {\n    return Object.keys(this.headers).length === 0;\n  }\n  /**\n   * get keys of the headers collection\n   * @returns an iterator of keys\n   */\n  keys() {\n    return Object.keys(this.headers)[Symbol.iterator]();\n  }\n  /**\n   * get entries\n   * @returns an iterator of entries\n   */\n  entries() {\n    return Object.entries(this.headers)[Symbol.iterator]();\n  }\n}\n", "import { createGuid } from \"./utils/guidUtils.js\";\n/**\n * Defines an interface for a multipart body for request or response.\n */\nexport class MultipartBody {\n  /**\n   * Instantiates a new MultipartBody.\n   */\n  constructor() {\n    this._parts = {};\n    this._boundary = createGuid().replace(/-/g, \"\");\n  }\n  /**\n   * Adds or replaces a part with the given name, content type and content.\n   * @param partName the name of the part to add or replace.\n   * @param partContentType the content type of the part to add or replace.\n   * @param content the content of the part to add or replace.\n   * @param serializationCallback the serialization callback to use when serializing the part.\n   * @param fileName the name of the file associated with this part.\n   */\n  addOrReplacePart(partName, partContentType, content, serializationCallback, fileName) {\n    if (!partName) throw new Error(\"partName cannot be undefined\");\n    if (!partContentType) {\n      throw new Error(\"partContentType cannot be undefined\");\n    }\n    if (!content) throw new Error(\"content cannot be undefined\");\n    const normalizePartName = this.normalizePartName(partName);\n    this._parts[normalizePartName] = {\n      contentType: partContentType,\n      content,\n      originalName: partName,\n      fileName,\n      serializationCallback\n    };\n  }\n  /**\n   * Gets the content of the part with the given name.\n   * @param partName the name of the part to get the content for.\n   * @returns the content of the part with the given name.\n   */\n  getPartValue(partName) {\n    if (!partName) throw new Error(\"partName cannot be undefined\");\n    const normalizePartName = this.normalizePartName(partName);\n    const candidate = this._parts[normalizePartName];\n    if (!candidate) return undefined;\n    return candidate.content;\n  }\n  /**\n   * Removes the part with the given name.\n   * @param partName the name of the part to remove.\n   * @returns true if the part was removed, false if it did not exist.\n   */\n  removePart(partName) {\n    if (!partName) throw new Error(\"partName cannot be undefined\");\n    const normalizePartName = this.normalizePartName(partName);\n    if (!this._parts[normalizePartName]) return false;\n    delete this._parts[normalizePartName];\n    return true;\n  }\n  /**\n   * Gets the boundary used to separate each part.\n   * @returns the boundary value.\n   */\n  getBoundary() {\n    return this._boundary;\n  }\n  normalizePartName(original) {\n    return original.toLocaleLowerCase();\n  }\n  /**\n   * Lists all the parts in the multipart body.\n   * WARNING: meant for internal use only\n   * @returns the list of parts in the multipart body.\n   */\n  listParts() {\n    return this._parts;\n  }\n}\nexport const serializeMultipartBody = (writer, multipartBody = new MultipartBody()) => {\n  if (!writer) {\n    throw new Error(\"writer cannot be undefined\");\n  }\n  if (!multipartBody) {\n    throw new Error(\"multipartBody cannot be undefined\");\n  }\n  if (!multipartBody.listParts) {\n    throw new Error(\"multipartBody.listParts cannot be undefined\");\n  }\n  if (!multipartBody.getBoundary) {\n    throw new Error(\"multipartBody.getBoundary cannot be undefined\");\n  }\n  const parts = multipartBody.listParts();\n  if (Object.keys(parts).length === 0) {\n    throw new Error(\"multipartBody cannot be empty\");\n  }\n  const boundary = multipartBody.getBoundary();\n  let first = true;\n  for (const partName in parts) {\n    if (Object.prototype.hasOwnProperty.call(parts, partName)) {\n      if (first) {\n        first = false;\n      } else {\n        writer.writeStringValue(undefined, \"\\r\\n\");\n      }\n      writer.writeStringValue(undefined, \"--\" + boundary);\n      writer.writeStringValue(undefined, \"\\r\\n\");\n      const part = parts[partName];\n      writer.writeStringValue(\"Content-Type\", part.contentType);\n      writer.writeStringValue(undefined, \"\\r\\n\");\n      writer.writeStringValue(\"Content-Disposition\", `form-data; name=\"${part.originalName}\"${part.fileName ? `; filename=\"${part.fileName}\"` : \"\"}`);\n      writer.writeStringValue(undefined, \"\\r\\n\");\n      writer.writeStringValue(undefined, \"\\r\\n\");\n      if (typeof part.content === \"string\") {\n        writer.writeStringValue(undefined, part.content);\n      } else if (part.content instanceof ArrayBuffer) {\n        writer.writeByteArrayValue(undefined, new Uint8Array(part.content));\n      } else if (part.content instanceof Uint8Array) {\n        writer.writeByteArrayValue(undefined, part.content);\n      } else if (part.serializationCallback) {\n        if (!multipartBody.requestAdapter) {\n          throw new Error(\"requestAdapter cannot be undefined\");\n        }\n        const serializationWriterFactory = multipartBody.requestAdapter.getSerializationWriterFactory();\n        if (!serializationWriterFactory) {\n          throw new Error(\"serializationWriterFactory cannot be undefined\");\n        }\n        const partSerializationWriter = serializationWriterFactory.getSerializationWriter(part.contentType);\n        if (!partSerializationWriter) {\n          throw new Error(\"no serialization writer factory for content type: \" + part.contentType);\n        }\n        partSerializationWriter.writeObjectValue(undefined, part.content, part.serializationCallback);\n        const partContent = partSerializationWriter.getSerializedContent();\n        writer.writeByteArrayValue(undefined, new Uint8Array(partContent));\n      } else {\n        throw new Error(\"unsupported content type for multipart body: \" + typeof part.content);\n      }\n    }\n  }\n  writer.writeStringValue(undefined, \"\\r\\n\");\n  writer.writeStringValue(undefined, \"--\" + boundary + \"--\");\n  writer.writeStringValue(undefined, \"\\r\\n\");\n};\nexport const deserializeIntoMultipartBody = (_ = new MultipartBody()) => {\n  throw new Error(\"Not implemented\");\n};\nexport const createMessageFromDiscriminatorValue = parseNode => {\n  if (!parseNode) throw new Error(\"parseNode cannot be undefined\");\n  return deserializeIntoMultipartBody;\n};\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { formatSegment } from \"./dateOnly.js\";\n/*\n * Represents a time only. ISO 8601.\n */\nexport class TimeOnly {\n  /**\n   * Creates a new TimeOnly from the given parameters.\n   * @param root0 The hours, minutes, seconds, and milliseconds\n   * @param root0.hours The hours\n   * @param root0.minutes The minutes\n   * @param root0.seconds The seconds\n   * @param root0.picoseconds The milliseconds\n   * @returns The new TimeOnly\n   * @throws An error if the milliseconds are invalid\n   * @throws An error if the seconds are invalid\n   * @throws An error if the minutes are invalid\n   * @throws An error if the hours are invalid\n   * @throws An error if the milliseconds are invalid\n   */\n  constructor({\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n    picoseconds = 0\n  }) {\n    if (hours < 0 || hours > 23) {\n      throw new Error(\"Hour must be between 0 and 23\");\n    }\n    if (minutes < 0 || minutes > 59) {\n      throw new Error(\"Minute must be between 0 and 59\");\n    }\n    if (seconds < 0 || seconds > 59) {\n      throw new Error(\"Second must be between 0 and 59\");\n    }\n    if (picoseconds < 0 || picoseconds > 9999999) {\n      throw new Error(\"Millisecond must be between 0 and 9999999\");\n    }\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n    this.picoseconds = picoseconds;\n  }\n  /**\n   * Creates a new TimeOnly from the given date.\n   * @param date The date\n   * @returns The new TimeOnly\n   * @throws An error if the date is invalid\n   */\n  static fromDate(date) {\n    if (!date) {\n      throw new Error(\"Date cannot be undefined\");\n    }\n    return new TimeOnly({\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n      seconds: date.getSeconds(),\n      picoseconds: date.getMilliseconds() * 10000\n    });\n  }\n  /**\n   * Parses a string into a TimeOnly. The string can be of the ISO 8601 time only format or a number representing the ticks of a Date.\n   * @param value The value to parse\n   * @returns The parsed TimeOnly.\n   * @throws An error if the value is invalid\n   */\n  static parse(value) {\n    var _a, _b, _c, _d;\n    if (!value || value.length === 0) {\n      return undefined;\n    }\n    const ticks = Date.parse(value);\n    if (isNaN(ticks)) {\n      // not using name groups as it's an ES2018 feature\n      const exec = /^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)(?:[.](\\d{1,12}))?$/gi.exec(value);\n      if (exec) {\n        const hours = parseInt((_a = exec[1]) !== null && _a !== void 0 ? _a : \"\", 10);\n        const minutes = parseInt((_b = exec[2]) !== null && _b !== void 0 ? _b : \"\", 10);\n        const seconds = parseInt((_c = exec[3]) !== null && _c !== void 0 ? _c : \"\", 10);\n        const milliseconds = parseInt((_d = exec[4]) !== null && _d !== void 0 ? _d : \"0\", 10);\n        return new TimeOnly({\n          hours,\n          minutes,\n          seconds,\n          picoseconds: milliseconds\n        });\n      } else {\n        throw new Error(\"Value is not a valid time-only representation\");\n      }\n    } else {\n      const date = new Date(ticks);\n      return this.fromDate(date);\n    }\n  }\n  /**\n   * Returns a string representation of the time in the format HH:MM:SS.SSSSSSS\n   * @returns The time in the format HH:MM:SS.SSSSSSS\n   * @throws An error if the time is invalid\n   */\n  toString() {\n    return `${formatSegment(this.hours, 2)}:${formatSegment(this.minutes, 2)}:${formatSegment(this.seconds, 2)}.${formatSegment(this.picoseconds, 7)}`;\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { trace } from \"@opentelemetry/api\";\nimport { StdUriTemplate } from \"@std-uritemplate/std-uritemplate\";\nimport { DateOnly } from \"./dateOnly.js\";\nimport { Duration } from \"./duration.js\";\nimport { Headers } from \"./headers.js\";\nimport { MultipartBody } from \"./multipartBody.js\";\nimport { createRecordWithCaseInsensitiveKeys } from \"./recordWithCaseInsensitiveKeys.js\";\nimport { TimeOnly } from \"./timeOnly.js\";\n/** This class represents an abstract HTTP request. */\nexport class RequestInformation {\n  /**\n   * Initializes a request information instance with the provided values.\n   * @param httpMethod The HTTP method for the request.\n   * @param urlTemplate The URL template for the request.\n   * @param pathParameters The path parameters for the request.\n   */\n  constructor(httpMethod, urlTemplate, pathParameters) {\n    /** The path parameters for the request. */\n    this.pathParameters = createRecordWithCaseInsensitiveKeys();\n    /** The Query Parameters of the request. */\n    this.queryParameters = createRecordWithCaseInsensitiveKeys();\n    /** The Request Headers. */\n    this.headers = new Headers();\n    this._requestOptions = createRecordWithCaseInsensitiveKeys();\n    /**\n     * Sets the request body from a model with the specified content type.\n     * @param requestAdapter The adapter service to get the serialization writer from.\n     * @param contentType the content type.\n     * @param value the models.\n     * @param modelSerializerFunction the serialization function for the model type.\n     */\n    this.setContentFromParsable = (requestAdapter, contentType, value, modelSerializerFunction) => {\n      trace.getTracer(RequestInformation.tracerKey).startActiveSpan(\"setContentFromParsable\", span => {\n        try {\n          const writer = this.getSerializationWriter(requestAdapter, contentType, value);\n          if (value instanceof MultipartBody) {\n            contentType += \"; boundary=\" + value.getBoundary();\n          }\n          if (!this.headers) {\n            this.headers = new Headers();\n          }\n          if (Array.isArray(value)) {\n            span.setAttribute(RequestInformation.requestTypeKey, \"object[]\");\n            writer.writeCollectionOfObjectValues(undefined, value, modelSerializerFunction);\n          } else {\n            span.setAttribute(RequestInformation.requestTypeKey, \"object\");\n            writer.writeObjectValue(undefined, value, modelSerializerFunction);\n          }\n          this.setContentAndContentType(writer, contentType);\n        } finally {\n          span.end();\n        }\n      });\n    };\n    this.setContentAndContentType = (writer, contentType) => {\n      if (contentType) {\n        this.headers.tryAdd(RequestInformation.contentTypeHeader, contentType);\n      }\n      this.content = writer.getSerializedContent();\n    };\n    this.getSerializationWriter = (requestAdapter, contentType, ...values) => {\n      if (!requestAdapter) throw new Error(\"httpCore cannot be undefined\");\n      if (!contentType) throw new Error(\"contentType cannot be undefined\");\n      if (!values || values.length === 0) {\n        throw new Error(\"values cannot be undefined or empty\");\n      }\n      return requestAdapter.getSerializationWriterFactory().getSerializationWriter(contentType);\n    };\n    /**\n     * Sets the request body from a model with the specified content type.\n     * @param requestAdapter The adapter service to get the serialization writer from.\n     * @param contentType the content type.\n     * @param value the scalar values to serialize.\n     */\n    this.setContentFromScalar = (requestAdapter, contentType, value) => {\n      trace.getTracer(RequestInformation.tracerKey).startActiveSpan(\"setContentFromScalar\", span => {\n        try {\n          const writer = this.getSerializationWriter(requestAdapter, contentType, value);\n          if (!this.headers) {\n            this.headers = new Headers();\n          }\n          if (Array.isArray(value)) {\n            span.setAttribute(RequestInformation.requestTypeKey, \"[]\");\n            writer.writeCollectionOfPrimitiveValues(undefined, value);\n          } else {\n            const valueType = typeof value;\n            span.setAttribute(RequestInformation.requestTypeKey, valueType);\n            if (!value) {\n              writer.writeNullValue(undefined);\n            } else if (valueType === \"boolean\") {\n              writer.writeBooleanValue(undefined, value);\n            } else if (valueType === \"string\") {\n              writer.writeStringValue(undefined, value);\n            } else if (value instanceof Date) {\n              writer.writeDateValue(undefined, value);\n            } else if (value instanceof DateOnly) {\n              writer.writeDateOnlyValue(undefined, value);\n            } else if (value instanceof TimeOnly) {\n              writer.writeTimeOnlyValue(undefined, value);\n            } else if (value instanceof Duration) {\n              writer.writeDurationValue(undefined, value);\n            } else if (valueType === \"number\") {\n              writer.writeNumberValue(undefined, value);\n            } else if (Array.isArray(value)) {\n              writer.writeCollectionOfPrimitiveValues(undefined, value);\n            } else {\n              throw new Error(`encountered unknown value type during serialization ${valueType}`);\n            }\n          }\n          this.setContentAndContentType(writer, contentType);\n        } finally {\n          span.end();\n        }\n      });\n    };\n    /**\n     * Sets the request body to be a binary stream.\n     * @param value the binary stream\n     * @param contentType the content type.\n     */\n    this.setStreamContent = (value, contentType) => {\n      if (!contentType) {\n        contentType = RequestInformation.binaryContentType;\n      }\n      this.headers.tryAdd(RequestInformation.contentTypeHeader, contentType);\n      this.content = value;\n    };\n    if (httpMethod) {\n      this.httpMethod = httpMethod;\n    }\n    if (urlTemplate) {\n      this.urlTemplate = urlTemplate;\n    }\n    if (pathParameters) {\n      this.pathParameters = pathParameters;\n    }\n  }\n  /**\n   * Gets the URL of the request\n   * @returns the url string\n   */\n  get URL() {\n    const rawUrl = this.pathParameters[RequestInformation.raw_url_key];\n    if (this.uri) {\n      return this.uri;\n    } else if (rawUrl) {\n      this.URL = rawUrl;\n      return rawUrl;\n    } else if (!this.queryParameters) {\n      throw new Error(\"queryParameters cannot be undefined\");\n    } else if (!this.pathParameters) {\n      throw new Error(\"pathParameters cannot be undefined\");\n    } else if (!this.urlTemplate) {\n      throw new Error(\"urlTemplate cannot be undefined\");\n    } else {\n      const data = {};\n      for (const key in this.queryParameters) {\n        if (this.queryParameters[key] !== null && this.queryParameters[key] !== undefined) {\n          data[key] = this.normalizeValue(this.queryParameters[key]);\n        }\n      }\n      for (const key in this.pathParameters) {\n        if (this.pathParameters[key] !== null && this.pathParameters[key] !== undefined) {\n          data[key] = this.normalizeValue(this.pathParameters[key]);\n        }\n      }\n      return StdUriTemplate.expand(this.urlTemplate, data);\n    }\n  }\n  /** Sets the URL of the request */\n  set URL(url) {\n    if (!url) throw new Error(\"URL cannot be undefined\");\n    this.uri = url;\n    this.queryParameters = {};\n    this.pathParameters = {};\n  }\n  /**\n   * Gets the request options for the request.\n   * @returns the request options.\n   */\n  getRequestOptions() {\n    return this._requestOptions;\n  }\n  /**\n   * Adds the headers for the request.\n   * @param source The source collection to add the headers to\n   */\n  addRequestHeaders(source) {\n    if (source) {\n      this.headers.addAllRaw(source);\n    }\n  }\n  /**\n   * Adds the request options for the request.\n   * @param options the options to add.\n   */\n  addRequestOptions(options) {\n    if (!options || options.length === 0) return;\n    options.forEach(option => {\n      this._requestOptions[option.getKey()] = option;\n    });\n  }\n  /**\n   * Removes the request options for the request.\n   * @param options the options to remove.\n   */\n  removeRequestOptions(...options) {\n    if (!options || options.length === 0) return;\n    options.forEach(option => {\n      delete this._requestOptions[option.getKey()];\n    });\n  }\n  normalizeValue(value) {\n    if (value instanceof DateOnly || value instanceof TimeOnly || value instanceof Duration) {\n      return value.toString();\n    }\n    if (value instanceof Date) {\n      return value.toISOString();\n    }\n    if (Array.isArray(value)) {\n      return value.map(val => this.normalizeValue(val));\n    }\n    return value;\n  }\n  /**\n   * Sets the query string parameters from a raw object.\n   * @param q parameters the parameters.\n   * @param p the mapping from code symbol to URI template parameter name.\n   */\n  setQueryStringParametersFromRawObject(q, p) {\n    if (q === null || q === undefined) return;\n    Object.entries(q).forEach(([k, v]) => {\n      let key = k;\n      if (p) {\n        const keyCandidate = p[key];\n        if (keyCandidate) {\n          key = keyCandidate;\n        }\n      }\n      if (typeof v === \"boolean\" || typeof v === \"number\" || typeof v === \"string\" || Array.isArray(v)) this.queryParameters[key] = v;else if (v instanceof DateOnly || v instanceof TimeOnly || v instanceof Duration) this.queryParameters[key] = v.toString();else if (v instanceof Date) this.queryParameters[key] = v.toISOString();else if (v === undefined) this.queryParameters[key] = undefined;\n    });\n  }\n  /**\n   * Configure the current request with headers, query parameters and options.\n   * @param config the configuration object to use.\n   * @param queryParametersMapper mapping between code symbols and URI template parameter names.\n   */\n  configure(config, queryParametersMapper) {\n    if (!config) return;\n    this.addRequestHeaders(config.headers);\n    this.setQueryStringParametersFromRawObject(config.queryParameters, queryParametersMapper);\n    this.addRequestOptions(config.options);\n  }\n}\nRequestInformation.raw_url_key = \"request-raw-url\";\nRequestInformation.binaryContentType = \"application/octet-stream\";\nRequestInformation.contentTypeHeader = \"Content-Type\";\nRequestInformation.tracerKey = \"@microsoft/kiota-abstractions\";\nRequestInformation.requestTypeKey = \"com.microsoft.kiota.request.type\";\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { RequestInformation } from \"./requestInformation.js\";\nexport const getPathParameters = parameters => {\n  const result = {};\n  if (typeof parameters === \"string\") {\n    result[RequestInformation.raw_url_key] = parameters;\n  } else if (parameters) {\n    for (const key in parameters) {\n      if (Object.prototype.hasOwnProperty.call(parameters, key)) {\n        result[key] = parameters[key];\n      }\n    }\n  }\n  return result;\n};\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * Represents the HTTP method used by a request.\n */\nexport var HttpMethod;\n(function (HttpMethod) {\n  /** The HTTP GET method */\n  HttpMethod[\"GET\"] = \"GET\";\n  /** The HTTP POST method */\n  HttpMethod[\"POST\"] = \"POST\";\n  /** The HTTP PATCH method */\n  HttpMethod[\"PATCH\"] = \"PATCH\";\n  /** The HTTP DELETE method */\n  HttpMethod[\"DELETE\"] = \"DELETE\";\n  /** The HTTP OPTIONS method */\n  HttpMethod[\"OPTIONS\"] = \"OPTIONS\";\n  /** The HTTP CONNECT method */\n  HttpMethod[\"CONNECT\"] = \"CONNECT\";\n  /** The HTTP TRACE method */\n  HttpMethod[\"TRACE\"] = \"TRACE\";\n  /** The HTTP HEAD method */\n  HttpMethod[\"HEAD\"] = \"HEAD\";\n  /** The HTTP PUT method */\n  HttpMethod[\"PUT\"] = \"PUT\";\n})(HttpMethod || (HttpMethod = {}));\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { getPathParameters } from \"./getPathParameters.js\";\nimport { HttpMethod } from \"./httpMethod.js\";\nimport { RequestInformation } from \"./requestInformation.js\";\nconst sanitizeMethodName = methodName => {\n  if (methodName.startsWith(\"to\")) {\n    return methodName.substring(2).replace(\"RequestInformation\", \"\").toLowerCase();\n  }\n  return methodName;\n};\nconst getRequestMethod = key => {\n  switch (sanitizeMethodName(key)) {\n    case \"delete\":\n      return \"delete\";\n    case \"get\":\n      return \"get\";\n    case \"head\":\n      return \"head\";\n    case \"options\":\n      return \"options\";\n    case \"patch\":\n      return \"patch\";\n    case \"post\":\n      return \"post\";\n    case \"put\":\n      return \"put\";\n    default:\n      return undefined;\n  }\n};\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nconst toRequestInformation = (urlTemplate, pathParameters, metadata, requestAdapter, httpMethod, body, bodyMediaType, requestConfiguration) => {\n  const requestInfo = new RequestInformation(httpMethod, urlTemplate, pathParameters);\n  requestInfo.configure(requestConfiguration, metadata.queryParametersMapper);\n  addAcceptHeaderIfPresent(metadata, requestInfo);\n  if (metadata.requestBodySerializer) {\n    if (!body) throw new Error(\"body cannot be undefined\");\n    if (typeof metadata.requestBodySerializer === \"function\") {\n      requestInfo.setContentFromParsable(requestAdapter, metadata.requestBodyContentType ? metadata.requestBodyContentType : bodyMediaType, body, metadata.requestBodySerializer);\n    } else {\n      requestInfo.setContentFromScalar(requestAdapter, metadata.requestBodyContentType ? metadata.requestBodyContentType : bodyMediaType, body);\n    }\n  } else if (metadata.requestInformationContentSetMethod === \"setStreamContent\") {\n    if (!body) throw new Error(\"body cannot be undefined\");\n    requestInfo.setStreamContent(body, metadata.requestBodyContentType ? metadata.requestBodyContentType : bodyMediaType);\n  }\n  return requestInfo;\n};\nconst addAcceptHeaderIfPresent = (metadata, requestInfo) => {\n  if (metadata.responseBodyContentType) {\n    requestInfo.headers.tryAdd(\"Accept\", metadata.responseBodyContentType);\n  }\n};\nconst getRequestMediaTypeUserDefinedValue = (requestMetadata, args) => {\n  if (args.length > 2 && !requestMetadata.requestBodySerializer && requestMetadata.requestInformationContentSetMethod === \"setStreamContent\" && typeof args[1] === \"string\") {\n    // request body with unknown media type so we have an argument for it.\n    return args[1];\n  }\n  return undefined;\n};\nconst getRequestConfigurationValue = args => {\n  if (args.length > 0) {\n    // request configuration is always the last argument\n    return args[args.length - 1];\n  }\n  return undefined;\n};\nconst send = (requestAdapter, requestInfo, metadata) => {\n  switch (metadata.adapterMethodName) {\n    case \"send\":\n      if (!metadata.responseBodyFactory) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.send(requestInfo, metadata.responseBodyFactory, metadata.errorMappings);\n    case \"sendCollection\":\n      if (!metadata.responseBodyFactory) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.sendCollection(requestInfo, metadata.responseBodyFactory, metadata.errorMappings);\n    case \"sendEnum\":\n      if (!metadata.enumObject) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.sendEnum(requestInfo, metadata.enumObject, metadata.errorMappings);\n    case \"sendCollectionOfEnum\":\n      if (!metadata.enumObject) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.sendCollectionOfEnum(requestInfo, metadata.enumObject, metadata.errorMappings);\n    case \"sendCollectionOfPrimitive\":\n      if (!metadata.responseBodyFactory) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.sendCollectionOfPrimitive(requestInfo, metadata.responseBodyFactory, metadata.errorMappings);\n    case \"sendPrimitive\":\n      if (!metadata.responseBodyFactory) {\n        throw new Error(\"couldn't find response body factory\");\n      }\n      return requestAdapter.sendPrimitive(requestInfo, metadata.responseBodyFactory, metadata.errorMappings);\n    case \"sendNoResponseContent\":\n      return requestAdapter.sendNoResponseContent(requestInfo, metadata.errorMappings);\n    default:\n      throw new Error(\"couldn't find adapter method\");\n  }\n};\nexport const apiClientProxifier = (requestAdapter, pathParameters, navigationMetadata, requestsMetadata) => {\n  if (!requestAdapter) throw new Error(\"requestAdapter cannot be undefined\");\n  if (!pathParameters) throw new Error(\"pathParameters cannot be undefined\");\n  return new Proxy({}, {\n    get: (_, property) => {\n      const name = String(property);\n      if (name === \"withUrl\") {\n        return rawUrl => {\n          if (!rawUrl) throw new Error(\"rawUrl cannot be undefined\");\n          return apiClientProxifier(requestAdapter, getPathParameters(rawUrl), navigationMetadata, requestsMetadata);\n        };\n      }\n      if (requestsMetadata) {\n        const metadataKey = getRequestMethod(name);\n        if (metadataKey) {\n          const metadata = requestsMetadata[metadataKey];\n          if (metadata) {\n            switch (name) {\n              case \"get\":\n                return requestConfiguration => {\n                  const requestInfo = toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.GET, undefined, undefined, requestConfiguration);\n                  return send(requestAdapter, requestInfo, metadata);\n                };\n              case \"patch\":\n                return (...args) => {\n                  const requestInfo = toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.PATCH, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                  return send(requestAdapter, requestInfo, metadata);\n                };\n              case \"put\":\n                return (...args) => {\n                  const requestInfo = toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.PUT, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                  return send(requestAdapter, requestInfo, metadata);\n                };\n              case \"delete\":\n                return (...args) => {\n                  const requestInfo = toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.DELETE, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                  return send(requestAdapter, requestInfo, metadata);\n                };\n              case \"post\":\n                return (...args) => {\n                  const requestInfo = toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.POST, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                  return send(requestAdapter, requestInfo, metadata);\n                };\n              case \"toGetRequestInformation\":\n                return requestConfiguration => {\n                  return toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.GET, undefined, undefined, requestConfiguration);\n                };\n              case \"toPatchRequestInformation\":\n                return (...args) => {\n                  return toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.PATCH, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                };\n              case \"toPutRequestInformation\":\n                return (...args) => {\n                  return toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.PUT, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                };\n              case \"toDeleteRequestInformation\":\n                return (...args) => {\n                  return toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.DELETE, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                };\n              case \"toPostRequestInformation\":\n                return (...args) => {\n                  return toRequestInformation(metadata.uriTemplate, pathParameters, metadata, requestAdapter, HttpMethod.POST, args.length > 0 ? args[0] : undefined, getRequestMediaTypeUserDefinedValue(metadata, args), getRequestConfigurationValue(args));\n                };\n              default:\n                break;\n            }\n          }\n        }\n      }\n      if (navigationMetadata) {\n        const navigationCandidate = navigationMetadata[name];\n        if (navigationCandidate) {\n          if (!navigationCandidate.pathParametersMappings || navigationCandidate.pathParametersMappings.length === 0) {\n            // navigation property\n            return apiClientProxifier(requestAdapter, getPathParameters(pathParameters), navigationCandidate.navigationMetadata, navigationCandidate.requestsMetadata);\n          }\n          return (...argArray) => {\n            // navigation method like indexers or multiple path parameters\n            const downWardPathParameters = getPathParameters(pathParameters);\n            if (navigationCandidate.pathParametersMappings && navigationCandidate.pathParametersMappings.length > 0) {\n              for (let i = 0; i < argArray.length; i++) {\n                const element = argArray[i];\n                if (element === undefined || element === null || element === \"\") {\n                  throw new Error(`path parameter ${navigationCandidate.pathParametersMappings[i]} cannot be undefined`);\n                } else {\n                  downWardPathParameters[navigationCandidate.pathParametersMappings[i]] = element;\n                }\n              }\n            }\n            return apiClientProxifier(requestAdapter, downWardPathParameters, navigationCandidate.navigationMetadata, navigationCandidate.requestsMetadata);\n          };\n        }\n        throw new Error(`couldn't find navigation property ${name} data: ${JSON.stringify(navigationMetadata)}`);\n      }\n    }\n  });\n};\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/** Default error type used when no error mapping is registered for the status code */\nexport class DefaultApiError extends Error {\n  constructor(message) {\n    super(message);\n    this.responseHeaders = {};\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * Maintains a list of valid hosts and allows authentication providers to\n * check whether a host is valid before authenticating a request\n */\nexport class AllowedHostsValidator {\n  /**\n   * Creates a new AllowedHostsValidator object with provided values.\n   * @param allowedHosts A list of valid hosts.  If the list is empty, all hosts are valid.\n   */\n  constructor(allowedHosts = new Set()) {\n    this.validateHosts(allowedHosts);\n    this.allowedHosts = allowedHosts !== null && allowedHosts !== void 0 ? allowedHosts : new Set();\n  }\n  /**\n   * Gets the list of valid hosts.  If the list is empty, all hosts are valid.\n   * @returns A list of valid hosts.  If the list is empty, all hosts are valid.\n   */\n  getAllowedHosts() {\n    return Array.from(this.allowedHosts);\n  }\n  /**\n   * Sets the list of valid hosts.  If the list is empty, all hosts are valid.\n   * @param allowedHosts A list of valid hosts.  If the list is empty, all hosts are valid.\n   */\n  setAllowedHosts(allowedHosts) {\n    this.validateHosts(allowedHosts);\n    this.allowedHosts = allowedHosts;\n  }\n  /**\n   * Checks whether the provided host is valid.\n   * @param url The url to check.\n   * @returns True if the host is valid, false otherwise.\n   */\n  isUrlHostValid(url) {\n    var _a, _b;\n    if (!url) return false;\n    if (this.allowedHosts.size === 0) return true;\n    const schemeAndRest = url.split(\"://\");\n    if (schemeAndRest.length >= 2) {\n      const rest = schemeAndRest[1];\n      if (rest) {\n        return this.isHostAndPathValid(rest);\n      }\n    } else if (!url.startsWith(\"http\")) {\n      // protocol relative URL domain.tld/path\n      return this.isHostAndPathValid(url);\n    }\n    if ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.host) {\n      return this.allowedHosts.has((_b = window.location.host) === null || _b === void 0 ? void 0 : _b.toLowerCase());\n    }\n    return false;\n  }\n  isHostAndPathValid(rest) {\n    const hostAndRest = rest.split(\"/\");\n    if (hostAndRest.length >= 2) {\n      const host = hostAndRest[0];\n      if (host) {\n        return this.allowedHosts.has(host.toLowerCase());\n      }\n    }\n    return false;\n  }\n  validateHosts(hostsToValidate) {\n    if (!hostsToValidate) {\n      throw new Error(\"hostsToValidate cannot be null\");\n    }\n    hostsToValidate.forEach(host => {\n      if (host.toLowerCase().startsWith(\"http://\") || host.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\"host should not contain http or https prefix\");\n      }\n    });\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { inNodeEnv } from \"../utils/index.js\";\nconst localhostStrings = new Set([\"localhost\", \"[::1]\", \"::1\", \"127.0.0.1\"]);\n/**\n * Validates the protocol of the url.\n * @param url - The url to validate.\n */\nexport function validateProtocol(url) {\n  if (!isLocalhostUrl(url) && !url.toLocaleLowerCase().startsWith(\"https://\") && !windowUrlStartsWithHttps()) {\n    throw new Error(\"Authentication scheme can only be used with https requests\");\n  }\n}\n/**\n * Checks if the window url starts with https.\n * @returns True if the window url starts with https, false otherwise.\n */\nfunction windowUrlStartsWithHttps() {\n  if (!inNodeEnv()) {\n    return window.location.protocol.toLocaleLowerCase() === \"https:\";\n  }\n  return false;\n}\n/**\n * Checks if the url is a localhost url.\n * @param urlString - The url to check.\n * @returns True if the url is a localhost url, false otherwise.\n */\nexport function isLocalhostUrl(urlString) {\n  try {\n    const url = new URL(urlString);\n    return localhostStrings.has(url.hostname);\n  } catch (_a) {\n    return false;\n  }\n}\n", "import { AllowedHostsValidator } from \"./allowedHostsValidator.js\";\nimport { validateProtocol } from \"./validateProtocol.js\";\n/** Authenticate a request by using an API Key */\nexport class ApiKeyAuthenticationProvider {\n  /**\n   * @param apiKey The API Key to use for authentication\n   * @param parameterName The name of the parameter to use for authentication\n   * @param location The location of the parameter to use for authentication\n   * @param validHosts The hosts that are allowed to use this authentication provider\n   */\n  constructor(apiKey, parameterName, location, validHosts) {\n    this.apiKey = apiKey;\n    this.parameterName = parameterName;\n    this.location = location;\n    if (apiKey === undefined || apiKey === \"\") {\n      throw new Error(\"apiKey cannot be null or empty\");\n    }\n    if (parameterName === undefined || parameterName === \"\") {\n      throw new Error(\"parameterName cannot be null or empty\");\n    }\n    if (location !== ApiKeyLocation.QueryParameter && location !== ApiKeyLocation.Header) {\n      throw new Error(\"location must be either QueryParameter or Header\");\n    }\n    this.validator = new AllowedHostsValidator(validHosts);\n  }\n  authenticateRequest(request,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  additionalAuthenticationContext) {\n    const url = request.URL;\n    if (!url || !this.validator.isUrlHostValid(url)) {\n      return Promise.resolve();\n    }\n    validateProtocol(url);\n    switch (this.location) {\n      case ApiKeyLocation.QueryParameter:\n        request.URL += (url.includes(\"?\") ? \"&\" : \"?\") + this.parameterName + \"=\" + this.apiKey;\n        break;\n      case ApiKeyLocation.Header:\n        request.headers.add(this.parameterName, this.apiKey);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n/** The location for the API key */\nexport var ApiKeyLocation;\n(function (ApiKeyLocation) {\n  /** The API key is in the query parameters */\n  ApiKeyLocation[ApiKeyLocation[\"QueryParameter\"] = 0] = \"QueryParameter\";\n  /** The API key is in the headers */\n  ApiKeyLocation[ApiKeyLocation[\"Header\"] = 1] = \"Header\";\n})(ApiKeyLocation || (ApiKeyLocation = {}));\n", "/** This authentication provider does not perform any authentication.   */\nexport class AnonymousAuthenticationProvider {\n  constructor() {\n    this.authenticateRequest = (_, _2) => {\n      return Promise.resolve();\n    };\n  }\n}\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { Headers } from \"../headers.js\";\n/** Provides a base class for implementing AuthenticationProvider for Bearer token scheme. */\nexport class BaseBearerTokenAuthenticationProvider {\n  /**\n   * The constructor for the BaseBearerTokenAuthenticationProvider\n   * @param accessTokenProvider The AccessTokenProvider instance that this provider will use to authenticate requests.\n   */\n  constructor(accessTokenProvider) {\n    this.accessTokenProvider = accessTokenProvider;\n    this.authenticateRequest = async (request, additionalAuthenticationContext) => {\n      var _a;\n      if (!request) {\n        throw new Error(\"request info cannot be null\");\n      }\n      if ((additionalAuthenticationContext === null || additionalAuthenticationContext === void 0 ? void 0 : additionalAuthenticationContext.claims) && request.headers.has(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey)) {\n        request.headers.delete(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey);\n      }\n      if (!((_a = request.headers) === null || _a === void 0 ? void 0 : _a.has(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey))) {\n        const token = await this.accessTokenProvider.getAuthorizationToken(request.URL, additionalAuthenticationContext);\n        if (!request.headers) {\n          request.headers = new Headers();\n        }\n        if (token) {\n          request.headers.add(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey, `Bearer ${token}`);\n        }\n      }\n    };\n  }\n}\nBaseBearerTokenAuthenticationProvider.authorizationHeaderKey = \"Authorization\";\n", "/** Default response handler to access the native response object. */\nexport class NativeResponseHandler {\n  handleResponse(response, errorMappings) {\n    this.value = response;\n    this.errorMappings = errorMappings;\n    return Promise.resolve(undefined);\n  }\n}\n", "var _a;\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { NativeResponseHandler } from \"./nativeResponseHandler.js\";\n/** This class can be used to wrap a request using the fluent API and get the native response object in return. */\nexport class NativeResponseWrapper {}\n_a = NativeResponseWrapper;\nNativeResponseWrapper.CallAndGetNative = async (originalCall, q, h, o) => {\n  const responseHandler = new NativeResponseHandler();\n  await originalCall(q, h, o, responseHandler);\n  return responseHandler.value;\n};\nNativeResponseWrapper.CallAndGetNativeWithBody = async (originalCall, requestBody, q, h, o) => {\n  const responseHandler = new NativeResponseHandler();\n  await originalCall(requestBody, q, h, o, responseHandler);\n  return responseHandler.value;\n};\n", "/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nexport const ResponseHandlerOptionKey = \"ResponseHandlerOptionKey\";\n/**\n * Options to intercept the request from the main pipeline.\n */\nexport class ResponseHandlerOption {\n  getKey() {\n    return ResponseHandlerOptionKey;\n  }\n}\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY,QAAQ,QAAQ,QAAQ,yBAAyB,QAAQ,uBAAuB;AACpG,QAAM,uBAAuB;AAAA,MAC3B,wBAAwB;AAAA,IAC1B;AACA,QAAM,QAAQ,CAAC;AAAA,MACb,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAED,QAAM,IAAI,CAAC,MAAM,SAAS,OAAO,IAAI,sBAAsB,IAAI;AAC/D,QAAM,gBAAgB,IAAI,OAAO;AAAA,MAAC;AAAA,MAAoB,EAAE,SAAS,GAAG;AAAA,MAAG,EAAE,UAAU,GAAG;AAAA,MAAG,EAAE,SAAS,GAAG;AAAA,MAAG,EAAE,QAAQ,GAAG;AAAA,MAAG;AAAA,MAAM,EAAE,SAAS,GAAG;AAAA,MAAG,EAAE,WAAW,GAAG;AAAA,MAAG,EAAE,WAAW,GAAG;AAAA,MAAG;AAAA;AAAA,IACvL,EAAE,KAAK,EAAE,CAAC;AACV,aAAS,SAASA,IAAG;AACnB,UAAIA,OAAM,MAAMA,OAAM,UAAaA,OAAM,MAAM;AAC7C,eAAO;AAAA,MACT;AACA,aAAO,WAAWA,GAAE,QAAQ,KAAK,GAAG,CAAC;AAAA,IACvC;AACA,YAAQ,uBAAuB,IAAI,MAAM,kBAAkB;AAC3D,YAAQ,yBAAyB,IAAI,MAAM,8BAA8B;AACzE,aAAS,MAAM,aAAa,SAAS,sBAAsB;AACzD,YAAM,QAAQ,cAAc,KAAK,WAAW;AAC5C,UAAI,CAAC,SAAS,CAAC,MAAM,QAAQ;AAC3B,cAAM,QAAQ;AAAA,MAChB;AACA,UAAI,QAAQ;AACZ,UAAI,uBAAuB;AAC3B,YAAM,SAAS,CAAC;AAChB,iBAAW;AAAA,QACT;AAAA,MACF,KAAK,OAAO;AACV,YAAI,MAAM,OAAO,IAAI,GAAG;AACtB,kBAAQ;AACR,iBAAO,IAAI,IAAI,SAAS,MAAM,OAAO,IAAI,CAAC;AAC1C,cAAI,CAAC,OAAO,0BAA0B,CAAC,OAAO,UAAU,OAAO,IAAI,CAAC,GAAG;AACrE;AACA,gBAAI,uBAAuB,GAAG;AAC5B,oBAAM,QAAQ;AAAA,YAChB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,UAAI,OAAO;AACT,cAAM,QAAQ;AAAA,MAChB;AACA,YAAM,WAAW;AACjB,UAAI,MAAM,OAAO,UAAU;AACzB,iBAAS,WAAW;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AACA,YAAQ,QAAQ;AAChB,QAAM,IAAI,CAAC,QAAQ,cAAc;AAC/B,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AACA,UAAI,iBAAiB,OAAO,SAAS;AACrC,YAAM,gBAAgB,eAAe,QAAQ,GAAG;AAChD,UAAI,gBAAgB,IAAI;AACtB,cAAM,YAAY,SAAS,eAAe,MAAM,gBAAgB,CAAC,GAAG,EAAE;AACtE,yBAAiB,OAAO,QAAQ,YAAY,gBAAgB,CAAC;AAAA,MAC/D;AACA,aAAO,iBAAiB;AAAA,IAC1B;AACA,aAASC,WAAU,UAAU;AAC3B,UAAI,CAAC,SAAS,SAAS,CAAC,SAAS,UAAU,CAAC,SAAS,SAAS,CAAC,SAAS,QAAQ,CAAC,SAAS,SAAS,CAAC,SAAS,WAAW,CAAC,SAAS,SAAS;AACzI,eAAO;AAAA,MACT;AACA,aAAO,CAAC,SAAS,YAAY,KAAK,KAAK,EAAE,SAAS,OAAO,GAAG,GAAG,EAAE,SAAS,QAAQ,GAAG,GAAG,EAAE,SAAS,OAAO,GAAG,GAAG,EAAE,SAAS,MAAM,GAAG,IAAI,SAAS,SAAS,SAAS,WAAW,SAAS,YAAY,KAAK,EAAE,SAAS,OAAO,GAAG,GAAG,EAAE,SAAS,SAAS,GAAG,GAAG,EAAE,SAAS,SAAS,GAAG,CAAC,EAAE,OAAO,OAAO,EAAE,KAAK,EAAE;AAAA,IAC7S;AACA,YAAQ,YAAYA;AAAA;AAAA;;;AC1Fb,IAAM,2BAAN,MAA+B;AAAA,EACpC,cAAc;AAEZ,SAAK,iCAAiC,oBAAI,IAAI;AAAA,EAChD;AAAA,EACA,sBAAsB;AACpB,UAAM,IAAI,MAAM,mFAAmF;AAAA,EACrG;AAAA,EACA,iBAAiB,aAAa,SAAS;AACrC,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,UAAM,4BAA4B,YAAY,MAAM,GAAG,EAAE,CAAC;AAC1D,QAAI,UAAU,KAAK,+BAA+B,IAAI,yBAAyB;AAC/E,QAAI,SAAS;AACX,aAAO,QAAQ,iBAAiB,2BAA2B,OAAO;AAAA,IACpE;AACA,UAAM,qBAAqB,0BAA0B,QAAQ,aAAa,EAAE;AAC5E,cAAU,KAAK,+BAA+B,IAAI,kBAAkB;AACpE,QAAI,SAAS;AACX,aAAO,QAAQ,iBAAiB,oBAAoB,OAAO;AAAA,IAC7D;AACA,UAAM,IAAI,MAAM,gBAAgB,kBAAkB,kDAAkD;AAAA,EACtG;AACF;AAEA,yBAAyB,kBAAkB,IAAI,yBAAyB;;;AC/BjE,IAAM,qCAAN,MAAyC;AAAA,EAC9C,cAAc;AAEZ,SAAK,iCAAiC,oBAAI,IAAI;AAAA,EAChD;AAAA,EACA,sBAAsB;AACpB,UAAM,IAAI,MAAM,mFAAmF;AAAA,EACrG;AAAA,EACA,uBAAuB,aAAa;AAClC,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,UAAM,4BAA4B,YAAY,MAAM,GAAG,EAAE,CAAC;AAC1D,QAAI,UAAU,KAAK,+BAA+B,IAAI,yBAAyB;AAC/E,QAAI,SAAS;AACX,aAAO,QAAQ,uBAAuB,yBAAyB;AAAA,IACjE;AACA,UAAM,qBAAqB,0BAA0B,QAAQ,aAAa,EAAE;AAC5E,cAAU,KAAK,+BAA+B,IAAI,kBAAkB;AACpE,QAAI,SAAS;AACX,aAAO,QAAQ,uBAAuB,kBAAkB;AAAA,IAC1D;AACA,UAAM,IAAI,MAAM,gBAAgB,kBAAkB,sDAAsD;AAAA,EAC1G;AACF;AAEA,mCAAmC,kBAAkB,IAAI,mCAAmC;;;AClBrF,SAAS,UAAU,aAAa,OAAO,uBAAuB;AACnE,QAAM,SAAS,uBAAuB,aAAa,OAAO,qBAAqB;AAC/E,SAAO,iBAAiB,QAAW,OAAO,qBAAqB;AAC/D,SAAO,OAAO,qBAAqB;AACrC;AAQO,SAAS,kBAAkB,aAAa,OAAO,uBAAuB;AAC3E,QAAM,SAAS,UAAU,aAAa,OAAO,qBAAqB;AAClE,SAAO,yBAAyB,MAAM;AACxC;AAQO,SAAS,oBAAoB,aAAa,QAAQ,uBAAuB;AAC9E,QAAM,SAAS,uBAAuB,aAAa,QAAQ,qBAAqB;AAChF,SAAO,8BAA8B,QAAW,QAAQ,qBAAqB;AAC7E,SAAO,OAAO,qBAAqB;AACrC;AAQO,SAAS,4BAA4B,aAAa,QAAQ,uBAAuB;AACtF,QAAM,SAAS,oBAAoB,aAAa,QAAQ,qBAAqB;AAC7E,SAAO,yBAAyB,MAAM;AACxC;AAQA,SAAS,uBAAuB,aAAa,OAAO,uBAAuB;AACzE,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AACA,MAAI,CAAC,uBAAuB;AAC1B,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,SAAO,mCAAmC,gBAAgB,uBAAuB,WAAW;AAC9F;AAMA,SAAS,yBAAyB,QAAQ;AACxC,QAAM,UAAU,IAAI,YAAY;AAChC,SAAO,QAAQ,OAAO,MAAM;AAC9B;AAQO,SAAS,YAAY,aAAa,gBAAgB,SAAS;AAChE,MAAI,OAAO,mBAAmB,UAAU;AACtC,qBAAiB,oBAAoB,cAAc;AAAA,EACrD;AACA,QAAM,SAAS,aAAa,aAAa,gBAAgB,OAAO;AAChE,SAAO,OAAO,eAAe,OAAO;AACtC;AAQA,SAAS,aAAa,aAAa,QAAQ,SAAS;AAClD,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAC9C;AACA,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AACA,SAAO,yBAAyB,gBAAgB,iBAAiB,aAAa,MAAM;AACtF;AAQO,SAAS,sBAAsB,aAAa,gBAAgB,SAAS;AAC1E,MAAI,OAAO,mBAAmB,UAAU;AACtC,qBAAiB,oBAAoB,cAAc;AAAA,EACrD;AACA,QAAM,SAAS,aAAa,aAAa,gBAAgB,OAAO;AAChE,SAAO,OAAO,4BAA4B,OAAO;AACnD;AAMA,SAAS,oBAAoB,OAAO;AAClC,QAAM,UAAU,IAAI,YAAY;AAChC,SAAO,QAAQ,OAAO,KAAK,EAAE;AAC/B;;;AC5HA,IAAM,kBAAkB;AAOjB,SAAS,gBAAgB,OAAO,uBAAuB;AAC5D,SAAO,UAAU,iBAAiB,OAAO,qBAAqB;AAChE;AAOO,SAAS,wBAAwB,OAAO,uBAAuB;AACpE,SAAO,kBAAkB,iBAAiB,OAAO,qBAAqB;AACxE;AAOO,SAAS,0BAA0B,QAAQ,uBAAuB;AACvE,SAAO,oBAAoB,iBAAiB,QAAQ,qBAAqB;AAC3E;AAOO,SAAS,kCAAkC,QAAQ,uBAAuB;AAC/E,SAAO,4BAA4B,iBAAiB,QAAQ,qBAAqB;AACnF;AAOO,SAAS,oBAAoB,gBAAgB,SAAS;AAC3D,SAAO,YAAY,iBAAiB,gBAAgB,OAAO;AAC7D;AAOO,SAAS,8BAA8B,gBAAgB,SAAS;AACrE,SAAO,sBAAsB,iBAAiB,gBAAgB,OAAO;AACvE;;;AC5DO,IAAM,wBAAN,MAA4B;AAAA,EACjC,sBAAsB;AACpB,WAAO,KAAK,UAAU,oBAAoB;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,WAAW,WAAW,UAAU;AAC1C,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AAAA,EACF;AAAA,EACA,iBAAiB,aAAa,SAAS;AACrC,UAAM,OAAO,KAAK,UAAU,iBAAiB,aAAa,OAAO;AACjE,UAAM,iBAAiB,KAAK;AAC5B,UAAM,gBAAgB,KAAK;AAC3B,SAAK,4BAA4B,WAAS;AACxC,UAAI,KAAK,UAAW,MAAK,UAAU,KAAK;AACxC,UAAI,eAAgB,gBAAe,KAAK;AAAA,IAC1C;AACA,SAAK,2BAA2B,WAAS;AACvC,UAAI,KAAK,SAAU,MAAK,SAAS,KAAK;AACtC,UAAI,cAAe,eAAc,KAAK;AAAA,IACxC;AACA,WAAO;AAAA,EACT;AACF;;;AChCO,IAAM,kCAAN,MAAsC;AAAA,EAC3C,sBAAsB;AACpB,WAAO,KAAK,UAAU,oBAAoB;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,WAAW,WAAW,UAAU,UAAU;AACpD,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AAAA,EACF;AAAA,EACA,uBAAuB,aAAa;AAClC,UAAM,SAAS,KAAK,UAAU,uBAAuB,WAAW;AAChE,UAAM,iBAAiB,OAAO;AAC9B,UAAM,gBAAgB,OAAO;AAC7B,UAAM,gBAAgB,OAAO;AAC7B,WAAO,8BAA8B,WAAS;AAC5C,UAAI,KAAK,UAAW,MAAK,UAAU,KAAK;AACxC,UAAI,eAAgB,gBAAe,KAAK;AAAA,IAC1C;AACA,WAAO,6BAA6B,WAAS;AAC3C,UAAI,KAAK,SAAU,MAAK,SAAS,KAAK;AACtC,UAAI,cAAe,eAAc,KAAK;AAAA,IACxC;AACA,WAAO,6BAA6B,CAAC,OAAO,YAAY;AACtD,UAAI,KAAK,SAAU,MAAK,SAAS,OAAO,OAAO;AAC/C,UAAI,cAAe,eAAc,OAAO,OAAO;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AACF;;;AC7BO,IAAM,0CAA0C,gBAAc;AACnE,SAAO;AACT;AAMO,IAAM,gBAAgB,UAAQ;AACnC,QAAM,gBAAgB;AACtB,UAAQ,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc,cAAc;AACpG;AAMO,IAAM,6BAA6B,CAAC,cAAc,CAAC,MAAM;AAC9D,SAAO;AAAA,IACL,OAAO,QAAM;AACX,kBAAY,QAAQ;AAAA,IACtB;AAAA,IACA,UAAU,QAAM;AACd,kBAAY,WAAW,MAAM,YAAY;AAAA,IAC3C;AAAA,EACF;AACF;AAMO,IAAM,uBAAuB,CAAC,SAAS,gBAAgB,CAAC,MAAM;AACnE;AACF;;;ACxCO,SAAS,gBAAgB,MAAM;AACpC,QAAM,eAAe;AACrB,SAAO,gBAAgB,OAAO,aAAa,UAAU;AACvD;AAMO,SAAS,oBAAoB,OAAO;AACzC,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;;;ACPO,IAAM,iBAAiB,UAAQ;AACpC,QAAM,eAAe;AACrB,SAAO,gBAAgB,aAAa,iBAAiB,SAAS,aAAa,MAAM,MAAM,UAAQ,cAAc,IAAI,CAAC;AACpH;AAMO,IAAM,qBAAqB,WAAS;AACzC,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;;;ACrBO,SAAS,cAAc,MAAM;AAClC,SAAO,KAAK,UAAU;AACxB;AAKO,SAAS,oBAAoB;AAClC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,UAAU,MAAM;AAAA,EAClB;AACF;;;ACLO,IAAM,kBAAkB,UAAQ;AACrC,QAAM,eAAe;AACrB,SAAO,gBAAgB,aAAa,iBAAiB,UAAU,aAAa,iBAAiB,UAAU,SAAS,OAAO,OAAO,aAAa,KAAK,EAAE,MAAM,UAAQ,cAAc,IAAI,CAAC;AACrL;AAMO,IAAM,sBAAsB,WAAS;AAC1C,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;;;ACrBO,SAAS,gBAAgB,MAAM;AACpC,QAAM,eAAe;AACrB,SAAO,gBAAgB,OAAO,aAAa,UAAU;AACvD;AAMO,SAAS,oBAAoB,OAAO;AACzC,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;;;ACdO,SAAS,iBAAiB,MAAM;AACrC,QAAM,eAAe;AACrB,SAAO,gBAAgB,OAAO,aAAa,UAAU;AACvD;AAMO,SAAS,qBAAqB,OAAO;AAC1C,SAAO;AAAA,IACL;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;;;ACbA,IAAM,gBAAgB,WAAS;AAC7B,QAAM,UAAU,OAAO,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,OAAO,GAAG,CAAC;AACxE,SAAO,OAAO,YAAY,OAAO;AACnC;AAOO,IAAM,8BAA8B,CAAC,aAAa,iBAAiB;AACxE,QAAM,WAAW,cAAc,YAAY;AAC3C,SAAO,aAAa,SAAS,WAAW,CAAC;AAC3C;;;ACnBA,IAAM,gBAAgB;AAMf,IAAM,kBAAkB,YAAU;AACvC,MAAI,UAAU,cAAc,KAAK,MAAM,GAAG;AACxC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAKO,IAAM,aAAa,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG;AAK1E,IAAM,kBAAkB,MAAM;AAMrC,IAAM,MAAM,WAAS;AACnB,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAE9B,aAAS,IAAI,KAAK,OAAO,KAAK,QAAU,GAAG,SAAS,EAAE,EAAE,UAAU,CAAC;AAAA,EACrE;AACA,SAAO;AACT;;;ACxBO,IAAM,YAAY,MAAM;AAC7B,MAAI;AACF,WAAO,CAAC,CAAC,UAAU,CAAC,CAAC;AAAA,EACvB,SAAS,KAAK;AAGZ,WAAO,EAAE,eAAe;AAAA,EAC1B;AACF;;;AChBO,IAAM,uBAAN,MAA2B;AAAA,EAChC,cAAc;AACZ,SAAK,gBAAgB,oBAAI,IAAI;AAC7B,SAAK,QAAQ,oBAAI,IAAI;AACrB,SAAK,0BAA0B;AAC/B,SAAK,2BAA2B;AAAA,EAClC;AAAA,EACA,IAAI,KAAK;AACP,UAAM,UAAU,KAAK,MAAM,IAAI,GAAG;AAClC,QAAI,YAAY,KAAK,2BAA2B,QAAQ,WAAW,CAAC,KAAK,0BAA0B;AACjG,aAAO,QAAQ;AAAA,IACjB;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,KAAK,OAAO;AACd,UAAM,kBAAkB,KAAK,MAAM,IAAI,GAAG;AAC1C,UAAM,WAAW,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB;AACnG,QAAI,iBAAiB;AACnB,sBAAgB,QAAQ;AACxB,sBAAgB,UAAU,KAAK;AAAA,IACjC,OAAO;AACL,WAAK,MAAM,IAAI,KAAK;AAAA,QAClB,SAAS,KAAK;AAAA,QACd;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,cAAc,QAAQ,SAAO;AAChC,UAAI,KAAK,UAAU,KAAK;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA,EACA,YAAY;AACV,QAAI,kBAAkB,CAAC,GAAG,KAAK,MAAM,QAAQ,CAAC;AAC9C,QAAI,KAAK,yBAAyB;AAChC,wBAAkB,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO;AAAA,IAChE;AACA,WAAO,gBAAgB,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AAC3C,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,sCAAsC;AACpC,UAAM,OAAO,CAAC;AACd,eAAW,CAAC,KAAK,KAAK,KAAK,KAAK,OAAO;AACrC,UAAI,MAAM,WAAW,CAAC,MAAM,OAAO;AACjC,aAAK,KAAK,GAAG;AAAA,MACf;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,UAAU,UAAU,gBAAgB;AAClC,QAAI,CAAC,UAAU;AACb,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,qBAAiB,mBAAmB,QAAQ,mBAAmB,SAAS,iBAAiB,WAAW;AACpG,SAAK,cAAc,IAAI,gBAAgB,QAAQ;AAC/C,WAAO;AAAA,EACT;AAAA,EACA,YAAY,gBAAgB;AAC1B,SAAK,cAAc,OAAO,cAAc;AAAA,EAC1C;AAAA,EACA,QAAQ;AACN,SAAK,MAAM,MAAM;AAAA,EACnB;AAAA,EACA,IAAI,wBAAwB,OAAO;AACjC,SAAK,2BAA2B;AAChC,SAAK,MAAM,QAAQ,OAAK;AACtB,QAAE,UAAU,CAAC;AAAA,IACf,CAAC;AAAA,EACH;AAAA,EACA,IAAI,0BAA0B;AAC5B,WAAO,KAAK;AAAA,EACd;AACF;;;AC1EO,IAAM,8BAAN,MAAkC;AAAA,EACvC,qBAAqB;AACnB,WAAO,IAAI,qBAAqB;AAAA,EAClC;AACF;;;ACLO,IAAM,+BAAN,MAAmC;AAAC;AAC3C,6BAA6B,WAAW,IAAI,4BAA4B;;;ACMjE,IAAM,+BAAN,cAA2C,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtE,YAAY,UAAU;AACpB,UAAM,UAAU,WAAS;AACvB,YAAM,cAAc;AACpB,UAAI,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,cAAc;AACtF,oBAAY,aAAa,0BAA0B;AAAA,MACrD;AAAA,IACF,GAAG,WAAS;AACV,YAAM,cAAc;AACpB,UAAI,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,cAAc;AACtF,oBAAY,aAAa,0BAA0B;AAAA,MACrD;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;AClBO,IAAM,8CAAN,cAA0D,gCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/F,YAAY,UAAU;AACpB,UAAM,UAAU,WAAS;AACvB,YAAM,cAAc;AACpB,UAAI,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,cAAc;AACtF,oBAAY,aAAa,0BAA0B;AAAA,MACrD;AAAA,IACF,GAAG,WAAS;AACV,YAAM,cAAc;AACpB,UAAI,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,cAAc;AACtF,oBAAY,aAAa,0BAA0B;AACnD,oBAAY,aAAa,0BAA0B;AAAA,MACrD;AAAA,IACF,GAAG,CAAC,OAAO,WAAW;AACpB,YAAM,cAAc;AACpB,UAAI,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,cAAc;AACtF,cAAM,OAAO,YAAY,aAAa,oCAAoC;AAC1E,mBAAW,OAAO,MAAM;AACtB,iBAAO,eAAe,GAAG;AAAA,QAC3B;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;AC3BO,IAAM,gCAAgC,MAAM;AAEjD,QAAM,eAAe,6BAA6B,SAAS,mBAAmB;AAI9E,QAAM,UAAU;AAAA,IACd,KAAK,CAAC,SAAS,SAAS;AACtB,UAAI,SAAS,gBAAgB;AAC3B,eAAO;AAAA,MACT;AACA,aAAO,aAAa,IAAI,KAAK,SAAS,CAAC;AAAA,IACzC;AAAA,IACA,KAAK,CAAC,QAAQ,MAAM,OAAO,aAAa;AACtC,UAAI,SAAS,gBAAgB;AAC3B,gBAAQ,KAAK,gEAAgE;AAC7E,eAAO;AAAA,MACT;AAEA,cAAQ,IAAI,QAAQ,MAAM,OAAO,QAAQ;AACzC,mBAAa,IAAI,KAAK,SAAS,GAAG,KAAK;AACvC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;;;ACjCO,IAAM,kBAAkB;AAMxB,SAAS,sBAAsB,QAAQ;AAE5C,SAAO,OAAO,KAAK,MAAM,EAAE,SAAS,eAAe;AACrD;;;ACGO,SAAS,0BAA0B,MAAM;AAC9C,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,kBAAkB;AAC7C,QAAM,aAAa,IAAI,KAAK;AAC5B,qCAAmC,gBAAgB,+BAA+B,IAAI,WAAW,oBAAoB,GAAG,UAAU;AACpI;AAKO,SAAS,4BAA4B,MAAM;AAChD,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,kBAAkB;AAC7C,QAAM,eAAe,IAAI,KAAK;AAC9B,2BAAyB,gBAAgB,+BAA+B,IAAI,aAAa,oBAAoB,GAAG,YAAY;AAC9H;AAMO,SAAS,gDAAgD,UAAU;AACxE,MAAI,CAAC,SAAU,OAAM,IAAI,MAAM,4BAA4B;AAC3D,MAAI,SAAS;AACb,MAAI,oBAAoB,oCAAoC;AAC1D,+CAA2C,QAAQ;AAAA,EACrD,OAAO;AACL,aAAS,IAAI,4CAA4C,QAAQ;AAAA,EACnE;AACA,6CAA2C,mCAAmC,eAAe;AAC7F,yCAAuC,yBAAyB,eAAe;AAC/E,SAAO;AACT;AAMO,SAAS,sCAAsC,UAAU;AAC9D,MAAI,CAAC,SAAU,OAAM,IAAI,MAAM,4BAA4B;AAC3D,MAAI,SAAS;AACb,MAAI,oBAAoB,0BAA0B;AAChD,2CAAuC,QAAQ;AAAA,EACjD,OAAO;AACL,aAAS,IAAI,6BAA6B,QAAQ;AAAA,EACpD;AACA,yCAAuC,yBAAyB,eAAe;AAC/E,SAAO;AACT;AAKA,SAAS,uCAAuC,UAAU;AACxD,aAAW,CAAC,GAAG,CAAC,KAAK,SAAS,gCAAgC;AAC5D,QAAI,EAAE,aAAa,gCAAgC,aAAa,2BAA2B;AACzF,eAAS,+BAA+B,IAAI,GAAG,IAAI,6BAA6B,CAAC,CAAC;AAAA,IACpF;AAAA,EACF;AACF;AAKA,SAAS,2CAA2C,UAAU;AAC5D,aAAW,CAAC,GAAG,CAAC,KAAK,SAAS,gCAAgC;AAC5D,QAAI,EAAE,aAAa,+CAA+C,aAAa,qCAAqC;AAClH,eAAS,+BAA+B,IAAI,GAAG,IAAI,4CAA4C,CAAC,CAAC;AAAA,IACnG;AAAA,EACF;AACF;;;ACvDO,IAAI,cAAc,OAAO,eAAe,WAAW,aAAa,OAAO,SAAS,WAAW,OAAO,OAAO,WAAW,WAAW,SAAS,OAAO,WAAW,WAAW,SAAS,CAAC;;;ACT/K,IAAI,UAAU;;;ACArB,IAAI,KAAK;AAiBF,SAAS,wBAAwB,YAAY;AAClD,MAAI,mBAAmB,oBAAI,IAAI,CAAC,UAAU,CAAC;AAC3C,MAAI,mBAAmB,oBAAI,IAAI;AAC/B,MAAI,iBAAiB,WAAW,MAAM,EAAE;AACxC,MAAI,CAAC,gBAAgB;AAEnB,WAAO,WAAY;AACjB,aAAO;AAAA,IACT;AAAA,EACF;AACA,MAAI,mBAAmB;AAAA,IACrB,OAAO,CAAC,eAAe,CAAC;AAAA,IACxB,OAAO,CAAC,eAAe,CAAC;AAAA,IACxB,OAAO,CAAC,eAAe,CAAC;AAAA,IACxB,YAAY,eAAe,CAAC;AAAA,EAC9B;AAEA,MAAI,iBAAiB,cAAc,MAAM;AACvC,WAAO,SAAS,aAAa,eAAe;AAC1C,aAAO,kBAAkB;AAAA,IAC3B;AAAA,EACF;AACA,WAAS,QAAQ,GAAG;AAClB,qBAAiB,IAAI,CAAC;AACtB,WAAO;AAAA,EACT;AACA,WAAS,QAAQ,GAAG;AAClB,qBAAiB,IAAI,CAAC;AACtB,WAAO;AAAA,EACT;AACA,SAAO,SAASC,cAAa,eAAe;AAC1C,QAAI,iBAAiB,IAAI,aAAa,GAAG;AACvC,aAAO;AAAA,IACT;AACA,QAAI,iBAAiB,IAAI,aAAa,GAAG;AACvC,aAAO;AAAA,IACT;AACA,QAAI,qBAAqB,cAAc,MAAM,EAAE;AAC/C,QAAI,CAAC,oBAAoB;AAGvB,aAAO,QAAQ,aAAa;AAAA,IAC9B;AACA,QAAI,sBAAsB;AAAA,MACxB,OAAO,CAAC,mBAAmB,CAAC;AAAA,MAC5B,OAAO,CAAC,mBAAmB,CAAC;AAAA,MAC5B,OAAO,CAAC,mBAAmB,CAAC;AAAA,MAC5B,YAAY,mBAAmB,CAAC;AAAA,IAClC;AAEA,QAAI,oBAAoB,cAAc,MAAM;AAC1C,aAAO,QAAQ,aAAa;AAAA,IAC9B;AAEA,QAAI,iBAAiB,UAAU,oBAAoB,OAAO;AACxD,aAAO,QAAQ,aAAa;AAAA,IAC9B;AACA,QAAI,iBAAiB,UAAU,GAAG;AAChC,UAAI,iBAAiB,UAAU,oBAAoB,SAAS,iBAAiB,SAAS,oBAAoB,OAAO;AAC/G,eAAO,QAAQ,aAAa;AAAA,MAC9B;AACA,aAAO,QAAQ,aAAa;AAAA,IAC9B;AACA,QAAI,iBAAiB,SAAS,oBAAoB,OAAO;AACvD,aAAO,QAAQ,aAAa;AAAA,IAC9B;AACA,WAAO,QAAQ,aAAa;AAAA,EAC9B;AACF;AAgBO,IAAI,eAAe,wBAAwB,OAAO;;;ACnGzD,IAAI,QAAQ,QAAQ,MAAM,GAAG,EAAE,CAAC;AAChC,IAAI,+BAA+B,OAAO,IAAI,0BAA0B,KAAK;AAC7E,IAAI,UAAU;AACP,SAAS,eAAe,MAAM,UAAUC,OAAM,eAAe;AAClE,MAAIC;AACJ,MAAI,kBAAkB,QAAQ;AAC5B,oBAAgB;AAAA,EAClB;AACA,MAAI,MAAM,QAAQ,4BAA4B,KAAKA,MAAK,QAAQ,4BAA4B,OAAO,QAAQA,QAAO,SAASA,MAAK;AAAA,IAC9H,SAAS;AAAA,EACX;AACA,MAAI,CAAC,iBAAiB,IAAI,IAAI,GAAG;AAE/B,QAAI,MAAM,IAAI,MAAM,kEAAkE,IAAI;AAC1F,IAAAD,MAAK,MAAM,IAAI,SAAS,IAAI,OAAO;AACnC,WAAO;AAAA,EACT;AACA,MAAI,IAAI,YAAY,SAAS;AAE3B,QAAI,MAAM,IAAI,MAAM,kDAAkD,IAAI,UAAU,UAAU,OAAO,gDAAgD,OAAO;AAC5J,IAAAA,MAAK,MAAM,IAAI,SAAS,IAAI,OAAO;AACnC,WAAO;AAAA,EACT;AACA,MAAI,IAAI,IAAI;AACZ,EAAAA,MAAK,MAAM,iDAAiD,OAAO,OAAO,UAAU,GAAG;AACvF,SAAO;AACT;AACO,SAAS,UAAU,MAAM;AAC9B,MAAIC,KAAI;AACR,MAAI,iBAAiBA,MAAK,QAAQ,4BAA4B,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG;AACzG,MAAI,CAAC,iBAAiB,CAAC,aAAa,aAAa,GAAG;AAClD;AAAA,EACF;AACA,UAAQ,KAAK,QAAQ,4BAA4B,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI;AAClG;AACO,SAAS,iBAAiB,MAAMD,OAAM;AAC3C,EAAAA,MAAK,MAAM,oDAAoD,OAAO,OAAO,UAAU,GAAG;AAC1F,MAAI,MAAM,QAAQ,4BAA4B;AAC9C,MAAI,KAAK;AACP,WAAO,IAAI,IAAI;AAAA,EACjB;AACF;;;AC5CA,IAAI,SAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GACd,GACA,KAAK,CAAC,GACN;AACF,MAAI;AACF,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC3E,SAAS,OAAO;AACd,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF,UAAE;AACA,QAAI;AACF,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACjD,UAAE;AACA,UAAI,EAAG,OAAM,EAAE;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAI,gBAA8C,SAAU,IAAI,MAAM,MAAM;AAC1E,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACnF,QAAI,MAAM,EAAE,KAAK,OAAO;AACtB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAWA,IAAI;AAAA;AAAA,EAAmC,WAAY;AACjD,aAASE,qBAAoB,OAAO;AAClC,WAAK,aAAa,MAAM,aAAa;AAAA,IACvC;AACA,IAAAA,qBAAoB,UAAU,QAAQ,WAAY;AAChD,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,aAAO,SAAS,SAAS,KAAK,YAAY,IAAI;AAAA,IAChD;AACA,IAAAA,qBAAoB,UAAU,QAAQ,WAAY;AAChD,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,aAAO,SAAS,SAAS,KAAK,YAAY,IAAI;AAAA,IAChD;AACA,IAAAA,qBAAoB,UAAU,OAAO,WAAY;AAC/C,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,aAAO,SAAS,QAAQ,KAAK,YAAY,IAAI;AAAA,IAC/C;AACA,IAAAA,qBAAoB,UAAU,OAAO,WAAY;AAC/C,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,aAAO,SAAS,QAAQ,KAAK,YAAY,IAAI;AAAA,IAC/C;AACA,IAAAA,qBAAoB,UAAU,UAAU,WAAY;AAClD,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,aAAO,SAAS,WAAW,KAAK,YAAY,IAAI;AAAA,IAClD;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,SAAS,SAAS,UAAU,WAAW,MAAM;AAC3C,MAAI,SAAS,UAAU,MAAM;AAE7B,MAAI,CAAC,QAAQ;AACX;AAAA,EACF;AACA,OAAK,QAAQ,SAAS;AACtB,SAAO,OAAO,QAAQ,EAAE,MAAM,QAAQ,cAAc,CAAC,GAAG,OAAO,IAAI,GAAG,KAAK,CAAC;AAC9E;;;ACtFO,IAAI;AAAA,CACV,SAAUC,eAAc;AAEvB,EAAAA,cAAaA,cAAa,MAAM,IAAI,CAAC,IAAI;AAEzC,EAAAA,cAAaA,cAAa,OAAO,IAAI,EAAE,IAAI;AAE3C,EAAAA,cAAaA,cAAa,MAAM,IAAI,EAAE,IAAI;AAE1C,EAAAA,cAAaA,cAAa,MAAM,IAAI,EAAE,IAAI;AAE1C,EAAAA,cAAaA,cAAa,OAAO,IAAI,EAAE,IAAI;AAK3C,EAAAA,cAAaA,cAAa,SAAS,IAAI,EAAE,IAAI;AAE7C,EAAAA,cAAaA,cAAa,KAAK,IAAI,IAAI,IAAI;AAC7C,GAAG,iBAAiB,eAAe,CAAC,EAAE;;;ACvB/B,SAAS,yBAAyB,UAAU,QAAQ;AACzD,MAAI,WAAW,aAAa,MAAM;AAChC,eAAW,aAAa;AAAA,EAC1B,WAAW,WAAW,aAAa,KAAK;AACtC,eAAW,aAAa;AAAA,EAC1B;AAEA,WAAS,UAAU,CAAC;AACpB,WAAS,YAAY,UAAU,UAAU;AACvC,QAAI,UAAU,OAAO,QAAQ;AAC7B,QAAI,OAAO,YAAY,cAAc,YAAY,UAAU;AACzD,aAAO,QAAQ,KAAK,MAAM;AAAA,IAC5B;AACA,WAAO,WAAY;AAAA,IAAC;AAAA,EACtB;AACA,SAAO;AAAA,IACL,OAAO,YAAY,SAAS,aAAa,KAAK;AAAA,IAC9C,MAAM,YAAY,QAAQ,aAAa,IAAI;AAAA,IAC3C,MAAM,YAAY,QAAQ,aAAa,IAAI;AAAA,IAC3C,OAAO,YAAY,SAAS,aAAa,KAAK;AAAA,IAC9C,SAAS,YAAY,WAAW,aAAa,OAAO;AAAA,EACtD;AACF;;;ACvBA,IAAIC,UAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GACd,GACA,KAAK,CAAC,GACN;AACF,MAAI;AACF,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC3E,SAAS,OAAO;AACd,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF,UAAE;AACA,QAAI;AACF,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACjD,UAAE;AACA,UAAI,EAAG,OAAM,EAAE;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAIC,iBAA8C,SAAU,IAAI,MAAM,MAAM;AAC1E,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACnF,QAAI,MAAM,EAAE,KAAK,OAAO;AACtB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAKA,IAAI,WAAW;AAKf,IAAI;AAAA;AAAA,EAAuB,WAAY;AAKrC,aAASC,WAAU;AACjB,eAAS,UAAU,UAAU;AAC3B,eAAO,WAAY;AACjB,cAAI,OAAO,CAAC;AACZ,mBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,iBAAK,EAAE,IAAI,UAAU,EAAE;AAAA,UACzB;AACA,cAAI,SAAS,UAAU,MAAM;AAE7B,cAAI,CAAC,OAAQ;AACb,iBAAO,OAAO,QAAQ,EAAE,MAAM,QAAQD,eAAc,CAAC,GAAGD,QAAO,IAAI,GAAG,KAAK,CAAC;AAAA,QAC9E;AAAA,MACF;AAEA,UAAIG,QAAO;AAEX,UAAI,YAAY,SAAU,QAAQ,mBAAmB;AACnD,YAAIC,KAAI,IAAI;AACZ,YAAI,sBAAsB,QAAQ;AAChC,8BAAoB;AAAA,YAClB,UAAU,aAAa;AAAA,UACzB;AAAA,QACF;AACA,YAAI,WAAWD,OAAM;AAInB,cAAI,MAAM,IAAI,MAAM,oIAAoI;AACxJ,UAAAA,MAAK,OAAOC,MAAK,IAAI,WAAW,QAAQA,QAAO,SAASA,MAAK,IAAI,OAAO;AACxE,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,sBAAsB,UAAU;AACzC,8BAAoB;AAAA,YAClB,UAAU;AAAA,UACZ;AAAA,QACF;AACA,YAAI,YAAY,UAAU,MAAM;AAChC,YAAI,YAAY,0BAA0B,KAAK,kBAAkB,cAAc,QAAQ,OAAO,SAAS,KAAK,aAAa,MAAM,MAAM;AAErI,YAAI,aAAa,CAAC,kBAAkB,yBAAyB;AAC3D,cAAI,SAAS,KAAK,IAAI,MAAM,EAAE,WAAW,QAAQ,OAAO,SAAS,KAAK;AACtE,oBAAU,KAAK,6CAA6C,KAAK;AACjE,oBAAU,KAAK,+DAA+D,KAAK;AAAA,QACrF;AACA,eAAO,eAAe,QAAQ,WAAWD,OAAM,IAAI;AAAA,MACrD;AACA,MAAAA,MAAK,YAAY;AACjB,MAAAA,MAAK,UAAU,WAAY;AACzB,yBAAiB,UAAUA,KAAI;AAAA,MACjC;AACA,MAAAA,MAAK,wBAAwB,SAAU,SAAS;AAC9C,eAAO,IAAI,oBAAoB,OAAO;AAAA,MACxC;AACA,MAAAA,MAAK,UAAU,UAAU,SAAS;AAClC,MAAAA,MAAK,QAAQ,UAAU,OAAO;AAC9B,MAAAA,MAAK,OAAO,UAAU,MAAM;AAC5B,MAAAA,MAAK,OAAO,UAAU,MAAM;AAC5B,MAAAA,MAAK,QAAQ,UAAU,OAAO;AAAA,IAChC;AAEA,IAAAD,SAAQ,WAAW,WAAY;AAC7B,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,YAAY,IAAIA,SAAQ;AAAA,MAC/B;AACA,aAAO,KAAK;AAAA,IACd;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;AChHF,IAAIG,UAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GACd,GACA,KAAK,CAAC,GACN;AACF,MAAI;AACF,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC3E,SAAS,OAAO;AACd,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF,UAAE;AACA,QAAI;AACF,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACjD,UAAE;AACA,UAAI,EAAG,OAAM,EAAE;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAI,WAAoC,SAAU,GAAG;AACnD,MAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAC7C,IAAI,KAAK,EAAE,CAAC,GACZ,IAAI;AACN,MAAI,EAAG,QAAO,EAAE,KAAK,CAAC;AACtB,MAAI,KAAK,OAAO,EAAE,WAAW,SAAU,QAAO;AAAA,IAC5C,MAAM,WAAY;AAChB,UAAI,KAAK,KAAK,EAAE,OAAQ,KAAI;AAC5B,aAAO;AAAA,QACL,OAAO,KAAK,EAAE,GAAG;AAAA,QACjB,MAAM,CAAC;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACA,QAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AACvF;AACA,IAAI;AAAA;AAAA,EAA2B,WAAY;AACzC,aAASC,aAAY,SAAS;AAC5B,WAAK,WAAW,UAAU,IAAI,IAAI,OAAO,IAAI,oBAAI,IAAI;AAAA,IACvD;AACA,IAAAA,aAAY,UAAU,WAAW,SAAU,KAAK;AAC9C,UAAI,QAAQ,KAAK,SAAS,IAAI,GAAG;AACjC,UAAI,CAAC,OAAO;AACV,eAAO;AAAA,MACT;AACA,aAAO,OAAO,OAAO,CAAC,GAAG,KAAK;AAAA,IAChC;AACA,IAAAA,aAAY,UAAU,gBAAgB,WAAY;AAChD,aAAO,MAAM,KAAK,KAAK,SAAS,QAAQ,CAAC,EAAE,IAAI,SAAUC,KAAI;AAC3D,YAAI,KAAKF,QAAOE,KAAI,CAAC,GACnB,IAAI,GAAG,CAAC,GACR,IAAI,GAAG,CAAC;AACV,eAAO,CAAC,GAAG,CAAC;AAAA,MACd,CAAC;AAAA,IACH;AACA,IAAAD,aAAY,UAAU,WAAW,SAAU,KAAK,OAAO;AACrD,UAAI,aAAa,IAAIA,aAAY,KAAK,QAAQ;AAC9C,iBAAW,SAAS,IAAI,KAAK,KAAK;AAClC,aAAO;AAAA,IACT;AACA,IAAAA,aAAY,UAAU,cAAc,SAAU,KAAK;AACjD,UAAI,aAAa,IAAIA,aAAY,KAAK,QAAQ;AAC9C,iBAAW,SAAS,OAAO,GAAG;AAC9B,aAAO;AAAA,IACT;AACA,IAAAA,aAAY,UAAU,gBAAgB,WAAY;AAChD,UAAI,KAAKC;AACT,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,EAAE,IAAI,UAAU,EAAE;AAAA,MACzB;AACA,UAAI,aAAa,IAAID,aAAY,KAAK,QAAQ;AAC9C,UAAI;AACF,iBAAS,SAAS,SAAS,IAAI,GAAG,WAAW,OAAO,KAAK,GAAG,CAAC,SAAS,MAAM,WAAW,OAAO,KAAK,GAAG;AACpG,cAAI,MAAM,SAAS;AACnB,qBAAW,SAAS,OAAO,GAAG;AAAA,QAChC;AAAA,MACF,SAAS,OAAO;AACd,cAAM;AAAA,UACJ,OAAO;AAAA,QACT;AAAA,MACF,UAAE;AACA,YAAI;AACF,cAAI,YAAY,CAAC,SAAS,SAASC,MAAK,OAAO,QAAS,CAAAA,IAAG,KAAK,MAAM;AAAA,QACxE,UAAE;AACA,cAAI,IAAK,OAAM,IAAI;AAAA,QACrB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,IAAAD,aAAY,UAAU,QAAQ,WAAY;AACxC,aAAO,IAAIA,aAAY;AAAA,IACzB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;AC7FK,IAAI,6BAA6B,OAAO,sBAAsB;;;ACArE,IAAI,OAAO,QAAQ,SAAS;AAMrB,SAAS,cAAc,SAAS;AACrC,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO,IAAI,YAAY,IAAI,IAAI,OAAO,QAAQ,OAAO,CAAC,CAAC;AACzD;;;ACbO,SAAS,iBAAiB,aAAa;AAO5C,SAAO,OAAO,IAAI,WAAW;AAC/B;AACA,IAAI;AAAA;AAAA,EAA2B,2BAAY;AAMzC,aAASE,aAAY,eAAe;AAElC,UAAIC,QAAO;AACX,MAAAA,MAAK,kBAAkB,gBAAgB,IAAI,IAAI,aAAa,IAAI,oBAAI,IAAI;AACxE,MAAAA,MAAK,WAAW,SAAU,KAAK;AAC7B,eAAOA,MAAK,gBAAgB,IAAI,GAAG;AAAA,MACrC;AACA,MAAAA,MAAK,WAAW,SAAU,KAAK,OAAO;AACpC,YAAIC,WAAU,IAAIF,aAAYC,MAAK,eAAe;AAClD,QAAAC,SAAQ,gBAAgB,IAAI,KAAK,KAAK;AACtC,eAAOA;AAAA,MACT;AACA,MAAAD,MAAK,cAAc,SAAU,KAAK;AAChC,YAAIC,WAAU,IAAIF,aAAYC,MAAK,eAAe;AAClD,QAAAC,SAAQ,gBAAgB,OAAO,GAAG;AAClC,eAAOA;AAAA,MACT;AAAA,IACF;AACA,WAAOF;AAAA,EACT,EAAE;AAAA;AAEK,IAAI,eAAe,IAAI,YAAY;;;ACrC1C,IAAI,YAAsC,2BAAY;AACpD,MAAI,gBAAgB,SAAU,GAAG,GAAG;AAClC,oBAAgB,OAAO,kBAAkB;AAAA,MACvC,WAAW,CAAC;AAAA,IACd,aAAa,SAAS,SAAUG,IAAGC,IAAG;AACpC,MAAAD,GAAE,YAAYC;AAAA,IAChB,KAAK,SAAUD,IAAGC,IAAG;AACnB,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,IAC7E;AACA,WAAO,cAAc,GAAG,CAAC;AAAA,EAC3B;AACA,SAAO,SAAU,GAAG,GAAG;AACrB,QAAI,OAAO,MAAM,cAAc,MAAM,KAAM,OAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AACnI,kBAAc,GAAG,CAAC;AAClB,aAAS,KAAK;AACZ,WAAK,cAAc;AAAA,IACrB;AACA,MAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AAAA,EACpF;AACF,EAAE;AAKF,IAAI;AAAA;AAAA,EAAyB,WAAY;AACvC,aAASC,aAAY;AAAA,IAAC;AAItB,IAAAA,WAAU,UAAU,cAAc,SAAU,OAAO,UAAU;AAC3D,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,kBAAkB,SAAU,OAAO,UAAU;AAC/D,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,gBAAgB,SAAU,OAAO,UAAU;AAC7D,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,sBAAsB,SAAU,OAAO,UAAU;AACnE,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,wBAAwB,SAAU,OAAO,UAAU;AACrE,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,0BAA0B,SAAU,OAAO,UAAU;AACvE,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,gCAAgC,SAAU,OAAO,UAAU;AAC7E,aAAO;AAAA,IACT;AAIA,IAAAA,WAAU,UAAU,6BAA6B,SAAU,WAAW,cAAc;AAAA,IAAC;AAIrF,IAAAA,WAAU,UAAU,gCAAgC,SAAU,WAAW;AAAA,IAAC;AAC1E,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,IAAI;AAAA;AAAA,EAA0B,2BAAY;AACxC,aAASC,cAAa;AAAA,IAAC;AACvB,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,IAAI;AAAA;AAAA,EAAiC,SAAU,QAAQ;AACrD,cAAUC,oBAAmB,MAAM;AACnC,aAASA,qBAAoB;AAC3B,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,IAAAA,mBAAkB,UAAU,MAAM,SAAU,QAAQ,aAAa;AAAA,IAAC;AAClE,WAAOA;AAAA,EACT,EAAE,UAAU;AAAA;AAEZ,IAAI;AAAA;AAAA,EAAuC,SAAU,QAAQ;AAC3D,cAAUC,0BAAyB,MAAM;AACzC,aAASA,2BAA0B;AACjC,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,IAAAA,yBAAwB,UAAU,MAAM,SAAU,QAAQ,aAAa;AAAA,IAAC;AACxE,WAAOA;AAAA,EACT,EAAE,UAAU;AAAA;AAEZ,IAAI;AAAA;AAAA,EAA+B,SAAU,QAAQ;AACnD,cAAUC,kBAAiB,MAAM;AACjC,aAASA,mBAAkB;AACzB,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,IAAAA,iBAAgB,UAAU,SAAS,SAAU,QAAQ,aAAa;AAAA,IAAC;AACnE,WAAOA;AAAA,EACT,EAAE,UAAU;AAAA;AAEZ,IAAI;AAAA;AAAA,EAAmC,SAAU,QAAQ;AACvD,cAAUC,sBAAqB,MAAM;AACrC,aAASA,uBAAsB;AAC7B,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,IAAAA,qBAAoB,UAAU,SAAS,SAAU,QAAQ,aAAa;AAAA,IAAC;AACvE,WAAOA;AAAA,EACT,EAAE,UAAU;AAAA;AAEZ,IAAI;AAAA;AAAA,EAAoC,WAAY;AAClD,aAASC,wBAAuB;AAAA,IAAC;AACjC,IAAAA,sBAAqB,UAAU,cAAc,SAAU,WAAW;AAAA,IAAC;AACnE,IAAAA,sBAAqB,UAAU,iBAAiB,SAAU,WAAW;AAAA,IAAC;AACtE,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,IAAI;AAAA;AAAA,EAA2C,SAAU,QAAQ;AAC/D,cAAUC,8BAA6B,MAAM;AAC7C,aAASA,+BAA8B;AACrC,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,WAAOA;AAAA,EACT,EAAE,oBAAoB;AAAA;AAEtB,IAAI;AAAA;AAAA,EAAyC,SAAU,QAAQ;AAC7D,cAAUC,4BAA2B,MAAM;AAC3C,aAASA,6BAA4B;AACnC,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,WAAOA;AAAA,EACT,EAAE,oBAAoB;AAAA;AAEtB,IAAI;AAAA;AAAA,EAAiD,SAAU,QAAQ;AACrE,cAAUC,oCAAmC,MAAM;AACnD,aAASA,qCAAoC;AAC3C,aAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAAA,IAC7D;AACA,WAAOA;AAAA,EACT,EAAE,oBAAoB;AAAA;AAEf,IAAI,aAAa,IAAI,UAAU;AAE/B,IAAI,sBAAsB,IAAI,kBAAkB;AAChD,IAAI,oBAAoB,IAAI,gBAAgB;AAC5C,IAAI,wBAAwB,IAAI,oBAAoB;AACpD,IAAI,8BAA8B,IAAI,wBAAwB;AAE9D,IAAI,iCAAiC,IAAI,4BAA4B;AACrE,IAAI,+BAA+B,IAAI,0BAA0B;AACjE,IAAI,yCAAyC,IAAI,kCAAkC;;;AC/JnF,IAAI;AAAA,CACV,SAAUC,YAAW;AACpB,EAAAA,WAAUA,WAAU,KAAK,IAAI,CAAC,IAAI;AAClC,EAAAA,WAAUA,WAAU,QAAQ,IAAI,CAAC,IAAI;AACvC,GAAG,cAAc,YAAY,CAAC,EAAE;;;ACLzB,IAAI,uBAAuB;AAAA,EAChC,KAAK,SAAU,SAAS,KAAK;AAC3B,QAAI,WAAW,MAAM;AACnB,aAAO;AAAA,IACT;AACA,WAAO,QAAQ,GAAG;AAAA,EACpB;AAAA,EACA,MAAM,SAAU,SAAS;AACvB,QAAI,WAAW,MAAM;AACnB,aAAO,CAAC;AAAA,IACV;AACA,WAAO,OAAO,KAAK,OAAO;AAAA,EAC5B;AACF;AACO,IAAI,uBAAuB;AAAA,EAChC,KAAK,SAAU,SAAS,KAAK,OAAO;AAClC,QAAI,WAAW,MAAM;AACnB;AAAA,IACF;AACA,YAAQ,GAAG,IAAI;AAAA,EACjB;AACF;;;ACrBA,IAAIC,UAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GACd,GACA,KAAK,CAAC,GACN;AACF,MAAI;AACF,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC3E,SAAS,OAAO;AACd,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF,UAAE;AACA,QAAI;AACF,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACjD,UAAE;AACA,UAAI,EAAG,OAAM,EAAE;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAIC,iBAA8C,SAAU,IAAI,MAAM,MAAM;AAC1E,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACnF,QAAI,MAAM,EAAE,KAAK,OAAO;AACtB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAEA,IAAI;AAAA;AAAA,EAAkC,WAAY;AAChD,aAASC,sBAAqB;AAAA,IAAC;AAC/B,IAAAA,oBAAmB,UAAU,SAAS,WAAY;AAChD,aAAO;AAAA,IACT;AACA,IAAAA,oBAAmB,UAAU,OAAO,SAAU,UAAU,IAAI,SAAS;AACnE,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC7B;AACA,aAAO,GAAG,KAAK,MAAM,IAAID,eAAc,CAAC,OAAO,GAAGD,QAAO,IAAI,GAAG,KAAK,CAAC;AAAA,IACxE;AACA,IAAAE,oBAAmB,UAAU,OAAO,SAAU,UAAU,QAAQ;AAC9D,aAAO;AAAA,IACT;AACA,IAAAA,oBAAmB,UAAU,SAAS,WAAY;AAChD,aAAO;AAAA,IACT;AACA,IAAAA,oBAAmB,UAAU,UAAU,WAAY;AACjD,aAAO;AAAA,IACT;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;ACtDF,IAAIC,UAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GACd,GACA,KAAK,CAAC,GACN;AACF,MAAI;AACF,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC3E,SAAS,OAAO;AACd,QAAI;AAAA,MACF;AAAA,IACF;AAAA,EACF,UAAE;AACA,QAAI;AACF,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACjD,UAAE;AACA,UAAI,EAAG,OAAM,EAAE;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAIC,iBAA8C,SAAU,IAAI,MAAM,MAAM;AAC1E,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACnF,QAAI,MAAM,EAAE,KAAK,OAAO;AACtB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAIA,IAAIC,YAAW;AACf,IAAI,uBAAuB,IAAI,mBAAmB;AAIlD,IAAI;AAAA;AAAA,EAA0B,WAAY;AAExC,aAASC,cAAa;AAAA,IAAC;AAEvB,IAAAA,YAAW,cAAc,WAAY;AACnC,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,YAAY,IAAIA,YAAW;AAAA,MAClC;AACA,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,YAAW,UAAU,0BAA0B,SAAU,gBAAgB;AACvE,aAAO,eAAeD,WAAU,gBAAgB,QAAQ,SAAS,CAAC;AAAA,IACpE;AAIA,IAAAC,YAAW,UAAU,SAAS,WAAY;AACxC,aAAO,KAAK,mBAAmB,EAAE,OAAO;AAAA,IAC1C;AASA,IAAAA,YAAW,UAAU,OAAO,SAAUC,UAAS,IAAI,SAAS;AAC1D,UAAIC;AACJ,UAAI,OAAO,CAAC;AACZ,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,aAAK,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC7B;AACA,cAAQA,MAAK,KAAK,mBAAmB,GAAG,KAAK,MAAMA,KAAIJ,eAAc,CAACG,UAAS,IAAI,OAAO,GAAGJ,QAAO,IAAI,GAAG,KAAK,CAAC;AAAA,IACnH;AAOA,IAAAG,YAAW,UAAU,OAAO,SAAUC,UAAS,QAAQ;AACrD,aAAO,KAAK,mBAAmB,EAAE,KAAKA,UAAS,MAAM;AAAA,IACvD;AACA,IAAAD,YAAW,UAAU,qBAAqB,WAAY;AACpD,aAAO,UAAUD,SAAQ,KAAK;AAAA,IAChC;AAEA,IAAAC,YAAW,UAAU,UAAU,WAAY;AACzC,WAAK,mBAAmB,EAAE,QAAQ;AAClC,uBAAiBD,WAAU,QAAQ,SAAS,CAAC;AAAA,IAC/C;AACA,WAAOC;AAAA,EACT,EAAE;AAAA;;;ACjGK,IAAI;AAAA,CACV,SAAUG,aAAY;AAErB,EAAAA,YAAWA,YAAW,MAAM,IAAI,CAAC,IAAI;AAErC,EAAAA,YAAWA,YAAW,SAAS,IAAI,CAAC,IAAI;AAC1C,GAAG,eAAe,aAAa,CAAC,EAAE;;;ACL3B,IAAI,iBAAiB;AACrB,IAAI,kBAAkB;AACtB,IAAI,uBAAuB;AAAA,EAChC,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,YAAY,WAAW;AACzB;;;ACDA,IAAI;AAAA;AAAA,EAAgC,WAAY;AAC9C,aAASC,kBAAiB,cAAc;AACtC,UAAI,iBAAiB,QAAQ;AAC3B,uBAAe;AAAA,MACjB;AACA,WAAK,eAAe;AAAA,IACtB;AAEA,IAAAA,kBAAiB,UAAU,cAAc,WAAY;AACnD,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,kBAAiB,UAAU,eAAe,SAAU,MAAM,QAAQ;AAChE,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,gBAAgB,SAAU,aAAa;AAChE,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,WAAW,SAAU,OAAO,aAAa;AAClE,aAAO;AAAA,IACT;AACA,IAAAA,kBAAiB,UAAU,UAAU,SAAU,OAAO;AACpD,aAAO;AAAA,IACT;AACA,IAAAA,kBAAiB,UAAU,WAAW,SAAU,QAAQ;AACtD,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,YAAY,SAAU,SAAS;AACxD,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,aAAa,SAAU,OAAO;AACvD,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,MAAM,SAAU,UAAU;AAAA,IAAC;AAEtD,IAAAA,kBAAiB,UAAU,cAAc,WAAY;AACnD,aAAO;AAAA,IACT;AAEA,IAAAA,kBAAiB,UAAU,kBAAkB,SAAU,YAAY,OAAO;AAAA,IAAC;AAC3E,WAAOA;AAAA,EACT,EAAE;AAAA;;;AC9CF,IAAI,WAAW,iBAAiB,gCAAgC;AAMzD,SAAS,QAAQC,UAAS;AAC/B,SAAOA,SAAQ,SAAS,QAAQ,KAAK;AACvC;AAIO,SAAS,gBAAgB;AAC9B,SAAO,QAAQ,WAAW,YAAY,EAAE,OAAO,CAAC;AAClD;AAOO,SAAS,QAAQA,UAAS,MAAM;AACrC,SAAOA,SAAQ,SAAS,UAAU,IAAI;AACxC;AAMO,SAAS,WAAWA,UAAS;AAClC,SAAOA,SAAQ,YAAY,QAAQ;AACrC;AAQO,SAAS,eAAeA,UAAS,aAAa;AACnD,SAAO,QAAQA,UAAS,IAAI,iBAAiB,WAAW,CAAC;AAC3D;AAMO,SAAS,eAAeA,UAAS;AACtC,MAAIC;AACJ,UAAQA,MAAK,QAAQD,QAAO,OAAO,QAAQC,QAAO,SAAS,SAASA,IAAG,YAAY;AACrF;;;ACtDA,IAAI,sBAAsB;AAC1B,IAAI,qBAAqB;AAClB,SAAS,eAAe,SAAS;AACtC,SAAO,oBAAoB,KAAK,OAAO,KAAK,YAAY;AAC1D;AACO,SAAS,cAAc,QAAQ;AACpC,SAAO,mBAAmB,KAAK,MAAM,KAAK,WAAW;AACvD;AAKO,SAAS,mBAAmB,aAAa;AAC9C,SAAO,eAAe,YAAY,OAAO,KAAK,cAAc,YAAY,MAAM;AAChF;AAOO,SAAS,gBAAgB,aAAa;AAC3C,SAAO,IAAI,iBAAiB,WAAW;AACzC;;;ACrBA,IAAI,aAAa,WAAW,YAAY;AAIxC,IAAI;AAAA;AAAA,EAA0B,WAAY;AACxC,aAASC,cAAa;AAAA,IAAC;AAEvB,IAAAA,YAAW,UAAU,YAAY,SAAU,MAAM,SAASC,UAAS;AACjE,UAAIA,aAAY,QAAQ;AACtB,QAAAA,WAAU,WAAW,OAAO;AAAA,MAC9B;AACA,UAAI,OAAO,QAAQ,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,IAAI;AACjF,UAAI,MAAM;AACR,eAAO,IAAI,iBAAiB;AAAA,MAC9B;AACA,UAAI,oBAAoBA,YAAW,eAAeA,QAAO;AACzD,UAAI,cAAc,iBAAiB,KAAK,mBAAmB,iBAAiB,GAAG;AAC7E,eAAO,IAAI,iBAAiB,iBAAiB;AAAA,MAC/C,OAAO;AACL,eAAO,IAAI,iBAAiB;AAAA,MAC9B;AAAA,IACF;AACA,IAAAD,YAAW,UAAU,kBAAkB,SAAU,MAAM,MAAM,MAAM,MAAM;AACvE,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,UAAU,SAAS,GAAG;AACxB;AAAA,MACF,WAAW,UAAU,WAAW,GAAG;AACjC,aAAK;AAAA,MACP,WAAW,UAAU,WAAW,GAAG;AACjC,eAAO;AACP,aAAK;AAAA,MACP,OAAO;AACL,eAAO;AACP,cAAM;AACN,aAAK;AAAA,MACP;AACA,UAAI,gBAAgB,QAAQ,QAAQ,QAAQ,SAAS,MAAM,WAAW,OAAO;AAC7E,UAAI,OAAO,KAAK,UAAU,MAAM,MAAM,aAAa;AACnD,UAAI,qBAAqB,QAAQ,eAAe,IAAI;AACpD,aAAO,WAAW,KAAK,oBAAoB,IAAI,QAAW,IAAI;AAAA,IAChE;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,SAAS,cAAc,aAAa;AAClC,SAAO,OAAO,gBAAgB,YAAY,OAAO,YAAY,QAAQ,MAAM,YAAY,OAAO,YAAY,SAAS,MAAM,YAAY,OAAO,YAAY,YAAY,MAAM;AAC5K;;;ACnDA,IAAI,cAAc,IAAI,WAAW;AAIjC,IAAI;AAAA;AAAA,EAA2B,WAAY;AACzC,aAASE,aAAY,WAAW,MAAM,SAAS,SAAS;AACtD,WAAK,YAAY;AACjB,WAAK,OAAO;AACZ,WAAK,UAAU;AACf,WAAK,UAAU;AAAA,IACjB;AACA,IAAAA,aAAY,UAAU,YAAY,SAAU,MAAM,SAASC,UAAS;AAClE,aAAO,KAAK,WAAW,EAAE,UAAU,MAAM,SAASA,QAAO;AAAA,IAC3D;AACA,IAAAD,aAAY,UAAU,kBAAkB,SAAU,OAAO,UAAU,UAAU,KAAK;AAChF,UAAI,SAAS,KAAK,WAAW;AAC7B,aAAO,QAAQ,MAAM,OAAO,iBAAiB,QAAQ,SAAS;AAAA,IAChE;AAKA,IAAAA,aAAY,UAAU,aAAa,WAAY;AAC7C,UAAI,KAAK,WAAW;AAClB,eAAO,KAAK;AAAA,MACd;AACA,UAAI,SAAS,KAAK,UAAU,kBAAkB,KAAK,MAAM,KAAK,SAAS,KAAK,OAAO;AACnF,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AACA,WAAK,YAAY;AACjB,aAAO,KAAK;AAAA,IACd;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;AC5BF,IAAI;AAAA;AAAA,EAAkC,WAAY;AAChD,aAASE,sBAAqB;AAAA,IAAC;AAC/B,IAAAA,oBAAmB,UAAU,YAAY,SAAU,OAAO,UAAU,UAAU;AAC5E,aAAO,IAAI,WAAW;AAAA,IACxB;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;ACXF,IAAI,uBAAuB,IAAI,mBAAmB;AASlD,IAAI;AAAA;AAAA,EAAmC,WAAY;AACjD,aAASC,uBAAsB;AAAA,IAAC;AAIhC,IAAAA,qBAAoB,UAAU,YAAY,SAAU,MAAM,SAAS,SAAS;AAC1E,UAAIC;AACJ,cAAQA,MAAK,KAAK,kBAAkB,MAAM,SAAS,OAAO,OAAO,QAAQA,QAAO,SAASA,MAAK,IAAI,YAAY,MAAM,MAAM,SAAS,OAAO;AAAA,IAC5I;AACA,IAAAD,qBAAoB,UAAU,cAAc,WAAY;AACtD,UAAIC;AACJ,cAAQA,MAAK,KAAK,eAAe,QAAQA,QAAO,SAASA,MAAK;AAAA,IAChE;AAIA,IAAAD,qBAAoB,UAAU,cAAc,SAAU,UAAU;AAC9D,WAAK,YAAY;AAAA,IACnB;AACA,IAAAA,qBAAoB,UAAU,oBAAoB,SAAU,MAAM,SAAS,SAAS;AAClF,UAAIC;AACJ,cAAQA,MAAK,KAAK,eAAe,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU,MAAM,SAAS,OAAO;AAAA,IACvG;AACA,WAAOD;AAAA,EACT,EAAE;AAAA;;;AC9BK,IAAI;AAAA,CACV,SAAUE,mBAAkB;AAK3B,EAAAA,kBAAiBA,kBAAiB,YAAY,IAAI,CAAC,IAAI;AAKvD,EAAAA,kBAAiBA,kBAAiB,QAAQ,IAAI,CAAC,IAAI;AAKnD,EAAAA,kBAAiBA,kBAAiB,oBAAoB,IAAI,CAAC,IAAI;AACjE,GAAG,qBAAqB,mBAAmB,CAAC,EAAE;;;ACtBvC,IAAI;AAAA,CACV,SAAUC,WAAU;AAEnB,EAAAA,UAASA,UAAS,UAAU,IAAI,CAAC,IAAI;AAKrC,EAAAA,UAASA,UAAS,QAAQ,IAAI,CAAC,IAAI;AAKnC,EAAAA,UAASA,UAAS,QAAQ,IAAI,CAAC,IAAI;AAMnC,EAAAA,UAASA,UAAS,UAAU,IAAI,CAAC,IAAI;AAMrC,EAAAA,UAASA,UAAS,UAAU,IAAI,CAAC,IAAI;AACvC,GAAG,aAAa,WAAW,CAAC,EAAE;;;ACtCvB,IAAI;AAAA,CACV,SAAUC,iBAAgB;AAIzB,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,CAAC,IAAI;AAK9C,EAAAA,gBAAeA,gBAAe,IAAI,IAAI,CAAC,IAAI;AAI3C,EAAAA,gBAAeA,gBAAe,OAAO,IAAI,CAAC,IAAI;AAChD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;;;ACH1C,IAAI,uBAAuB;AAC3B,IAAI,YAAY,UAAU,uBAAuB;AACjD,IAAI,mBAAmB,aAAa,uBAAuB,kBAAkB,uBAAuB;AACpG,IAAI,kBAAkB,IAAI,OAAO,SAAS,YAAY,MAAM,mBAAmB,IAAI;AACnF,IAAI,yBAAyB;AAC7B,IAAI,kCAAkC;AAS/B,SAAS,YAAY,KAAK;AAC/B,SAAO,gBAAgB,KAAK,GAAG;AACjC;AAKO,SAAS,cAAc,OAAO;AACnC,SAAO,uBAAuB,KAAK,KAAK,KAAK,CAAC,gCAAgC,KAAK,KAAK;AAC1F;;;ACtBA,IAAI,wBAAwB;AAC5B,IAAI,sBAAsB;AAC1B,IAAI,yBAAyB;AAC7B,IAAI,iCAAiC;AAUrC,IAAI;AAAA;AAAA,EAA8B,WAAY;AAC5C,aAASC,gBAAe,eAAe;AACrC,WAAK,iBAAiB,oBAAI,IAAI;AAC9B,UAAI,cAAe,MAAK,OAAO,aAAa;AAAA,IAC9C;AACA,IAAAA,gBAAe,UAAU,MAAM,SAAU,KAAK,OAAO;AAGnD,UAAI,aAAa,KAAK,OAAO;AAC7B,UAAI,WAAW,eAAe,IAAI,GAAG,GAAG;AACtC,mBAAW,eAAe,OAAO,GAAG;AAAA,MACtC;AACA,iBAAW,eAAe,IAAI,KAAK,KAAK;AACxC,aAAO;AAAA,IACT;AACA,IAAAA,gBAAe,UAAU,QAAQ,SAAU,KAAK;AAC9C,UAAI,aAAa,KAAK,OAAO;AAC7B,iBAAW,eAAe,OAAO,GAAG;AACpC,aAAO;AAAA,IACT;AACA,IAAAA,gBAAe,UAAU,MAAM,SAAU,KAAK;AAC5C,aAAO,KAAK,eAAe,IAAI,GAAG;AAAA,IACpC;AACA,IAAAA,gBAAe,UAAU,YAAY,WAAY;AAC/C,UAAI,QAAQ;AACZ,aAAO,KAAK,MAAM,EAAE,OAAO,SAAU,KAAK,KAAK;AAC7C,YAAI,KAAK,MAAM,iCAAiC,MAAM,IAAI,GAAG,CAAC;AAC9D,eAAO;AAAA,MACT,GAAG,CAAC,CAAC,EAAE,KAAK,sBAAsB;AAAA,IACpC;AACA,IAAAA,gBAAe,UAAU,SAAS,SAAU,eAAe;AACzD,UAAI,cAAc,SAAS,oBAAqB;AAChD,WAAK,iBAAiB,cAAc,MAAM,sBAAsB,EAAE,QAAQ,EACzE,OAAO,SAAU,KAAK,MAAM;AAC3B,YAAI,aAAa,KAAK,KAAK;AAC3B,YAAI,IAAI,WAAW,QAAQ,8BAA8B;AACzD,YAAI,MAAM,IAAI;AACZ,cAAI,MAAM,WAAW,MAAM,GAAG,CAAC;AAC/B,cAAI,QAAQ,WAAW,MAAM,IAAI,GAAG,KAAK,MAAM;AAC/C,cAAI,YAAY,GAAG,KAAK,cAAc,KAAK,GAAG;AAC5C,gBAAI,IAAI,KAAK,KAAK;AAAA,UACpB,OAAO;AAAA,UAEP;AAAA,QACF;AACA,eAAO;AAAA,MACT,GAAG,oBAAI,IAAI,CAAC;AAEZ,UAAI,KAAK,eAAe,OAAO,uBAAuB;AACpD,aAAK,iBAAiB,IAAI,IAAI,MAAM,KAAK,KAAK,eAAe,QAAQ,CAAC,EAAE,QAAQ,EAC/E,MAAM,GAAG,qBAAqB,CAAC;AAAA,MAClC;AAAA,IACF;AACA,IAAAA,gBAAe,UAAU,QAAQ,WAAY;AAC3C,aAAO,MAAM,KAAK,KAAK,eAAe,KAAK,CAAC,EAAE,QAAQ;AAAA,IACxD;AACA,IAAAA,gBAAe,UAAU,SAAS,WAAY;AAC5C,UAAI,aAAa,IAAIA,gBAAe;AACpC,iBAAW,iBAAiB,IAAI,IAAI,KAAK,cAAc;AACvD,aAAO;AAAA,IACT;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;ACxEK,IAAI,UAAU,WAAW,YAAY;;;ACKrC,IAAIC,QAAO,QAAQ,SAAS;;;ACJnC,IAAI;AAAA;AAAA,EAAiC,WAAY;AAC/C,aAASC,qBAAoB;AAAA,IAAC;AAC9B,IAAAA,mBAAkB,UAAU,WAAW,SAAU,OAAO,UAAU,UAAU;AAC1E,aAAO;AAAA,IACT;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;AAEK,IAAI,sBAAsB,IAAI,kBAAkB;;;ACVvD,IAAIC,YAAW;AAIf,IAAI;AAAA;AAAA,EAA0B,WAAY;AAExC,aAASC,cAAa;AAAA,IAAC;AAEvB,IAAAA,YAAW,cAAc,WAAY;AACnC,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,YAAY,IAAIA,YAAW;AAAA,MAClC;AACA,aAAO,KAAK;AAAA,IACd;AAKA,IAAAA,YAAW,UAAU,yBAAyB,SAAU,UAAU;AAChE,aAAO,eAAeD,WAAU,UAAU,QAAQ,SAAS,CAAC;AAAA,IAC9D;AAIA,IAAAC,YAAW,UAAU,mBAAmB,WAAY;AAClD,aAAO,UAAUD,SAAQ,KAAK;AAAA,IAChC;AAIA,IAAAC,YAAW,UAAU,WAAW,SAAU,MAAM,SAAS,SAAS;AAChE,aAAO,KAAK,iBAAiB,EAAE,SAAS,MAAM,SAAS,OAAO;AAAA,IAChE;AAEA,IAAAA,YAAW,UAAU,UAAU,WAAY;AACzC,uBAAiBD,WAAU,QAAQ,SAAS,CAAC;AAAA,IAC/C;AACA,WAAOC;AAAA,EACT,EAAE;AAAA;;;ACrCK,IAAI,UAAU,WAAW,YAAY;;;ACD5C,IAAI;AAAA;AAAA,EAAqC,WAAY;AACnD,aAASC,yBAAwB;AAAA,IAAC;AAElC,IAAAA,uBAAsB,UAAU,SAAS,SAAU,UAAU,UAAU;AAAA,IAAC;AAExE,IAAAA,uBAAsB,UAAU,UAAU,SAAUC,UAAS,UAAU;AACrE,aAAOA;AAAA,IACT;AACA,IAAAD,uBAAsB,UAAU,SAAS,WAAY;AACnD,aAAO,CAAC;AAAA,IACV;AACA,WAAOA;AAAA,EACT,EAAE;AAAA;;;ACVF,IAAI,cAAc,iBAAiB,2BAA2B;AAOvD,SAAS,WAAWE,UAAS;AAClC,SAAOA,SAAQ,SAAS,WAAW,KAAK;AAC1C;AAMO,SAAS,mBAAmB;AACjC,SAAO,WAAW,WAAW,YAAY,EAAE,OAAO,CAAC;AACrD;AAOO,SAAS,WAAWA,UAAS,SAAS;AAC3C,SAAOA,SAAQ,SAAS,aAAa,OAAO;AAC9C;AAMO,SAAS,cAAcA,UAAS;AACrC,SAAOA,SAAQ,YAAY,WAAW;AACxC;;;ACjCA,IAAIC,YAAW;AACf,IAAI,2BAA2B,IAAI,sBAAsB;AAIzD,IAAI;AAAA;AAAA,EAA8B,WAAY;AAE5C,aAASC,kBAAiB;AACxB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAClB,WAAK,mBAAmB;AACxB,WAAK,aAAa;AAClB,WAAK,gBAAgB;AAAA,IACvB;AAEA,IAAAA,gBAAe,cAAc,WAAY;AACvC,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,YAAY,IAAIA,gBAAe;AAAA,MACtC;AACA,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,gBAAe,UAAU,sBAAsB,SAAU,YAAY;AACnE,aAAO,eAAeD,WAAU,YAAY,QAAQ,SAAS,CAAC;AAAA,IAChE;AAQA,IAAAC,gBAAe,UAAU,SAAS,SAAUC,UAAS,SAAS,QAAQ;AACpE,UAAI,WAAW,QAAQ;AACrB,iBAAS;AAAA,MACX;AACA,aAAO,KAAK,qBAAqB,EAAE,OAAOA,UAAS,SAAS,MAAM;AAAA,IACpE;AAQA,IAAAD,gBAAe,UAAU,UAAU,SAAUC,UAAS,SAAS,QAAQ;AACrE,UAAI,WAAW,QAAQ;AACrB,iBAAS;AAAA,MACX;AACA,aAAO,KAAK,qBAAqB,EAAE,QAAQA,UAAS,SAAS,MAAM;AAAA,IACrE;AAIA,IAAAD,gBAAe,UAAU,SAAS,WAAY;AAC5C,aAAO,KAAK,qBAAqB,EAAE,OAAO;AAAA,IAC5C;AAEA,IAAAA,gBAAe,UAAU,UAAU,WAAY;AAC7C,uBAAiBD,WAAU,QAAQ,SAAS,CAAC;AAAA,IAC/C;AACA,IAAAC,gBAAe,UAAU,uBAAuB,WAAY;AAC1D,aAAO,UAAUD,SAAQ,KAAK;AAAA,IAChC;AACA,WAAOC;AAAA,EACT,EAAE;AAAA;;;ACvEK,IAAI,cAAc,eAAe,YAAY;;;ACCpD,IAAIE,YAAW;AAIf,IAAI;AAAA;AAAA,EAAwB,WAAY;AAEtC,aAASC,YAAW;AAClB,WAAK,uBAAuB,IAAI,oBAAoB;AACpD,WAAK,kBAAkB;AACvB,WAAK,qBAAqB;AAC1B,WAAK,aAAa;AAClB,WAAK,UAAU;AACf,WAAK,gBAAgB;AACrB,WAAK,iBAAiB;AACtB,WAAK,UAAU;AACf,WAAK,iBAAiB;AAAA,IACxB;AAEA,IAAAA,UAAS,cAAc,WAAY;AACjC,UAAI,CAAC,KAAK,WAAW;AACnB,aAAK,YAAY,IAAIA,UAAS;AAAA,MAChC;AACA,aAAO,KAAK;AAAA,IACd;AAMA,IAAAA,UAAS,UAAU,0BAA0B,SAAU,UAAU;AAC/D,UAAI,UAAU,eAAeD,WAAU,KAAK,sBAAsB,QAAQ,SAAS,CAAC;AACpF,UAAI,SAAS;AACX,aAAK,qBAAqB,YAAY,QAAQ;AAAA,MAChD;AACA,aAAO;AAAA,IACT;AAIA,IAAAC,UAAS,UAAU,oBAAoB,WAAY;AACjD,aAAO,UAAUD,SAAQ,KAAK,KAAK;AAAA,IACrC;AAIA,IAAAC,UAAS,UAAU,YAAY,SAAU,MAAM,SAAS;AACtD,aAAO,KAAK,kBAAkB,EAAE,UAAU,MAAM,OAAO;AAAA,IACzD;AAEA,IAAAA,UAAS,UAAU,UAAU,WAAY;AACvC,uBAAiBD,WAAU,QAAQ,SAAS,CAAC;AAC7C,WAAK,uBAAuB,IAAI,oBAAoB;AAAA,IACtD;AACA,WAAOC;AAAA,EACT,EAAE;AAAA;;;ACvDK,IAAI,QAAQ,SAAS,YAAY;;;ACnBxC,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,OAAO,OAAO,UAAU,eAAe;AACrC,WAAO,gBAAe,WAAW,UAAU,aAAa;AAAA,EAC1D;AAAA,EACA,OAAO,gBAAgB,GAAG,KAAK;AAC7B,YAAQ,GAAG;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,cAAM,IAAI,MAAM,qDAAqD,GAAG,EAAE;AAAA,IAC9E;AAAA,EACF;AAAA,EACA,OAAO,WAAW,QAAQ,KAAK;AAC7B,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT,OAAO;AACL,YAAM,QAAQ,OAAO,KAAK,EAAE;AAC5B,UAAI,MAAM,WAAW,GAAG;AACtB,eAAO;AAAA,MACT,OAAO;AACL,YAAI;AACF,iBAAO,SAAS,OAAO,EAAE;AAAA,QAC3B,SAAS,GAAG;AACV,gBAAM,IAAI,MAAM,kCAAkC,GAAG,EAAE;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,YAAY,GAAG,OAAO,KAAK;AAChC,YAAQ,GAAG;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,wBAAe,gBAAgB,GAAG,GAAG;AACrC,cAAM,KAAK,CAAC;AACZ,eAAO;AAAA,IACX;AAAA,EACF;AAAA,EACA,OAAO,WAAW,KAAK,eAAe;AACpC,UAAM,SAAS,CAAC;AAChB,QAAI,QAAQ;AACZ,QAAI,WAAW;AACf,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,QAAI,aAAa;AACjB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAM,YAAY,IAAI,OAAO,CAAC;AAC9B,cAAQ,WAAW;AAAA,QACjB,KAAK;AACH,kBAAQ,CAAC;AACT,uBAAa;AACb;AAAA,QACF,KAAK;AACH,cAAI,UAAU,MAAM;AAClB,kBAAM,WAAW,gBAAe,YAAY,UAAU,MAAM,KAAK,EAAE,GAAG,WAAW,gBAAe,WAAW,eAAe,CAAC,GAAG,YAAY,eAAe,QAAQ,CAAC;AAClK,gBAAI,YAAY,YAAY;AAC1B,2BAAa;AAAA,YACf;AACA,oBAAQ;AACR,uBAAW;AACX,wBAAY;AACZ,4BAAgB;AAAA,UAClB,OAAO;AACL,kBAAM,IAAI,MAAM,2CAA2C,CAAC,EAAE;AAAA,UAChE;AACA;AAAA,QACF,KAAK;AACH,cAAI,UAAU,MAAM;AAClB,kBAAM,WAAW,gBAAe,YAAY,UAAU,MAAM,KAAK,EAAE,GAAG,WAAW,gBAAe,WAAW,eAAe,CAAC,GAAG,YAAY,eAAe,QAAQ,CAAC;AAClK,gBAAI,YAAY,YAAY;AAC1B,2BAAa;AAAA,YACf;AACA,oBAAQ,CAAC;AACT,wBAAY;AACZ,4BAAgB;AAChB;AAAA,UACF;AAAA;AAAA,QAEF;AACE,cAAI,UAAU,MAAM;AAClB,gBAAI,aAAa,MAAM;AACrB,yBAAW,gBAAe,YAAY,WAAW,OAAO,CAAC;AAAA,YAC3D,WAAW,kBAAkB,MAAM;AACjC,kBAAI,UAAU,MAAM,MAAM,GAAG;AAC3B,8BAAc,KAAK,SAAS;AAAA,cAC9B,OAAO;AACL,sBAAM,IAAI,MAAM,qDAAqD,CAAC,EAAE;AAAA,cAC1E;AAAA,YACF,OAAO;AACL,kBAAI,cAAc,KAAK;AACrB,gCAAgB,CAAC;AAAA,cACnB,WAAW,cAAc,KAAK;AAC5B,4BAAY;AAAA,cACd,OAAO;AACL,gCAAe,gBAAgB,WAAW,CAAC;AAC3C,sBAAM,KAAK,SAAS;AAAA,cACtB;AAAA,YACF;AAAA,UACF,OAAO;AACL,mBAAO,KAAK,SAAS;AAAA,UACvB;AACA;AAAA,MACJ;AAAA,IACF;AACA,QAAI,UAAU,MAAM;AAClB,aAAO,OAAO,KAAK,EAAE;AAAA,IACvB,OAAO;AACL,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACtC;AAAA,EACF;AAAA,EACA,OAAO,UAAU,IAAI,QAAQ;AAC3B,YAAQ,IAAI;AAAA,MACV,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF;AACE;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,aAAa,IAAI,QAAQ;AAC9B,YAAQ,IAAI;AAAA,MACV,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,GAAG;AACf;AAAA,MACF;AACE,eAAO,KAAK,GAAG;AACf;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,SAAS,IAAI,OAAO,OAAO,QAAQ,SAAS;AACjD,YAAQ,IAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AACH,wBAAe,iBAAiB,MAAM,OAAO,QAAQ,SAAS,KAAK;AACnE;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,GAAG,KAAK,GAAG;AACvB,wBAAe,iBAAiB,MAAM,OAAO,QAAQ,SAAS,IAAI;AAClE;AAAA,MACF,KAAK;AACH,eAAO,KAAK,KAAK;AACjB,wBAAe,iBAAiB,KAAK,OAAO,QAAQ,SAAS,IAAI;AACjE;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,wBAAe,iBAAiB,MAAM,OAAO,QAAQ,SAAS,IAAI;AAClE;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,gBAAgB,IAAI,OAAO,OAAO,QAAQ,SAAS;AACxD,YAAQ,IAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AACH,wBAAe,iBAAiB,MAAM,OAAO,QAAQ,SAAS,KAAK;AACnE;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,wBAAe,iBAAiB,MAAM,OAAO,QAAQ,SAAS,IAAI;AAClE;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,YAAY,IAAI;AACrB,UAAM,WAAW,GAAG,WAAW,CAAC;AAChC,WAAO,YAAY,SAAS,YAAY;AAAA,EAC1C;AAAA,EACA,OAAO,WAAW,IAAI;AACpB,WAAO,SAAS,GAAG,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK;AAAA,EAC1D;AAAA,EACA,OAAO,UAAU,IAAI;AACnB,UAAM,YAAY,GAAG,YAAY,CAAC,KAAK;AACvC,WAAO,OAAO,aAAa,aAAa,SAAS,SAAS,aAAa,aAAa,SAAS,SAAS,aAAa,aAAa;AAAA,EAClI;AAAA,EACA,OAAO,iBAAiB,QAAQ,OAAO,QAAQ,SAAS,iBAAiB;AACvE,UAAM,cAAc,gBAAe,mBAAmB,KAAK;AAC3D,UAAM,MAAM,YAAY,KAAK,KAAK,IAAI,SAAS,YAAY,MAAM,IAAI,YAAY;AACjF,QAAI,iBAAiB;AACrB,QAAI,MAAM,KAAK,UAAU,MAAM;AAC7B,aAAO,KAAK,MAAM;AAAA,IACpB;AACA,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,YAAM,YAAY,YAAY,OAAO,CAAC;AACtC,UAAI,cAAc,OAAO,CAAC,iBAAiB;AACzC,yBAAiB,CAAC;AAAA,MACpB;AACA,UAAI,WAAW;AACf,UAAI,gBAAe,YAAY,SAAS,GAAG;AACzC,mBAAW,mBAAmB,YAAY,OAAO,CAAC,IAAI,YAAY,OAAO,IAAI,CAAC,CAAC;AAC/E;AAAA,MACF,WAAW,mBAAmB,gBAAe,UAAU,SAAS,KAAK,gBAAe,WAAW,SAAS,GAAG;AACzG,YAAI,cAAc,KAAK;AACrB,qBAAW;AAAA,QACb,OAAO;AACL,qBAAW,mBAAmB,QAAQ;AAAA,QACxC;AAAA,MACF;AACA,UAAI,gBAAgB;AAClB,uBAAe,KAAK,QAAQ;AAC5B,YAAI,eAAe,WAAW,GAAG;AAC/B,cAAI,YAAY;AAChB,cAAI;AACF,kBAAM,WAAW,eAAe,KAAK,EAAE;AACvC,kBAAM,UAAU,mBAAmB,eAAe,KAAK,EAAE,CAAC;AAC1D,wBAAY,aAAa;AAAA,UAC3B,SAAS,GAAG;AAAA,UAAC;AACb,cAAI,WAAW;AACb,mBAAO,KAAK,eAAe,KAAK,EAAE,CAAC;AAAA,UACrC,OAAO;AACL,mBAAO,KAAK,KAAK;AACjB,mBAAO,KAAK,eAAe,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC;AAAA,UAC9C;AACA,2BAAiB;AAAA,QACnB;AAAA,MACF,OAAO;AACL,YAAI,cAAc,KAAK;AACrB,iBAAO,KAAK,KAAK;AAAA,QACnB,WAAW,cAAc,KAAK;AAC5B,iBAAO,KAAK,KAAK;AAAA,QACnB,OAAO;AACL,iBAAO,KAAK,QAAQ;AAAA,QACtB;AAAA,MACF;AAAA,IACF;AACA,QAAI,gBAAgB;AAClB,aAAO,KAAK,KAAK;AACjB,aAAO,KAAK,eAAe,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC;AAAA,IAC9C;AAAA,EACF;AAAA,EACA,OAAO,OAAO,OAAO;AACnB,WAAO,MAAM,QAAQ,KAAK,KAAK,iBAAiB;AAAA,EAClD;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,WAAO,iBAAiB,OAAO,OAAO,UAAU;AAAA,EAClD;AAAA,EACA,OAAO,oBAAoB,OAAO,KAAK;AACrC,QAAI,UAAU,UAAa,UAAU,MAAM;AACzC,aAAO;AAAA,IACT,WAAW,gBAAe,aAAa,KAAK,GAAG;AAC7C,aAAO;AAAA,IACT,WAAW,gBAAe,OAAO,KAAK,GAAG;AACvC,aAAO;AAAA,IACT,WAAW,gBAAe,MAAM,KAAK,GAAG;AACtC,aAAO;AAAA,IACT,OAAO;AACL,YAAM,IAAI,MAAM,+CAA+C,OAAO,KAAK,YAAY,GAAG,EAAE;AAAA,IAC9F;AAAA,EACF;AAAA,EACA,OAAO,QAAQ,WAAW,OAAO;AAC/B,QAAI,UAAU,UAAa,UAAU,MAAM;AACzC,aAAO;AAAA,IACT,OAAO;AACL,cAAQ,WAAW;AAAA,QACjB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO,MAAM,WAAW;AAAA,QAC1B,KAAK;AACH,iBAAO,OAAO,KAAK,KAAK,EAAE,WAAW;AAAA,QACvC;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,aAAa,OAAO;AACzB,WAAO,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,OAAO,UAAU;AAAA,EACpF;AAAA,EACA,OAAO,mBAAmB,OAAO;AAC/B,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO;AAAA,IACT,WAAW,OAAO,UAAU,YAAY,OAAO,UAAU,WAAW;AAClE,aAAO,MAAM,SAAS;AAAA,IACxB,OAAO;AACL,YAAM,IAAI,MAAM,+CAA+C,OAAO,KAAK,EAAE;AAAA,IAC/E;AAAA,EACF;AAAA,EACA,OAAO,YAAY,UAAU,OAAO,WAAW,SAAS,YAAY,eAAe,QAAQ,KAAK;AAC9F,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,MAAM,gCAAgC,GAAG,EAAE;AAAA,IACvD;AACA,UAAM,QAAQ,cAAc,KAAK;AACjC,UAAM,YAAY,gBAAe,oBAAoB,OAAO,GAAG;AAC/D,QAAI,cAAc,KAAiB,gBAAe,QAAQ,WAAW,KAAK,GAAG;AAC3E,aAAO;AAAA,IACT;AACA,QAAI,YAAY;AACd,sBAAe,UAAU,UAAU,MAAM;AAAA,IAC3C,OAAO;AACL,sBAAe,aAAa,UAAU,MAAM;AAAA,IAC9C;AACA,YAAQ,WAAW;AAAA,MACjB,KAAK;AACH,wBAAe,eAAe,UAAU,OAAO,OAAO,QAAQ,OAAO;AACrE;AAAA,MACF,KAAK;AACH,wBAAe,aAAa,UAAU,OAAO,OAAO,QAAQ,SAAS,SAAS;AAC9E;AAAA,MACF,KAAK;AACH,wBAAe,YAAY,UAAU,OAAO,OAAO,QAAQ,SAAS,SAAS;AAC7E;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,eAAe,UAAU,OAAO,OAAO,QAAQ,SAAS;AAC7D,oBAAe,SAAS,UAAU,OAAO,OAAO,QAAQ,OAAO;AAAA,EACjE;AAAA,EACA,OAAO,aAAa,UAAU,OAAO,OAAO,QAAQ,SAAS,WAAW;AACtE,QAAI,QAAQ;AACZ,eAAW,KAAK,OAAO;AACrB,UAAI,OAAO;AACT,wBAAe,SAAS,UAAU,OAAO,GAAG,QAAQ,OAAO;AAC3D,gBAAQ;AAAA,MACV,OAAO;AACL,YAAI,WAAW;AACb,0BAAe,aAAa,UAAU,MAAM;AAC5C,0BAAe,SAAS,UAAU,OAAO,GAAG,QAAQ,OAAO;AAAA,QAC7D,OAAO;AACL,iBAAO,KAAK,GAAG;AACf,0BAAe,gBAAgB,UAAU,OAAO,GAAG,QAAQ,OAAO;AAAA,QACpE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,YAAY,UAAU,OAAO,OAAO,QAAQ,SAAS,WAAW;AACrE,QAAI,QAAQ;AACZ,QAAI,YAAY,IAAI;AAClB,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AACA,eAAW,OAAO,OAAO;AACvB,YAAM,IAAI,MAAM,GAAG;AACnB,UAAI,WAAW;AACb,YAAI,CAAC,OAAO;AACV,0BAAe,aAAa,UAAU,MAAM;AAAA,QAC9C;AACA,wBAAe,gBAAgB,UAAU,OAAO,KAAK,QAAQ,OAAO;AACpE,eAAO,KAAK,GAAG;AAAA,MACjB,OAAO;AACL,YAAI,OAAO;AACT,0BAAe,SAAS,UAAU,OAAO,KAAK,QAAQ,OAAO;AAAA,QAC/D,OAAO;AACL,iBAAO,KAAK,GAAG;AACf,0BAAe,gBAAgB,UAAU,OAAO,KAAK,QAAQ,OAAO;AAAA,QACtE;AACA,eAAO,KAAK,GAAG;AAAA,MACjB;AACA,sBAAe,gBAAgB,UAAU,OAAO,GAAG,QAAQ,OAAO;AAClE,cAAQ;AAAA,IACV;AAAA,EACF;AACF;;;ACzYO,IAAM,WAAN,MAAM,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYpB,YAAY;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACR,GAAG;AACD,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,SAAS,MAAM;AACpB,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,UAAM,SAAS,IAAI,UAAS;AAAA,MAC1B,MAAM,KAAK,YAAY;AAAA,MACvB,OAAO,KAAK,SAAS,IAAI;AAAA,MACzB,KAAK,KAAK,QAAQ;AAAA,IACpB,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,MAAM,OAAO;AAClB,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,aAAO;AAAA,IACT;AAEA,UAAM,OAAO,qDAAqD,KAAK,KAAK;AAC5E,QAAI,MAAM;AACR,YAAM,OAAO,SAAS,KAAK,CAAC,GAAG,EAAE;AACjC,YAAM,QAAQ,SAAS,KAAK,CAAC,GAAG,EAAE;AAClC,YAAM,MAAM,SAAS,KAAK,CAAC,GAAG,EAAE;AAChC,aAAO,IAAI,UAAS;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AACA,UAAM,QAAQ,KAAK,MAAM,KAAK;AAC9B,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,YAAM,OAAO,IAAI,KAAK,KAAK;AAC3B,aAAO,KAAK,SAAS,IAAI;AAAA,IAC3B;AACA,UAAM,IAAI,MAAM,kDAAkD,KAAK,EAAE;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,WAAO,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,IAAI,cAAc,KAAK,KAAK,CAAC,IAAI,cAAc,KAAK,GAAG,CAAC;AAAA,EAC/F;AACF;AAOO,SAAS,cAAc,SAAS,SAAS,GAAG;AACjD,SAAO,QAAQ,SAAS,EAAE,SAAS,QAAQ,GAAG;AAChD;;;ACtFA,0BAAuE;AAIhE,IAAM,WAAN,MAAM,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBpB,YAAY;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,EACb,GAAG;AACD,QAAI,QAAQ,KAAK,QAAQ,MAAM;AAC7B,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD;AACA,QAAI,SAAS,GAAG;AACd,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACvD;AACA,QAAI,QAAQ,GAAG;AACb,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,QAAI,OAAO,GAAG;AACZ,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AACA,QAAI,QAAQ,GAAG;AACb,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,QAAI,UAAU,GAAG;AACf,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,QAAI,UAAU,GAAG;AACf,YAAM,IAAI,MAAM,sCAAsC;AAAA,IACxD;AACA,QAAI,QAAQ,MAAM,OAAO,KAAK,QAAQ,KAAK,UAAU,KAAK,UAAU,IAAI;AACtE,YAAM,IAAI,MAAM,2DAA2D;AAAA,IAC7E;AACA,SAAK,QAAQ,KAAK,SAAS,MAAM,QAAQ,GAAG;AAC1C,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACnE;AACA,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,MAAM,OAAO;AAClB,QAAIC,KAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAChC,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,aAAO;AAAA,IACT;AACA,UAAM,eAAW,oBAAAC,OAAc,KAAK;AACpC,WAAO,IAAI,UAAS;AAAA,MAClB,QAAQD,MAAK,SAAS,WAAW,QAAQA,QAAO,SAASA,MAAK;AAAA,MAC9D,SAAS,KAAK,SAAS,YAAY,QAAQ,OAAO,SAAS,KAAK;AAAA,MAChE,QAAQ,KAAK,SAAS,WAAW,QAAQ,OAAO,SAAS,KAAK;AAAA,MAC9D,OAAO,KAAK,SAAS,UAAU,QAAQ,OAAO,SAAS,KAAK;AAAA,MAC5D,QAAQ,KAAK,SAAS,WAAW,QAAQ,OAAO,SAAS,KAAK;AAAA,MAC9D,UAAU,KAAK,SAAS,aAAa,QAAQ,OAAO,SAAS,KAAK;AAAA,MAClE,UAAU,KAAK,SAAS,aAAa,QAAQ,OAAO,SAAS,KAAK;AAAA,MAClE,WAAW,KAAK,SAAS,cAAc,QAAQ,OAAO,SAAS,KAAK;AAAA,IACtE,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,eAAO,oBAAAE,WAAkB,IAAI;AAAA,EAC/B;AACF;;;ACjGA,SAAS,4BAA4B,OAAO;AAC1C,QAAM,uBAAuB,oBAAI,IAAI;AACrC,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOnB,IAAI,QAAQ,MAAM;AAChB,YAAM,YAAY,MAAM,IAAI;AAC5B,aAAO,QAAQ,IAAI,QAAQ,SAAS;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,IAAI,QAAQ,MAAM,OAAO;AACvB,YAAM,eAAe,KAAK,SAAS;AACnC,YAAM,YAAY,MAAM,IAAI;AAC5B,2BAAqB,IAAI,WAAW,YAAY;AAChD,aAAO,QAAQ,IAAI,QAAQ,WAAW,KAAK;AAAA,IAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,IAAI,GAAG,MAAM;AACX,YAAM,YAAY,MAAM,IAAI;AAC5B,aAAO,qBAAqB,IAAI,SAAS;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,eAAe,QAAQ,MAAM,SAAS;AACpC,YAAM,eAAe,KAAK,SAAS;AACnC,YAAM,YAAY,MAAM,IAAI;AAC5B,2BAAqB,IAAI,WAAW,YAAY;AAChD,aAAO,QAAQ,eAAe,QAAQ,WAAW,OAAO;AAAA,IAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,eAAe,QAAQ,MAAM;AAC3B,YAAM,YAAY,MAAM,IAAI;AAC5B,2BAAqB,OAAO,SAAS;AACrC,aAAO,QAAQ,eAAe,QAAQ,SAAS;AAAA,IACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,yBAAyB,QAAQ,MAAM;AACrC,aAAO,QAAQ,yBAAyB,QAAQ,MAAM,IAAI,CAAC;AAAA,IAC7D;AAAA,IACA,UAAU;AACR,aAAO,CAAC,GAAG,qBAAqB,OAAO,CAAC;AAAA,IAC1C;AAAA,EACF,CAAC;AACH;AAKO,SAAS,sCAAsC;AAMpD,QAAM,SAAS,4BAA4B,OAAK,OAAO,MAAM,WAAW,EAAE,YAAY,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC;AACpH,SAAO;AACT;;;AClFO,IAAM,UAAN,cAAsB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa/B,YAAY,SAAS;AACnB,UAAM;AACN,SAAK,UAAU,oCAAoC;AACnD,SAAK,qBAAqB,oBAAI,IAAI,CAAC,gBAAgB,oBAAoB,gBAAgB,CAAC;AACxF,QAAI,SAAS;AACX,cAAQ,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAChC,aAAK,QAAQ,GAAG,IAAI;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,YAAY,aAAa;AAC3B,SAAK,IAAI,YAAY,GAAG,WAAW;AACnC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,YAAY;AACd,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,WAAO,KAAK,QAAQ,UAAU;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,KAAK;AACP,WAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,GAAG;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,YAAY;AACjB,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,QAAI,KAAK,QAAQ,UAAU,GAAG;AAC5B,aAAO,KAAK,QAAQ,UAAU;AAC9B,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,eAAW,UAAU,KAAK,SAAS;AACjC,UAAI,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS,MAAM,GAAG;AAC9D,eAAO,KAAK,QAAQ,MAAM;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,YAAY,SAAS;AAC3B,eAAW,UAAU,KAAK,SAAS;AACjC,UAAI,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS,MAAM,GAAG;AAC9D,mBAAW,KAAK,SAAS,KAAK,QAAQ,MAAM,GAAG,QAAQ,IAAI;AAAA,MAC7D;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,eAAe,cAAc;AAC/B,QAAI,CAAC,YAAY;AACf,cAAQ,MAAM,oCAAoC;AAClD,aAAO;AAAA,IACT;AACA,QAAI,CAAC,cAAc;AACjB,cAAQ,MAAM,6BAA6B;AAC3C,aAAO;AAAA,IACT;AACA,QAAI,aAAa,WAAW,GAAG;AAC7B,aAAO;AAAA,IACT;AACA,QAAI,KAAK,mBAAmB,IAAI,UAAU,GAAG;AAC3C,WAAK,QAAQ,UAAU,IAAI,oBAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AAAA,IACtD,WAAW,KAAK,QAAQ,UAAU,GAAG;AACnC,mBAAa,QAAQ,iBAAe,KAAK,QAAQ,UAAU,EAAE,IAAI,WAAW,CAAC;AAAA,IAC/E,OAAO;AACL,WAAK,QAAQ,UAAU,IAAI,IAAI,IAAI,YAAY;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,YAAY,aAAa;AAC9B,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAC9C;AACA,QAAI,CAAC,KAAK,QAAQ,UAAU,GAAG;AAC7B,WAAK,QAAQ,UAAU,IAAI,oBAAI,IAAI,CAAC,WAAW,CAAC;AAChD,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,YAAY,aAAa;AAC9B,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD;AACA,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAC9C;AACA,QAAI,KAAK,QAAQ,UAAU,GAAG;AAC5B,YAAM,SAAS,KAAK,QAAQ,UAAU,EAAE,OAAO,WAAW;AAC1D,UAAI,KAAK,QAAQ,UAAU,EAAE,SAAS,GAAG;AACvC,eAAO,KAAK,QAAQ,UAAU;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,SAAS;AACd,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AACA,eAAW,UAAU,QAAQ,SAAS;AACpC,UAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,SAAS,MAAM,GAAG;AACjE,gBAAQ,QAAQ,MAAM,EAAE,QAAQ,WAAS,KAAK,IAAI,QAAQ,KAAK,CAAC;AAAA,MAClE;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU,SAAS;AACjB,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AACA,eAAW,UAAU,SAAS;AAC5B,UAAI,OAAO,UAAU,eAAe,KAAK,SAAS,MAAM,GAAG;AACzD,cAAM,eAAe,QAAQ,MAAM;AACnC,YAAI,MAAM,QAAQ,YAAY,GAAG;AAC/B,eAAK,IAAI,QAAQ,GAAG,YAAY;AAAA,QAClC,OAAO;AACL,eAAK,IAAI,QAAQ,YAAY;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,KAAK;AACf,QAAI,CAAC,KAAK;AACR,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AACA,WAAO,KAAK,QAAQ,GAAG,IAAI,MAAM,KAAK,KAAK,QAAQ,GAAG,CAAC,IAAI;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AAET,WAAO,KAAK,UAAU,KAAK,SAAS,CAAC,MAAM,UAAU,iBAAiB,MAAM,CAAC,GAAG,KAAK,IAAI,KAAK;AAAA,EAChG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,WAAO,OAAO,KAAK,KAAK,OAAO,EAAE,WAAW;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,WAAO,OAAO,KAAK,KAAK,OAAO,EAAE,OAAO,QAAQ,EAAE;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,WAAO,OAAO,QAAQ,KAAK,OAAO,EAAE,OAAO,QAAQ,EAAE;AAAA,EACvD;AACF;;;ACzPO,IAAM,gBAAN,MAAoB;AAAA;AAAA;AAAA;AAAA,EAIzB,cAAc;AACZ,SAAK,SAAS,CAAC;AACf,SAAK,YAAY,WAAW,EAAE,QAAQ,MAAM,EAAE;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,iBAAiB,UAAU,iBAAiB,SAAS,uBAAuB,UAAU;AACpF,QAAI,CAAC,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC7D,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACvD;AACA,QAAI,CAAC,QAAS,OAAM,IAAI,MAAM,6BAA6B;AAC3D,UAAM,oBAAoB,KAAK,kBAAkB,QAAQ;AACzD,SAAK,OAAO,iBAAiB,IAAI;AAAA,MAC/B,aAAa;AAAA,MACb;AAAA,MACA,cAAc;AAAA,MACd;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,UAAU;AACrB,QAAI,CAAC,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC7D,UAAM,oBAAoB,KAAK,kBAAkB,QAAQ;AACzD,UAAM,YAAY,KAAK,OAAO,iBAAiB;AAC/C,QAAI,CAAC,UAAW,QAAO;AACvB,WAAO,UAAU;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,UAAU;AACnB,QAAI,CAAC,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC7D,UAAM,oBAAoB,KAAK,kBAAkB,QAAQ;AACzD,QAAI,CAAC,KAAK,OAAO,iBAAiB,EAAG,QAAO;AAC5C,WAAO,KAAK,OAAO,iBAAiB;AACpC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EACA,kBAAkB,UAAU;AAC1B,WAAO,SAAS,kBAAkB;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY;AACV,WAAO,KAAK;AAAA,EACd;AACF;AACO,IAAM,yBAAyB,CAAC,QAAQ,gBAAgB,IAAI,cAAc,MAAM;AACrF,MAAI,CAAC,QAAQ;AACX,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAC9C;AACA,MAAI,CAAC,eAAe;AAClB,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACrD;AACA,MAAI,CAAC,cAAc,WAAW;AAC5B,UAAM,IAAI,MAAM,6CAA6C;AAAA,EAC/D;AACA,MAAI,CAAC,cAAc,aAAa;AAC9B,UAAM,IAAI,MAAM,+CAA+C;AAAA,EACjE;AACA,QAAM,QAAQ,cAAc,UAAU;AACtC,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AACnC,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACjD;AACA,QAAM,WAAW,cAAc,YAAY;AAC3C,MAAI,QAAQ;AACZ,aAAW,YAAY,OAAO;AAC5B,QAAI,OAAO,UAAU,eAAe,KAAK,OAAO,QAAQ,GAAG;AACzD,UAAI,OAAO;AACT,gBAAQ;AAAA,MACV,OAAO;AACL,eAAO,iBAAiB,QAAW,MAAM;AAAA,MAC3C;AACA,aAAO,iBAAiB,QAAW,OAAO,QAAQ;AAClD,aAAO,iBAAiB,QAAW,MAAM;AACzC,YAAM,OAAO,MAAM,QAAQ;AAC3B,aAAO,iBAAiB,gBAAgB,KAAK,WAAW;AACxD,aAAO,iBAAiB,QAAW,MAAM;AACzC,aAAO,iBAAiB,uBAAuB,oBAAoB,KAAK,YAAY,IAAI,KAAK,WAAW,eAAe,KAAK,QAAQ,MAAM,EAAE,EAAE;AAC9I,aAAO,iBAAiB,QAAW,MAAM;AACzC,aAAO,iBAAiB,QAAW,MAAM;AACzC,UAAI,OAAO,KAAK,YAAY,UAAU;AACpC,eAAO,iBAAiB,QAAW,KAAK,OAAO;AAAA,MACjD,WAAW,KAAK,mBAAmB,aAAa;AAC9C,eAAO,oBAAoB,QAAW,IAAI,WAAW,KAAK,OAAO,CAAC;AAAA,MACpE,WAAW,KAAK,mBAAmB,YAAY;AAC7C,eAAO,oBAAoB,QAAW,KAAK,OAAO;AAAA,MACpD,WAAW,KAAK,uBAAuB;AACrC,YAAI,CAAC,cAAc,gBAAgB;AACjC,gBAAM,IAAI,MAAM,oCAAoC;AAAA,QACtD;AACA,cAAM,6BAA6B,cAAc,eAAe,8BAA8B;AAC9F,YAAI,CAAC,4BAA4B;AAC/B,gBAAM,IAAI,MAAM,gDAAgD;AAAA,QAClE;AACA,cAAM,0BAA0B,2BAA2B,uBAAuB,KAAK,WAAW;AAClG,YAAI,CAAC,yBAAyB;AAC5B,gBAAM,IAAI,MAAM,uDAAuD,KAAK,WAAW;AAAA,QACzF;AACA,gCAAwB,iBAAiB,QAAW,KAAK,SAAS,KAAK,qBAAqB;AAC5F,cAAM,cAAc,wBAAwB,qBAAqB;AACjE,eAAO,oBAAoB,QAAW,IAAI,WAAW,WAAW,CAAC;AAAA,MACnE,OAAO;AACL,cAAM,IAAI,MAAM,kDAAkD,OAAO,KAAK,OAAO;AAAA,MACvF;AAAA,IACF;AAAA,EACF;AACA,SAAO,iBAAiB,QAAW,MAAM;AACzC,SAAO,iBAAiB,QAAW,OAAO,WAAW,IAAI;AACzD,SAAO,iBAAiB,QAAW,MAAM;AAC3C;AACO,IAAM,+BAA+B,CAAC,IAAI,IAAI,cAAc,MAAM;AACvE,QAAM,IAAI,MAAM,iBAAiB;AACnC;AACO,IAAM,sCAAsC,eAAa;AAC9D,MAAI,CAAC,UAAW,OAAM,IAAI,MAAM,+BAA+B;AAC/D,SAAO;AACT;;;AC1IO,IAAM,WAAN,MAAM,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAepB,YAAY;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,UAAU;AAAA,IACV,cAAc;AAAA,EAChB,GAAG;AACD,QAAI,QAAQ,KAAK,QAAQ,IAAI;AAC3B,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,QAAI,UAAU,KAAK,UAAU,IAAI;AAC/B,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD;AACA,QAAI,UAAU,KAAK,UAAU,IAAI;AAC/B,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD;AACA,QAAI,cAAc,KAAK,cAAc,SAAS;AAC5C,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,SAAS,MAAM;AACpB,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,WAAO,IAAI,UAAS;AAAA,MAClB,OAAO,KAAK,SAAS;AAAA,MACrB,SAAS,KAAK,WAAW;AAAA,MACzB,SAAS,KAAK,WAAW;AAAA,MACzB,aAAa,KAAK,gBAAgB,IAAI;AAAA,IACxC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,MAAM,OAAO;AAClB,QAAIC,KAAI,IAAI,IAAI;AAChB,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,KAAK,MAAM,KAAK;AAC9B,QAAI,MAAM,KAAK,GAAG;AAEhB,YAAM,OAAO,4DAA4D,KAAK,KAAK;AACnF,UAAI,MAAM;AACR,cAAM,QAAQ,UAAUA,MAAK,KAAK,CAAC,OAAO,QAAQA,QAAO,SAASA,MAAK,IAAI,EAAE;AAC7E,cAAM,UAAU,UAAU,KAAK,KAAK,CAAC,OAAO,QAAQ,OAAO,SAAS,KAAK,IAAI,EAAE;AAC/E,cAAM,UAAU,UAAU,KAAK,KAAK,CAAC,OAAO,QAAQ,OAAO,SAAS,KAAK,IAAI,EAAE;AAC/E,cAAM,eAAe,UAAU,KAAK,KAAK,CAAC,OAAO,QAAQ,OAAO,SAAS,KAAK,KAAK,EAAE;AACrF,eAAO,IAAI,UAAS;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA,aAAa;AAAA,QACf,CAAC;AAAA,MACH,OAAO;AACL,cAAM,IAAI,MAAM,+CAA+C;AAAA,MACjE;AAAA,IACF,OAAO;AACL,YAAM,OAAO,IAAI,KAAK,KAAK;AAC3B,aAAO,KAAK,SAAS,IAAI;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AACT,WAAO,GAAG,cAAc,KAAK,OAAO,CAAC,CAAC,IAAI,cAAc,KAAK,SAAS,CAAC,CAAC,IAAI,cAAc,KAAK,SAAS,CAAC,CAAC,IAAI,cAAc,KAAK,aAAa,CAAC,CAAC;AAAA,EAClJ;AACF;;;AC5FO,IAAM,qBAAN,MAAM,oBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9B,YAAY,YAAY,aAAa,gBAAgB;AAEnD,SAAK,iBAAiB,oCAAoC;AAE1D,SAAK,kBAAkB,oCAAoC;AAE3D,SAAK,UAAU,IAAI,QAAQ;AAC3B,SAAK,kBAAkB,oCAAoC;AAQ3D,SAAK,yBAAyB,CAAC,gBAAgB,aAAa,OAAO,4BAA4B;AAC7F,YAAM,UAAU,oBAAmB,SAAS,EAAE,gBAAgB,0BAA0B,UAAQ;AAC9F,YAAI;AACF,gBAAM,SAAS,KAAK,uBAAuB,gBAAgB,aAAa,KAAK;AAC7E,cAAI,iBAAiB,eAAe;AAClC,2BAAe,gBAAgB,MAAM,YAAY;AAAA,UACnD;AACA,cAAI,CAAC,KAAK,SAAS;AACjB,iBAAK,UAAU,IAAI,QAAQ;AAAA,UAC7B;AACA,cAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,iBAAK,aAAa,oBAAmB,gBAAgB,UAAU;AAC/D,mBAAO,8BAA8B,QAAW,OAAO,uBAAuB;AAAA,UAChF,OAAO;AACL,iBAAK,aAAa,oBAAmB,gBAAgB,QAAQ;AAC7D,mBAAO,iBAAiB,QAAW,OAAO,uBAAuB;AAAA,UACnE;AACA,eAAK,yBAAyB,QAAQ,WAAW;AAAA,QACnD,UAAE;AACA,eAAK,IAAI;AAAA,QACX;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,2BAA2B,CAAC,QAAQ,gBAAgB;AACvD,UAAI,aAAa;AACf,aAAK,QAAQ,OAAO,oBAAmB,mBAAmB,WAAW;AAAA,MACvE;AACA,WAAK,UAAU,OAAO,qBAAqB;AAAA,IAC7C;AACA,SAAK,yBAAyB,CAAC,gBAAgB,gBAAgB,WAAW;AACxE,UAAI,CAAC,eAAgB,OAAM,IAAI,MAAM,8BAA8B;AACnE,UAAI,CAAC,YAAa,OAAM,IAAI,MAAM,iCAAiC;AACnE,UAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAClC,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,8BAA8B,EAAE,uBAAuB,WAAW;AAAA,IAC1F;AAOA,SAAK,uBAAuB,CAAC,gBAAgB,aAAa,UAAU;AAClE,YAAM,UAAU,oBAAmB,SAAS,EAAE,gBAAgB,wBAAwB,UAAQ;AAC5F,YAAI;AACF,gBAAM,SAAS,KAAK,uBAAuB,gBAAgB,aAAa,KAAK;AAC7E,cAAI,CAAC,KAAK,SAAS;AACjB,iBAAK,UAAU,IAAI,QAAQ;AAAA,UAC7B;AACA,cAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,iBAAK,aAAa,oBAAmB,gBAAgB,IAAI;AACzD,mBAAO,iCAAiC,QAAW,KAAK;AAAA,UAC1D,OAAO;AACL,kBAAM,YAAY,OAAO;AACzB,iBAAK,aAAa,oBAAmB,gBAAgB,SAAS;AAC9D,gBAAI,CAAC,OAAO;AACV,qBAAO,eAAe,MAAS;AAAA,YACjC,WAAW,cAAc,WAAW;AAClC,qBAAO,kBAAkB,QAAW,KAAK;AAAA,YAC3C,WAAW,cAAc,UAAU;AACjC,qBAAO,iBAAiB,QAAW,KAAK;AAAA,YAC1C,WAAW,iBAAiB,MAAM;AAChC,qBAAO,eAAe,QAAW,KAAK;AAAA,YACxC,WAAW,iBAAiB,UAAU;AACpC,qBAAO,mBAAmB,QAAW,KAAK;AAAA,YAC5C,WAAW,iBAAiB,UAAU;AACpC,qBAAO,mBAAmB,QAAW,KAAK;AAAA,YAC5C,WAAW,iBAAiB,UAAU;AACpC,qBAAO,mBAAmB,QAAW,KAAK;AAAA,YAC5C,WAAW,cAAc,UAAU;AACjC,qBAAO,iBAAiB,QAAW,KAAK;AAAA,YAC1C,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,qBAAO,iCAAiC,QAAW,KAAK;AAAA,YAC1D,OAAO;AACL,oBAAM,IAAI,MAAM,uDAAuD,SAAS,EAAE;AAAA,YACpF;AAAA,UACF;AACA,eAAK,yBAAyB,QAAQ,WAAW;AAAA,QACnD,UAAE;AACA,eAAK,IAAI;AAAA,QACX;AAAA,MACF,CAAC;AAAA,IACH;AAMA,SAAK,mBAAmB,CAAC,OAAO,gBAAgB;AAC9C,UAAI,CAAC,aAAa;AAChB,sBAAc,oBAAmB;AAAA,MACnC;AACA,WAAK,QAAQ,OAAO,oBAAmB,mBAAmB,WAAW;AACrE,WAAK,UAAU;AAAA,IACjB;AACA,QAAI,YAAY;AACd,WAAK,aAAa;AAAA,IACpB;AACA,QAAI,aAAa;AACf,WAAK,cAAc;AAAA,IACrB;AACA,QAAI,gBAAgB;AAClB,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,MAAM;AACR,UAAM,SAAS,KAAK,eAAe,oBAAmB,WAAW;AACjE,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK;AAAA,IACd,WAAW,QAAQ;AACjB,WAAK,MAAM;AACX,aAAO;AAAA,IACT,WAAW,CAAC,KAAK,iBAAiB;AAChC,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACvD,WAAW,CAAC,KAAK,gBAAgB;AAC/B,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACtD,WAAW,CAAC,KAAK,aAAa;AAC5B,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD,OAAO;AACL,YAAM,OAAO,CAAC;AACd,iBAAW,OAAO,KAAK,iBAAiB;AACtC,YAAI,KAAK,gBAAgB,GAAG,MAAM,QAAQ,KAAK,gBAAgB,GAAG,MAAM,QAAW;AACjF,eAAK,GAAG,IAAI,KAAK,eAAe,KAAK,gBAAgB,GAAG,CAAC;AAAA,QAC3D;AAAA,MACF;AACA,iBAAW,OAAO,KAAK,gBAAgB;AACrC,YAAI,KAAK,eAAe,GAAG,MAAM,QAAQ,KAAK,eAAe,GAAG,MAAM,QAAW;AAC/E,eAAK,GAAG,IAAI,KAAK,eAAe,KAAK,eAAe,GAAG,CAAC;AAAA,QAC1D;AAAA,MACF;AACA,aAAO,eAAe,OAAO,KAAK,aAAa,IAAI;AAAA,IACrD;AAAA,EACF;AAAA;AAAA,EAEA,IAAI,IAAI,KAAK;AACX,QAAI,CAAC,IAAK,OAAM,IAAI,MAAM,yBAAyB;AACnD,SAAK,MAAM;AACX,SAAK,kBAAkB,CAAC;AACxB,SAAK,iBAAiB,CAAC;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB,QAAQ;AACxB,QAAI,QAAQ;AACV,WAAK,QAAQ,UAAU,MAAM;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB,SAAS;AACzB,QAAI,CAAC,WAAW,QAAQ,WAAW,EAAG;AACtC,YAAQ,QAAQ,YAAU;AACxB,WAAK,gBAAgB,OAAO,OAAO,CAAC,IAAI;AAAA,IAC1C,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB,SAAS;AAC/B,QAAI,CAAC,WAAW,QAAQ,WAAW,EAAG;AACtC,YAAQ,QAAQ,YAAU;AACxB,aAAO,KAAK,gBAAgB,OAAO,OAAO,CAAC;AAAA,IAC7C,CAAC;AAAA,EACH;AAAA,EACA,eAAe,OAAO;AACpB,QAAI,iBAAiB,YAAY,iBAAiB,YAAY,iBAAiB,UAAU;AACvF,aAAO,MAAM,SAAS;AAAA,IACxB;AACA,QAAI,iBAAiB,MAAM;AACzB,aAAO,MAAM,YAAY;AAAA,IAC3B;AACA,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,aAAO,MAAM,IAAI,SAAO,KAAK,eAAe,GAAG,CAAC;AAAA,IAClD;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sCAAsC,GAAG,GAAG;AAC1C,QAAI,MAAM,QAAQ,MAAM,OAAW;AACnC,WAAO,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM;AACpC,UAAI,MAAM;AACV,UAAI,GAAG;AACL,cAAM,eAAe,EAAE,GAAG;AAC1B,YAAI,cAAc;AAChB,gBAAM;AAAA,QACR;AAAA,MACF;AACA,UAAI,OAAO,MAAM,aAAa,OAAO,MAAM,YAAY,OAAO,MAAM,YAAY,MAAM,QAAQ,CAAC,EAAG,MAAK,gBAAgB,GAAG,IAAI;AAAA,eAAW,aAAa,YAAY,aAAa,YAAY,aAAa,SAAU,MAAK,gBAAgB,GAAG,IAAI,EAAE,SAAS;AAAA,eAAW,aAAa,KAAM,MAAK,gBAAgB,GAAG,IAAI,EAAE,YAAY;AAAA,eAAW,MAAM,OAAW,MAAK,gBAAgB,GAAG,IAAI;AAAA,IAC3X,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,QAAQ,uBAAuB;AACvC,QAAI,CAAC,OAAQ;AACb,SAAK,kBAAkB,OAAO,OAAO;AACrC,SAAK,sCAAsC,OAAO,iBAAiB,qBAAqB;AACxF,SAAK,kBAAkB,OAAO,OAAO;AAAA,EACvC;AACF;AACA,mBAAmB,cAAc;AACjC,mBAAmB,oBAAoB;AACvC,mBAAmB,oBAAoB;AACvC,mBAAmB,YAAY;AAC/B,mBAAmB,iBAAiB;;;ACjQ7B,IAAM,oBAAoB,gBAAc;AAC7C,QAAM,SAAS,CAAC;AAChB,MAAI,OAAO,eAAe,UAAU;AAClC,WAAO,mBAAmB,WAAW,IAAI;AAAA,EAC3C,WAAW,YAAY;AACrB,eAAW,OAAO,YAAY;AAC5B,UAAI,OAAO,UAAU,eAAe,KAAK,YAAY,GAAG,GAAG;AACzD,eAAO,GAAG,IAAI,WAAW,GAAG;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;;;ACVO,IAAI;AAAA,CACV,SAAUC,aAAY;AAErB,EAAAA,YAAW,KAAK,IAAI;AAEpB,EAAAA,YAAW,MAAM,IAAI;AAErB,EAAAA,YAAW,OAAO,IAAI;AAEtB,EAAAA,YAAW,QAAQ,IAAI;AAEvB,EAAAA,YAAW,SAAS,IAAI;AAExB,EAAAA,YAAW,SAAS,IAAI;AAExB,EAAAA,YAAW,OAAO,IAAI;AAEtB,EAAAA,YAAW,MAAM,IAAI;AAErB,EAAAA,YAAW,KAAK,IAAI;AACtB,GAAG,eAAe,aAAa,CAAC,EAAE;;;ACpBlC,IAAM,qBAAqB,gBAAc;AACvC,MAAI,WAAW,WAAW,IAAI,GAAG;AAC/B,WAAO,WAAW,UAAU,CAAC,EAAE,QAAQ,sBAAsB,EAAE,EAAE,YAAY;AAAA,EAC/E;AACA,SAAO;AACT;AACA,IAAM,mBAAmB,SAAO;AAC9B,UAAQ,mBAAmB,GAAG,GAAG;AAAA,IAC/B,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEA,IAAM,uBAAuB,CAAC,aAAa,gBAAgB,UAAU,gBAAgB,YAAY,MAAM,eAAe,yBAAyB;AAC7I,QAAM,cAAc,IAAI,mBAAmB,YAAY,aAAa,cAAc;AAClF,cAAY,UAAU,sBAAsB,SAAS,qBAAqB;AAC1E,2BAAyB,UAAU,WAAW;AAC9C,MAAI,SAAS,uBAAuB;AAClC,QAAI,CAAC,KAAM,OAAM,IAAI,MAAM,0BAA0B;AACrD,QAAI,OAAO,SAAS,0BAA0B,YAAY;AACxD,kBAAY,uBAAuB,gBAAgB,SAAS,yBAAyB,SAAS,yBAAyB,eAAe,MAAM,SAAS,qBAAqB;AAAA,IAC5K,OAAO;AACL,kBAAY,qBAAqB,gBAAgB,SAAS,yBAAyB,SAAS,yBAAyB,eAAe,IAAI;AAAA,IAC1I;AAAA,EACF,WAAW,SAAS,uCAAuC,oBAAoB;AAC7E,QAAI,CAAC,KAAM,OAAM,IAAI,MAAM,0BAA0B;AACrD,gBAAY,iBAAiB,MAAM,SAAS,yBAAyB,SAAS,yBAAyB,aAAa;AAAA,EACtH;AACA,SAAO;AACT;AACA,IAAM,2BAA2B,CAAC,UAAU,gBAAgB;AAC1D,MAAI,SAAS,yBAAyB;AACpC,gBAAY,QAAQ,OAAO,UAAU,SAAS,uBAAuB;AAAA,EACvE;AACF;AACA,IAAM,sCAAsC,CAAC,iBAAiB,SAAS;AACrE,MAAI,KAAK,SAAS,KAAK,CAAC,gBAAgB,yBAAyB,gBAAgB,uCAAuC,sBAAsB,OAAO,KAAK,CAAC,MAAM,UAAU;AAEzK,WAAO,KAAK,CAAC;AAAA,EACf;AACA,SAAO;AACT;AACA,IAAM,+BAA+B,UAAQ;AAC3C,MAAI,KAAK,SAAS,GAAG;AAEnB,WAAO,KAAK,KAAK,SAAS,CAAC;AAAA,EAC7B;AACA,SAAO;AACT;AACA,IAAM,OAAO,CAAC,gBAAgB,aAAa,aAAa;AACtD,UAAQ,SAAS,mBAAmB;AAAA,IAClC,KAAK;AACH,UAAI,CAAC,SAAS,qBAAqB;AACjC,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,KAAK,aAAa,SAAS,qBAAqB,SAAS,aAAa;AAAA,IAC9F,KAAK;AACH,UAAI,CAAC,SAAS,qBAAqB;AACjC,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,eAAe,aAAa,SAAS,qBAAqB,SAAS,aAAa;AAAA,IACxG,KAAK;AACH,UAAI,CAAC,SAAS,YAAY;AACxB,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,SAAS,aAAa,SAAS,YAAY,SAAS,aAAa;AAAA,IACzF,KAAK;AACH,UAAI,CAAC,SAAS,YAAY;AACxB,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,qBAAqB,aAAa,SAAS,YAAY,SAAS,aAAa;AAAA,IACrG,KAAK;AACH,UAAI,CAAC,SAAS,qBAAqB;AACjC,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,0BAA0B,aAAa,SAAS,qBAAqB,SAAS,aAAa;AAAA,IACnH,KAAK;AACH,UAAI,CAAC,SAAS,qBAAqB;AACjC,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AACA,aAAO,eAAe,cAAc,aAAa,SAAS,qBAAqB,SAAS,aAAa;AAAA,IACvG,KAAK;AACH,aAAO,eAAe,sBAAsB,aAAa,SAAS,aAAa;AAAA,IACjF;AACE,YAAM,IAAI,MAAM,8BAA8B;AAAA,EAClD;AACF;AACO,IAAM,qBAAqB,CAAC,gBAAgB,gBAAgB,oBAAoB,qBAAqB;AAC1G,MAAI,CAAC,eAAgB,OAAM,IAAI,MAAM,oCAAoC;AACzE,MAAI,CAAC,eAAgB,OAAM,IAAI,MAAM,oCAAoC;AACzE,SAAO,IAAI,MAAM,CAAC,GAAG;AAAA,IACnB,KAAK,CAAC,GAAG,aAAa;AACpB,YAAM,OAAO,OAAO,QAAQ;AAC5B,UAAI,SAAS,WAAW;AACtB,eAAO,YAAU;AACf,cAAI,CAAC,OAAQ,OAAM,IAAI,MAAM,4BAA4B;AACzD,iBAAO,mBAAmB,gBAAgB,kBAAkB,MAAM,GAAG,oBAAoB,gBAAgB;AAAA,QAC3G;AAAA,MACF;AACA,UAAI,kBAAkB;AACpB,cAAM,cAAc,iBAAiB,IAAI;AACzC,YAAI,aAAa;AACf,gBAAM,WAAW,iBAAiB,WAAW;AAC7C,cAAI,UAAU;AACZ,oBAAQ,MAAM;AAAA,cACZ,KAAK;AACH,uBAAO,0BAAwB;AAC7B,wBAAM,cAAc,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,KAAK,QAAW,QAAW,oBAAoB;AACnK,yBAAO,KAAK,gBAAgB,aAAa,QAAQ;AAAA,gBACnD;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,wBAAM,cAAc,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,OAAO,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AACzP,yBAAO,KAAK,gBAAgB,aAAa,QAAQ;AAAA,gBACnD;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,wBAAM,cAAc,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AACvP,yBAAO,KAAK,gBAAgB,aAAa,QAAQ;AAAA,gBACnD;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,wBAAM,cAAc,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AAC1P,yBAAO,KAAK,gBAAgB,aAAa,QAAQ;AAAA,gBACnD;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,wBAAM,cAAc,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AACxP,yBAAO,KAAK,gBAAgB,aAAa,QAAQ;AAAA,gBACnD;AAAA,cACF,KAAK;AACH,uBAAO,0BAAwB;AAC7B,yBAAO,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,KAAK,QAAW,QAAW,oBAAoB;AAAA,gBACxJ;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,yBAAO,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,OAAO,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AAAA,gBAC9O;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,yBAAO,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AAAA,gBAC5O;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,yBAAO,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AAAA,gBAC/O;AAAA,cACF,KAAK;AACH,uBAAO,IAAI,SAAS;AAClB,yBAAO,qBAAqB,SAAS,aAAa,gBAAgB,UAAU,gBAAgB,WAAW,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,QAAW,oCAAoC,UAAU,IAAI,GAAG,6BAA6B,IAAI,CAAC;AAAA,gBAC7O;AAAA,cACF;AACE;AAAA,YACJ;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,UAAI,oBAAoB;AACtB,cAAM,sBAAsB,mBAAmB,IAAI;AACnD,YAAI,qBAAqB;AACvB,cAAI,CAAC,oBAAoB,0BAA0B,oBAAoB,uBAAuB,WAAW,GAAG;AAE1G,mBAAO,mBAAmB,gBAAgB,kBAAkB,cAAc,GAAG,oBAAoB,oBAAoB,oBAAoB,gBAAgB;AAAA,UAC3J;AACA,iBAAO,IAAI,aAAa;AAEtB,kBAAM,yBAAyB,kBAAkB,cAAc;AAC/D,gBAAI,oBAAoB,0BAA0B,oBAAoB,uBAAuB,SAAS,GAAG;AACvG,uBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,sBAAM,UAAU,SAAS,CAAC;AAC1B,oBAAI,YAAY,UAAa,YAAY,QAAQ,YAAY,IAAI;AAC/D,wBAAM,IAAI,MAAM,kBAAkB,oBAAoB,uBAAuB,CAAC,CAAC,sBAAsB;AAAA,gBACvG,OAAO;AACL,yCAAuB,oBAAoB,uBAAuB,CAAC,CAAC,IAAI;AAAA,gBAC1E;AAAA,cACF;AAAA,YACF;AACA,mBAAO,mBAAmB,gBAAgB,wBAAwB,oBAAoB,oBAAoB,oBAAoB,gBAAgB;AAAA,UAChJ;AAAA,QACF;AACA,cAAM,IAAI,MAAM,qCAAqC,IAAI,UAAU,KAAK,UAAU,kBAAkB,CAAC,EAAE;AAAA,MACzG;AAAA,IACF;AAAA,EACF,CAAC;AACH;;;ACvMO,IAAM,kBAAN,cAA8B,MAAM;AAAA,EACzC,YAAY,SAAS;AACnB,UAAM,OAAO;AACb,SAAK,kBAAkB,CAAC;AAAA,EAC1B;AACF;;;ACFO,IAAM,wBAAN,MAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,YAAY,eAAe,oBAAI,IAAI,GAAG;AACpC,SAAK,cAAc,YAAY;AAC/B,SAAK,eAAe,iBAAiB,QAAQ,iBAAiB,SAAS,eAAe,oBAAI,IAAI;AAAA,EAChG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,WAAO,MAAM,KAAK,KAAK,YAAY;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,cAAc;AAC5B,SAAK,cAAc,YAAY;AAC/B,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,KAAK;AAClB,QAAIC,KAAI;AACR,QAAI,CAAC,IAAK,QAAO;AACjB,QAAI,KAAK,aAAa,SAAS,EAAG,QAAO;AACzC,UAAM,gBAAgB,IAAI,MAAM,KAAK;AACrC,QAAI,cAAc,UAAU,GAAG;AAC7B,YAAM,OAAO,cAAc,CAAC;AAC5B,UAAI,MAAM;AACR,eAAO,KAAK,mBAAmB,IAAI;AAAA,MACrC;AAAA,IACF,WAAW,CAAC,IAAI,WAAW,MAAM,GAAG;AAElC,aAAO,KAAK,mBAAmB,GAAG;AAAA,IACpC;AACA,SAAKA,MAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,cAAc,QAAQA,QAAO,SAAS,SAASA,IAAG,MAAM;AACvH,aAAO,KAAK,aAAa,KAAK,KAAK,OAAO,SAAS,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,CAAC;AAAA,IAChH;AACA,WAAO;AAAA,EACT;AAAA,EACA,mBAAmB,MAAM;AACvB,UAAM,cAAc,KAAK,MAAM,GAAG;AAClC,QAAI,YAAY,UAAU,GAAG;AAC3B,YAAM,OAAO,YAAY,CAAC;AAC1B,UAAI,MAAM;AACR,eAAO,KAAK,aAAa,IAAI,KAAK,YAAY,CAAC;AAAA,MACjD;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,iBAAiB;AAC7B,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,oBAAgB,QAAQ,UAAQ;AAC9B,UAAI,KAAK,YAAY,EAAE,WAAW,SAAS,KAAK,KAAK,YAAY,EAAE,WAAW,UAAU,GAAG;AACzF,cAAM,IAAI,MAAM,8CAA8C;AAAA,MAChE;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACvEA,IAAM,mBAAmB,oBAAI,IAAI,CAAC,aAAa,SAAS,OAAO,WAAW,CAAC;AAKpE,SAAS,iBAAiB,KAAK;AACpC,MAAI,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,kBAAkB,EAAE,WAAW,UAAU,KAAK,CAAC,yBAAyB,GAAG;AAC1G,UAAM,IAAI,MAAM,4DAA4D;AAAA,EAC9E;AACF;AAKA,SAAS,2BAA2B;AAClC,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO,OAAO,SAAS,SAAS,kBAAkB,MAAM;AAAA,EAC1D;AACA,SAAO;AACT;AAMO,SAAS,eAAe,WAAW;AACxC,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,WAAO,iBAAiB,IAAI,IAAI,QAAQ;AAAA,EAC1C,SAASC,KAAI;AACX,WAAO;AAAA,EACT;AACF;;;ACpCO,IAAM,+BAAN,MAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxC,YAAY,QAAQ,eAAe,UAAU,YAAY;AACvD,SAAK,SAAS;AACd,SAAK,gBAAgB;AACrB,SAAK,WAAW;AAChB,QAAI,WAAW,UAAa,WAAW,IAAI;AACzC,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,QAAI,kBAAkB,UAAa,kBAAkB,IAAI;AACvD,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AACA,QAAI,aAAa,eAAe,kBAAkB,aAAa,eAAe,QAAQ;AACpF,YAAM,IAAI,MAAM,kDAAkD;AAAA,IACpE;AACA,SAAK,YAAY,IAAI,sBAAsB,UAAU;AAAA,EACvD;AAAA,EACA,oBAAoB,SAEpB,iCAAiC;AAC/B,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,OAAO,CAAC,KAAK,UAAU,eAAe,GAAG,GAAG;AAC/C,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,qBAAiB,GAAG;AACpB,YAAQ,KAAK,UAAU;AAAA,MACrB,KAAK,eAAe;AAClB,gBAAQ,QAAQ,IAAI,SAAS,GAAG,IAAI,MAAM,OAAO,KAAK,gBAAgB,MAAM,KAAK;AACjF;AAAA,MACF,KAAK,eAAe;AAClB,gBAAQ,QAAQ,IAAI,KAAK,eAAe,KAAK,MAAM;AACnD;AAAA,IACJ;AACA,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;AAEO,IAAI;AAAA,CACV,SAAUC,iBAAgB;AAEzB,EAAAA,gBAAeA,gBAAe,gBAAgB,IAAI,CAAC,IAAI;AAEvD,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,CAAC,IAAI;AACjD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;;;AClDnC,IAAM,kCAAN,MAAsC;AAAA,EAC3C,cAAc;AACZ,SAAK,sBAAsB,CAAC,GAAG,OAAO;AACpC,aAAO,QAAQ,QAAQ;AAAA,IACzB;AAAA,EACF;AACF;;;ACCO,IAAM,wCAAN,MAAM,uCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjD,YAAY,qBAAqB;AAC/B,SAAK,sBAAsB;AAC3B,SAAK,sBAAsB,CAAO,SAAS,oCAAoC;AAC7E,UAAIC;AACJ,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AACA,WAAK,oCAAoC,QAAQ,oCAAoC,SAAS,SAAS,gCAAgC,WAAW,QAAQ,QAAQ,IAAI,uCAAsC,sBAAsB,GAAG;AACnO,gBAAQ,QAAQ,OAAO,uCAAsC,sBAAsB;AAAA,MACrF;AACA,UAAI,GAAGA,MAAK,QAAQ,aAAa,QAAQA,QAAO,SAAS,SAASA,IAAG,IAAI,uCAAsC,sBAAsB,IAAI;AACvI,cAAM,QAAQ,MAAM,KAAK,oBAAoB,sBAAsB,QAAQ,KAAK,+BAA+B;AAC/G,YAAI,CAAC,QAAQ,SAAS;AACpB,kBAAQ,UAAU,IAAI,QAAQ;AAAA,QAChC;AACA,YAAI,OAAO;AACT,kBAAQ,QAAQ,IAAI,uCAAsC,wBAAwB,UAAU,KAAK,EAAE;AAAA,QACrG;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,sCAAsC,yBAAyB;;;AClCxD,IAAM,wBAAN,MAA4B;AAAA,EACjC,eAAe,UAAU,eAAe;AACtC,SAAK,QAAQ;AACb,SAAK,gBAAgB;AACrB,WAAO,QAAQ,QAAQ,MAAS;AAAA,EAClC;AACF;;;ACPA,IAAI;AASG,IAAM,wBAAN,MAA4B;AAAC;AACpC,KAAK;AACL,sBAAsB,mBAAmB,CAAO,cAAc,GAAG,GAAG,MAAM;AACxE,QAAM,kBAAkB,IAAI,sBAAsB;AAClD,QAAM,aAAa,GAAG,GAAG,GAAG,eAAe;AAC3C,SAAO,gBAAgB;AACzB;AACA,sBAAsB,2BAA2B,CAAO,cAAc,aAAa,GAAG,GAAG,MAAM;AAC7F,QAAM,kBAAkB,IAAI,sBAAsB;AAClD,QAAM,aAAa,aAAa,GAAG,GAAG,GAAG,eAAe;AACxD,SAAO,gBAAgB;AACzB;;;ACdO,IAAM,2BAA2B;AAIjC,IAAM,wBAAN,MAA4B;AAAA,EACjC,SAAS;AACP,WAAO;AAAA,EACT;AACF;",
  "names": ["s", "serialize", "isCompatible", "diag", "_a", "DiagComponentLogger", "DiagLogLevel", "__read", "__spreadArray", "DiagAPI", "self", "_a", "__read", "BaggageImpl", "_a", "BaseContext", "self", "context", "d", "b", "NoopMeter", "NoopMetric", "NoopCounterMetric", "NoopUpDownCounterMetric", "NoopGaugeMetric", "NoopHistogramMetric", "NoopObservableMetric", "NoopObservableCounterMetric", "NoopObservableGaugeMetric", "NoopObservableUpDownCounterMetric", "ValueType", "__read", "__spreadArray", "NoopContextManager", "__read", "__spreadArray", "API_NAME", "ContextAPI", "context", "_a", "TraceFlags", "NonRecordingSpan", "context", "_a", "NoopTracer", "context", "ProxyTracer", "context", "NoopTracerProvider", "ProxyTracerProvider", "_a", "SamplingDecision", "SpanKind", "SpanStatusCode", "TraceStateImpl", "diag", "NoopMeterProvider", "API_NAME", "MetricsAPI", "NoopTextMapPropagator", "context", "context", "API_NAME", "PropagationAPI", "context", "API_NAME", "TraceAPI", "_a", "parseDuration", "serializeDuration", "_a", "HttpMethod", "_a", "_a", "ApiKeyLocation", "_a"]
}
