/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createVehicleIncidentPhotoDtoFromDiscriminatorValue, serializeVehicleIncidentPhotoDto, serializeVehicleIncidentPhotoInputDto, type VehicleIncidentPhotoDto, type VehicleIncidentPhotoInputDto } from '../../models/index.js';
// @ts-ignore
import { ByIncidentRequestBuilderNavigationMetadata, type ByIncidentRequestBuilder } from './byIncident/index.js';
// @ts-ignore
import { type VehicleIncidentPhotosItemRequestBuilder, VehicleIncidentPhotosItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/VehicleIncidentPhotos
 */
export interface VehicleIncidentPhotosRequestBuilder extends BaseRequestBuilder<VehicleIncidentPhotosRequestBuilder> {
    /**
     * The ByIncident property
     */
    get byIncident(): ByIncidentRequestBuilder;
    /**
     * Gets an item from the ApiSdk.api.VehicleIncidentPhotos.item collection
     * @param id Unique identifier of the item
     * @returns {VehicleIncidentPhotosItemRequestBuilder}
     */
     byId(id: number) : VehicleIncidentPhotosItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleIncidentPhotoDto[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleIncidentPhotoDto[] | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleIncidentPhotoDto>}
     */
     post(body: VehicleIncidentPhotoInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleIncidentPhotoDto | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: VehicleIncidentPhotoInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VehicleIncidentPhotosRequestBuilderUriTemplate = "{+baseurl}/api/VehicleIncidentPhotos";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VehicleIncidentPhotosRequestBuilderNavigationMetadata: Record<Exclude<keyof VehicleIncidentPhotosRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: VehicleIncidentPhotosItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
    byIncident: {
        navigationMetadata: ByIncidentRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VehicleIncidentPhotosRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VehicleIncidentPhotosRequestBuilderUriTemplate,
        responseBodyContentType: "text/plain;q=0.9",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createVehicleIncidentPhotoDtoFromDiscriminatorValue,
    },
    post: {
        uriTemplate: VehicleIncidentPhotosRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createVehicleIncidentPhotoDtoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVehicleIncidentPhotoInputDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
