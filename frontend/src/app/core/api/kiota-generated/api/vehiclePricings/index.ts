/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createVehiclePricingDtoFromDiscriminatorValue, serializeVehiclePricingDto, serializeVehiclePricingInputDto, type VehiclePricingDto, type VehiclePricingInputDto } from '../../models/index.js';
// @ts-ignore
import { ByVehicleRequestBuilderNavigationMetadata, type ByVehicleRequestBuilder } from './byVehicle/index.js';
// @ts-ignore
import { ByVehicleAndSeasonRequestBuilderNavigationMetadata, type ByVehicleAndSeasonRequestBuilder } from './byVehicleAndSeason/index.js';
// @ts-ignore
import { CalculateRequestBuilderRequestsMetadata, type CalculateRequestBuilder } from './calculate/index.js';
// @ts-ignore
import { type VehiclePricingsItemRequestBuilder, VehiclePricingsItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/VehiclePricings
 */
export interface VehiclePricingsRequestBuilder extends BaseRequestBuilder<VehiclePricingsRequestBuilder> {
    /**
     * The ByVehicle property
     */
    get byVehicle(): ByVehicleRequestBuilder;
    /**
     * The ByVehicleAndSeason property
     */
    get byVehicleAndSeason(): ByVehicleAndSeasonRequestBuilder;
    /**
     * The Calculate property
     */
    get calculate(): CalculateRequestBuilder;
    /**
     * Gets an item from the ApiSdk.api.VehiclePricings.item collection
     * @param id Unique identifier of the item
     * @returns {VehiclePricingsItemRequestBuilder}
     */
     byId(id: number) : VehiclePricingsItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehiclePricingDto[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehiclePricingDto[] | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehiclePricingDto>}
     */
     post(body: VehiclePricingInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehiclePricingDto | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: VehiclePricingInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VehiclePricingsRequestBuilderUriTemplate = "{+baseurl}/api/VehiclePricings";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VehiclePricingsRequestBuilderNavigationMetadata: Record<Exclude<keyof VehiclePricingsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: VehiclePricingsItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
    byVehicle: {
        navigationMetadata: ByVehicleRequestBuilderNavigationMetadata,
    },
    byVehicleAndSeason: {
        navigationMetadata: ByVehicleAndSeasonRequestBuilderNavigationMetadata,
    },
    calculate: {
        requestsMetadata: CalculateRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VehiclePricingsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VehiclePricingsRequestBuilderUriTemplate,
        responseBodyContentType: "text/plain;q=0.9",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createVehiclePricingDtoFromDiscriminatorValue,
    },
    post: {
        uriTemplate: VehiclePricingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createVehiclePricingDtoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVehiclePricingInputDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
