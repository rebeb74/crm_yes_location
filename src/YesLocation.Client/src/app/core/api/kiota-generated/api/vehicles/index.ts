/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createVehicleDtoFromDiscriminatorValue, serializeVehicleDto, serializeVehicleInputDto, type VehicleDto, type VehicleInputDto } from '../../models/index.js';
// @ts-ignore
import { type VehiclesItemRequestBuilder, VehiclesItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/Vehicles
 */
export interface VehiclesRequestBuilder extends BaseRequestBuilder<VehiclesRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.api.Vehicles.item collection
     * @param id Unique identifier of the item
     * @returns {VehiclesItemRequestBuilder}
     */
     byId(id: number) : VehiclesItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleDto[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleDto[] | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleDto>}
     */
     post(body: VehicleInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleDto | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: VehicleInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VehiclesRequestBuilderUriTemplate = "{+baseurl}/api/Vehicles";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VehiclesRequestBuilderNavigationMetadata: Record<Exclude<keyof VehiclesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: VehiclesItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VehiclesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VehiclesRequestBuilderUriTemplate,
        responseBodyContentType: "text/plain;q=0.9",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createVehicleDtoFromDiscriminatorValue,
    },
    post: {
        uriTemplate: VehiclesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createVehicleDtoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVehicleInputDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
