/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCustomerDtoFromDiscriminatorValue, type CustomerDto } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/Customers/Search/{query}
 */
export interface WithQueryItemRequestBuilder extends BaseRequestBuilder<WithQueryItemRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CustomerDto[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CustomerDto[] | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithQueryItemRequestBuilderUriTemplate = "{+baseurl}/api/Customers/Search/{query}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithQueryItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: WithQueryItemRequestBuilderUriTemplate,
        responseBodyContentType: "text/plain;q=0.9",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createCustomerDtoFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
