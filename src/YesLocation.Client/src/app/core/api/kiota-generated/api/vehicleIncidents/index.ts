/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createVehicleIncidentDtoFromDiscriminatorValue, serializeVehicleIncidentDto, serializeVehicleIncidentInputDto, type VehicleIncidentDto, type VehicleIncidentInputDto } from '../../models/index.js';
// @ts-ignore
import { ByInspectionRequestBuilderNavigationMetadata, type ByInspectionRequestBuilder } from './byInspection/index.js';
// @ts-ignore
import { ByPartLocationRequestBuilderNavigationMetadata, type ByPartLocationRequestBuilder } from './byPartLocation/index.js';
// @ts-ignore
import { type VehicleIncidentsItemRequestBuilder, VehicleIncidentsItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/VehicleIncidents
 */
export interface VehicleIncidentsRequestBuilder extends BaseRequestBuilder<VehicleIncidentsRequestBuilder> {
    /**
     * The ByInspection property
     */
    get byInspection(): ByInspectionRequestBuilder;
    /**
     * The ByPartLocation property
     */
    get byPartLocation(): ByPartLocationRequestBuilder;
    /**
     * Gets an item from the ApiSdk.api.VehicleIncidents.item collection
     * @param id Unique identifier of the item
     * @returns {VehicleIncidentsItemRequestBuilder}
     */
     byId(id: number) : VehicleIncidentsItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleIncidentDto[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleIncidentDto[] | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VehicleIncidentDto>}
     */
     post(body: VehicleIncidentInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VehicleIncidentDto | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: VehicleIncidentInputDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VehicleIncidentsRequestBuilderUriTemplate = "{+baseurl}/api/VehicleIncidents";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VehicleIncidentsRequestBuilderNavigationMetadata: Record<Exclude<keyof VehicleIncidentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: VehicleIncidentsItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
    byInspection: {
        navigationMetadata: ByInspectionRequestBuilderNavigationMetadata,
    },
    byPartLocation: {
        navigationMetadata: ByPartLocationRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VehicleIncidentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VehicleIncidentsRequestBuilderUriTemplate,
        responseBodyContentType: "text/plain;q=0.9",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createVehicleIncidentDtoFromDiscriminatorValue,
    },
    post: {
        uriTemplate: VehicleIncidentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createVehicleIncidentDtoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVehicleIncidentInputDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
